

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 22 10:10:19 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   113                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   114   000000                     
   115                           ; Version 2.35
   116                           ; Generated 05/05/2021 GMT
   117                           ; 
   118                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution. Publication is not required when
   132                           ;        this file is used in an embedded application.
   133                           ; 
   134                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   135                           ;        software without specific prior written permission.
   136                           ; 
   137                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   138                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   139                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   140                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   141                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   142                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   143                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   144                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   145                           ; 
   146                           ; 
   147                           ; Code-generator required, PIC18F26K20 Definitions
   148                           ; 
   149                           ; SFR Addresses
   150   000000                     
   151                           	psect	idataCOMRAM
   152   0022A2                     __pidataCOMRAM:
   153                           	callstack 0
   154                           
   155                           ;initializer for main@F3020
   156   0022A2  1C                 	db	28
   157   0022A3  00                 	db	0
   158   0022A4  00                 	db	0
   159                           
   160                           ;initializer for main@F3018
   161   0022A5  30                 	db	48
   162   0022A6  64                 	db	100
   163   0022A7  C0                 	db	192
   164                           
   165                           	psect	smallconst
   166   001000                     __psmallconst:
   167                           	callstack 0
   168   001000  00                 	db	0
   169   001001                     _i2c_fsmStateTable:
   170                           	callstack 0
   171   001001  00                 	db	low _I2C_DO_IDLE
   172   001002  22                 	db	high _I2C_DO_IDLE
   173   001003  D8                 	db	low _I2C_DO_SEND_ADR_READ
   174   001004  21                 	db	high _I2C_DO_SEND_ADR_READ
   175   001005  C8                 	db	low _I2C_DO_SEND_ADR_WRITE
   176   001006  21                 	db	high _I2C_DO_SEND_ADR_WRITE
   177   001007  60                 	db	low _I2C_DO_TX
   178   001008  15                 	db	high _I2C_DO_TX
   179   001009  DE                 	db	low _I2C_DO_RX
   180   00100A  16                 	db	high _I2C_DO_RX
   181   00100B  F4                 	db	low _I2C_DO_RCEN
   182   00100C  21                 	db	high _I2C_DO_RCEN
   183   00100D  2E                 	db	low _I2C_DO_TX_EMPTY
   184   00100E  19                 	db	high _I2C_DO_TX_EMPTY
   185   00100F  92                 	db	low _I2C_DO_SEND_RESTART_READ
   186   001010  22                 	db	high _I2C_DO_SEND_RESTART_READ
   187   001011  8A                 	db	low _I2C_DO_SEND_RESTART_WRITE
   188   001012  22                 	db	high _I2C_DO_SEND_RESTART_WRITE
   189   001013  82                 	db	low _I2C_DO_SEND_RESTART
   190   001014  22                 	db	high _I2C_DO_SEND_RESTART
   191   001015  7A                 	db	low _I2C_DO_SEND_STOP
   192   001016  22                 	db	high _I2C_DO_SEND_STOP
   193   001017  72                 	db	low _I2C_DO_RX_ACK
   194   001018  22                 	db	high _I2C_DO_RX_ACK
   195   001019  6A                 	db	low _I2C_DO_RX_NACK_STOP
   196   00101A  22                 	db	high _I2C_DO_RX_NACK_STOP
   197   00101B  62                 	db	low _I2C_DO_RX_NACK_RESTART
   198   00101C  22                 	db	high _I2C_DO_RX_NACK_RESTART
   199   00101D  E8                 	db	low _I2C_DO_RESET
   200   00101E  21                 	db	high _I2C_DO_RESET
   201   00101F  E8                 	db	low _I2C_DO_ADDRESS_NACK
   202   001020  1B                 	db	high _I2C_DO_ADDRESS_NACK
   203   001021                     __end_of_i2c_fsmStateTable:
   204                           	callstack 0
   205   000000                     _RCREG	set	4014
   206   000000                     _TXREG	set	4013
   207   000000                     _SPBRG	set	4015
   208   000000                     _TXSTA	set	4012
   209   001021  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           	psect	nvCOMRAM
   212   000043                     __pnvCOMRAM:
   213                           	callstack 0
   214   000043                     _EUSART_FramingErrorHandler:
   215                           	callstack 0
   216   000043                     	ds	2
   217   000045                     _EUSART_RxDefaultInterruptHandler:
   218                           	callstack 0
   219   000045                     	ds	2
   220   000047                     _EUSART_TxDefaultInterruptHandler:
   221                           	callstack 0
   222   000047                     	ds	2
   223   000049                     _TMR0_InterruptHandler:
   224                           	callstack 0
   225   000049                     	ds	2
   226   00004B                     _eusartTxBufferRemaining:
   227                           	callstack 0
   228   00004B                     	ds	1
   229   00004C                     _timer0ReloadVal:
   230                           	callstack 0
   231   00004C                     	ds	1
   232                           
   233                           	psect	nvBANK0
   234   0000DD                     __pnvBANK0:
   235                           	callstack 0
   236   0000DD                     _EUSART_ErrorHandler:
   237                           	callstack 0
   238   0000DD                     	ds	2
   239   0000DF                     _EUSART_OverrunErrorHandler:
   240                           	callstack 0
   241   0000DF                     	ds	2
   242   000000                     _LATAbits	set	3977
   243   000000                     _RCSTAbits	set	4011
   244   000000                     _TXSTAbits	set	4012
   245   000000                     _T0CONbits	set	4053
   246   000000                     _SSPSTATbits	set	4039
   247   000000                     _SSPCON2bits	set	4037
   248   000000                     _SSPCON1bits	set	4038
   249   000000                     _WPUB	set	3964
   250   000000                     _ANSEL	set	3966
   251   000000                     _LATA	set	3977
   252   000000                     _PIE1bits	set	3997
   253   000000                     _PIR2bits	set	4001
   254   000000                     _SSPCON2	set	4037
   255   000000                     _SSPCON1	set	4038
   256   000000                     _SSPSTAT	set	4039
   257   000000                     _RCONbits	set	4048
   258   000000                     _OSCCON	set	4051
   259   000000                     _INTCON2bits	set	4081
   260   000000                     _SSPBUF	set	4041
   261   000000                     _SSPADD	set	4040
   262   000000                     _RCSTA	set	4011
   263   000000                     _BAUDCON	set	4024
   264   000000                     _PIR1bits	set	3998
   265   000000                     _TRISA	set	3986
   266   000000                     _LATC	set	3979
   267   000000                     _LATB	set	3978
   268   000000                     _OSCTUNE	set	3995
   269   000000                     _TRISC	set	3988
   270   000000                     _TRISB	set	3987
   271   000000                     _PORTAbits	set	3968
   272   000000                     _ANSELH	set	3967
   273   000000                     _INTCONbits	set	4082
   274   000000                     _T0CON	set	4053
   275   000000                     _TMR0L	set	4054
   276   000000                     _TMR0H	set	4055
   277   000000                     _SPBRGH	set	4016
   278                           
   279                           ; #config settings
   280                           
   281                           	psect	cinit
   282   001D88                     __pcinit:
   283                           	callstack 0
   284   001D88                     start_initialization:
   285                           	callstack 0
   286   001D88                     __initialization:
   287                           	callstack 0
   288                           
   289                           ; Initialize objects allocated to COMRAM (6 bytes)
   290                           ; load TBLPTR registers with __pidataCOMRAM
   291   001D88  0EA2               	movlw	low __pidataCOMRAM
   292   001D8A  6EF6               	movwf	tblptrl,c
   293   001D8C  0E22               	movlw	high __pidataCOMRAM
   294   001D8E  6EF7               	movwf	tblptrh,c
   295   001D90  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   296   001D92  6EF8               	movwf	tblptru,c
   297   001D94  EE00  F04D         	lfsr	0,__pdataCOMRAM
   298   001D98  EE10 F006          	lfsr	1,6
   299   001D9C                     copy_data0:
   300   001D9C  0009               	tblrd		*+
   301   001D9E  CFF5 FFEE          	movff	tablat,postinc0
   302   001DA2  50E5               	movf	postdec1,w,c
   303   001DA4  50E1               	movf	fsr1l,w,c
   304   001DA6  E1FA               	bnz	copy_data0
   305                           
   306                           ; Clear objects allocated to BANK0 (114 bytes)
   307   001DA8  EE00  F060         	lfsr	0,__pbssBANK0
   308   001DAC  0E72               	movlw	114
   309   001DAE                     clear_0:
   310   001DAE  6AEE               	clrf	postinc0,c
   311   001DB0  06E8               	decf	wreg,f,c
   312   001DB2  E1FD               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to COMRAM (31 bytes)
   315   001DB4  EE00  F024         	lfsr	0,__pbssCOMRAM
   316   001DB8  0E1F               	movlw	31
   317   001DBA                     clear_1:
   318   001DBA  6AEE               	clrf	postinc0,c
   319   001DBC  06E8               	decf	wreg,f,c
   320   001DBE  E1FD               	bnz	clear_1
   321   001DC0                     end_of_initialization:
   322                           	callstack 0
   323   001DC0                     __end_of__initialization:
   324                           	callstack 0
   325   001DC0  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326   001DC2  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327   001DC4  0100               	movlb	0
   328   001DC6  EF50  F009         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331   000024                     __pbssCOMRAM:
   332                           	callstack 0
   333   000024                     _eusartRxStatusBuffer:
   334                           	callstack 0
   335   000024                     	ds	8
   336   00002C                     _eusartTxBuffer:
   337                           	callstack 0
   338   00002C                     	ds	8
   339   000034                     _eusartRxLastError:
   340                           	callstack 0
   341   000034                     	ds	1
   342   000035                     _eusartRxCount:
   343                           	callstack 0
   344   000035                     	ds	1
   345   000036                     _eusartRxTail:
   346                           	callstack 0
   347   000036                     	ds	1
   348   000037                     _eusartRxHead:
   349                           	callstack 0
   350   000037                     	ds	1
   351   000038                     _eusartTxTail:
   352                           	callstack 0
   353   000038                     	ds	1
   354   000039                     _eusartTxHead:
   355                           	callstack 0
   356   000039                     	ds	1
   357   00003A                     _USART_UDR_vect:
   358                           	callstack 0
   359   00003A                     	ds	1
   360   00003B                     _D:
   361                           	callstack 0
   362   00003B                     	ds	1
   363   00003C                     _Bit_action_ModbasRtu:
   364                           	callstack 0
   365   00003C                     	ds	1
   366   00003D                     _Temp_ModbasRtu:
   367                           	callstack 0
   368   00003D                     	ds	1
   369   00003E                     _quantity_Data_ModbasRtu:
   370                           	callstack 0
   371   00003E                     	ds	1
   372   00003F                     _Danie_ModbasRtu_Binary_Output:
   373                           	callstack 0
   374   00003F                     	ds	2
   375   000041                     _Danie_ModbasRtu_Binary_input:
   376                           	callstack 0
   377   000041                     	ds	2
   378                           
   379                           	psect	dataCOMRAM
   380   00004D                     __pdataCOMRAM:
   381                           	callstack 0
   382   00004D                     main@F3020:
   383                           	callstack 0
   384   00004D                     	ds	3
   385   000050                     main@F3018:
   386                           	callstack 0
   387   000050                     	ds	3
   388                           
   389                           	psect	bssBANK0
   390   000060                     __pbssBANK0:
   391                           	callstack 0
   392   000060                     _I2C_Status:
   393                           	callstack 0
   394   000060                     	ds	36
   395   000084                     _eusartRxBuffer:
   396                           	callstack 0
   397   000084                     	ds	8
   398   00008C                     _Danie_Rx_ModbasRtu:
   399                           	callstack 0
   400   00008C                     	ds	30
   401   0000AA                     _Danie_ModbasRtu_analog_Output:
   402                           	callstack 0
   403   0000AA                     	ds	20
   404   0000BE                     _Danie_ModbasRtu_analog_input:
   405                           	callstack 0
   406   0000BE                     	ds	20
   407                           
   408                           	psect	cstackBANK0
   409   0000D2                     __pcstackBANK0:
   410                           	callstack 0
   411   0000D2                     main@red2:
   412                           	callstack 0
   413                           
   414                           ; 3 bytes @ 0x0
   415   0000D2                     	ds	3
   416   0000D5                     main@dat:
   417                           	callstack 0
   418                           
   419                           ; 3 bytes @ 0x3
   420   0000D5                     	ds	3
   421   0000D8                     main@red:
   422                           	callstack 0
   423                           
   424                           ; 3 bytes @ 0x6
   425   0000D8                     	ds	3
   426   0000DB                     main@address:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x9
   430   0000DB                     	ds	1
   431   0000DC                     main@bitt:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0xA
   435   0000DC                     	ds	1
   436                           
   437                           	psect	cstackCOMRAM
   438   000001                     __pcstackCOMRAM:
   439                           	callstack 0
   440   000001                     ??_USART_RXC_vect:
   441   000001                     
   442                           ; 1 bytes @ 0x0
   443   000001                     	ds	1
   444   000002                     USART_RXC_vect@TempModbas:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x1
   448   000002                     	ds	1
   449   000003                     ??_INTERRUPT_InterruptManager:
   450                           
   451                           ; 1 bytes @ 0x2
   452   000003                     	ds	4
   453   000007                     ?_crc_chk:
   454                           	callstack 0
   455   000007                     ?_ModbasRtu_Register_address:
   456                           	callstack 0
   457   000007                     I2C_Open@address:
   458                           	callstack 0
   459   000007                     I2C_Close@returnValue:
   460                           	callstack 0
   461   000007                     I2C_MasterSendTxData@data:
   462                           	callstack 0
   463   000007                     __Bin_input_Output@state:
   464                           	callstack 0
   465   000007                     I2C_SetBuffer@buffer:
   466                           	callstack 0
   467   000007                     I2C_SetCallback@cb:
   468                           	callstack 0
   469   000007                     TMR0_SetInterruptHandler@InterruptHandler:
   470                           	callstack 0
   471   000007                     EUSART_SetFramingErrorHandler@interruptHandler:
   472                           	callstack 0
   473   000007                     EUSART_SetOverrunErrorHandler@interruptHandler:
   474                           	callstack 0
   475   000007                     EUSART_SetErrorHandler@interruptHandler:
   476                           	callstack 0
   477   000007                     EUSART_SetTxInterruptHandler@interruptHandler:
   478                           	callstack 0
   479   000007                     EUSART_SetRxInterruptHandler@interruptHandler:
   480                           	callstack 0
   481   000007                     crc_chk@data:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x6
   485   000007                     	ds	1
   486   000008                     I2C_Open@returnValue:
   487                           	callstack 0
   488   000008                     __Bin_input_Output@Masiv:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x7
   492   000008                     	ds	1
   493   000009                     ??_ModbasRtu_Register_address:
   494   000009                     crc_chk@length:
   495                           	callstack 0
   496   000009                     I2C_SetBuffer@bufferSize:
   497                           	callstack 0
   498   000009                     I2C_SetCallback@ptr:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x8
   502   000009                     	ds	1
   503   00000A                     ??_crc_chk:
   504   00000A                     __Bin_input_Output@Sd:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x9
   508   00000A                     	ds	1
   509   00000B                     ??__Bin_input_Output:
   510   00000B                     I2C_SetCallback@idx:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0xA
   514   00000B                     	ds	1
   515   00000C                     I2C_SetDataCompleteCallback@cb:
   516                           	callstack 0
   517   00000C                     I2C_SetAddressNackCallback@cb:
   518                           	callstack 0
   519   00000C                     crc_chk@j:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xB
   523   00000C                     	ds	1
   524   00000D                     ModbasRtu_Register_address@Hi:
   525                           	callstack 0
   526   00000D                     __Bin_input_Output@NUMBER:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0xC
   530   00000D                     	ds	1
   531   00000E                     ModbasRtu_Register_address@Li:
   532                           	callstack 0
   533   00000E                     __Bin_input_Output@Temp:
   534                           	callstack 0
   535   00000E                     I2C_SetDataCompleteCallback@ptr:
   536                           	callstack 0
   537   00000E                     I2C_SetAddressNackCallback@ptr:
   538                           	callstack 0
   539   00000E                     crc_chk@reg_crc:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xD
   543   00000E                     	ds	1
   544   00000F                     __Bin_input_Output@Temp1:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0xE
   548   00000F                     	ds	1
   549   000010                     rd1RegCompleteHandler@ptr:
   550                           	callstack 0
   551   000010                     rd2RegCompleteHandler@ptr:
   552                           	callstack 0
   553   000010                     wr1RegCompleteHandler@ptr:
   554                           	callstack 0
   555   000010                     wr2RegCompleteHandler@ptr:
   556                           	callstack 0
   557   000010                     rdBlkRegCompleteHandler@ptr:
   558                           	callstack 0
   559   000010                     I2C_CallbackReturnReset@funPtr:
   560                           	callstack 0
   561   000010                     check_sum@RC:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0xF
   565   000010                     	ds	1
   566   000011                     Data_integrity@Temp22:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x10
   570   000011                     	ds	1
   571   000012                     ??_I2C_DO_TX:
   572   000012                     ??_I2C_DO_RX:
   573   000012                     ??_I2C_DO_TX_EMPTY:
   574   000012                     ??_I2C_DO_ADDRESS_NACK:
   575   000012                     check_sum@Adress:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x11
   579   000012                     	ds	1
   580   000013                     Data_integrity@Temp33:
   581                           	callstack 0
   582   000013                     Error_modbasRtu@Temp_Error:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x12
   586   000013                     	ds	1
   587   000014                     ??_I2C_MasterFsm:
   588   000014                     Changing_Discrete_Output@address:
   589                           	callstack 0
   590   000014                     Reading_Discrete_Output@Massiv:
   591                           	callstack 0
   592   000014                     Read_analog_input@Massiv:
   593                           	callstack 0
   594   000014                     analog_output_recording@address:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x13
   598   000014                     	ds	2
   599   000016                     I2C_MasterOperation@read:
   600                           	callstack 0
   601   000016                     Reading_Discrete_Output@Number_:
   602                           	callstack 0
   603   000016                     Read_analog_input@Number_:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x15
   607   000016                     	ds	1
   608   000017                     ??_Reading_Discrete_Output:
   609   000017                     I2C_MasterOperation@returnValue:
   610                           	callstack 0
   611   000017                     Read_analog_input@Vt:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x16
   615   000017                     	ds	1
   616   000018                     ??_Read_analog_input:
   617   000018                     I2C_WriteNBytes@data:
   618                           	callstack 0
   619   000018                     I2C_ReadNBytes@data:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x17
   623   000018                     	ds	1
   624   000019                     Reading_Discrete_Output@Danie:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x18
   628   000019                     	ds	1
   629   00001A                     Reading_Discrete_Output@Temp:
   630                           	callstack 0
   631   00001A                     I2C_WriteNBytes@len:
   632                           	callstack 0
   633   00001A                     I2C_ReadNBytes@len:
   634                           	callstack 0
   635   00001A                     Read_analog_input@Danie:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x19
   639   00001A                     	ds	1
   640   00001B                     Reading_Discrete_Output@Temp2:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x1A
   644   00001B                     	ds	1
   645   00001C                     I2C_WriteNBytes@address:
   646                           	callstack 0
   647   00001C                     I2C_ReadNBytes@address:
   648                           	callstack 0
   649   00001C                     Reading_Discrete_Output@address2:
   650                           	callstack 0
   651   00001C                     Read_analog_input@address:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1B
   655   00001C                     	ds	1
   656   00001D                     Reading_Discrete_Output@Temp3:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x1C
   660   00001D                     	ds	1
   661   00001E                     Reading_Discrete_Output@Number_bits:
   662                           	callstack 0
   663   00001E                     Read_analog_input@Number_bits:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x1D
   667   00001E                     	ds	2
   668   000020                     Read_analog_input@Adress:
   669                           	callstack 0
   670   000020                     Reading_Discrete_Output@address:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x1F
   674   000020                     	ds	2
   675   000022                     ??_modbasRtu_Answer:
   676                           
   677                           ; 1 bytes @ 0x21
   678   000022                     	ds	2
   679   000024                     
   680                           ; 1 bytes @ 0x23
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 58 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  red             3    6[BANK0 ] unsigned char [3]
   691 ;;  dat             3    3[BANK0 ] unsigned char [3]
   692 ;;  red2            3    0[BANK0 ] unsigned char [3]
   693 ;;  bitt            1   10[BANK0 ] struct .
   694 ;;  address         1    9[BANK0 ] unsigned char 
   695 ;;  toggle          1    0        unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;Total ram usage:       11 bytes
   710 ;; Hardware stack levels required when called: 13
   711 ;; This function calls:
   712 ;;		_EUSART_SetRxInterruptHandler
   713 ;;		_EUSART_SetTxInterruptHandler
   714 ;;		_I2C_ReadNBytes
   715 ;;		_I2C_WriteNBytes
   716 ;;		_SYSTEM_Initialize
   717 ;;		_USART_UDRE_vect
   718 ;;		_modbasRtu_Slave
   719 ;; This function is called by:
   720 ;;		Startup code after reset
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text0
   725   0012A0                     __ptext0:
   726                           	callstack 0
   727   0012A0                     _main:
   728                           	callstack 18
   729   0012A0                     
   730                           ;main.c: 61:     SYSTEM_Initialize();
   731   0012A0  EC8D  F010         	call	_SYSTEM_Initialize	;wreg free
   732                           
   733                           ;main.c: 63:    EUSART_SetRxInterruptHandler(USART_RXC_vect);
   734   0012A4  0EA8               	movlw	low _USART_RXC_vect
   735   0012A6  6E07               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
   736   0012A8  0E18               	movlw	high _USART_RXC_vect
   737   0012AA  6E08               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
   738   0012AC  EC15  F011         	call	_EUSART_SetRxInterruptHandler	;wreg free
   739                           
   740                           ;main.c: 64:    EUSART_SetTxInterruptHandler(USART_TXC_vect);
   741   0012B0  0EF6               	movlw	low _USART_TXC_vect
   742   0012B2  6E07               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
   743   0012B4  0E22               	movlw	high _USART_TXC_vect
   744   0012B6  6E08               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
   745   0012B8  EC10  F011         	call	_EUSART_SetTxInterruptHandler	;wreg free
   746   0012BC                     
   747                           ;main.c: 70:    (INTCONbits.GIE = 1);
   748   0012BC  8EF2               	bsf	242,7,c	;volatile
   749   0012BE                     
   750                           ;main.c: 76:    (INTCONbits.PEIE = 1);
   751   0012BE  8CF2               	bsf	242,6,c	;volatile
   752   0012C0                     
   753                           ;main.c: 84:    uint8_t address = (0XE6)>>1;
   754   0012C0  0E73               	movlw	115
   755   0012C2  0100               	movlb	0	; () banked
   756   0012C4  6FDB               	movwf	main@address& (0+255),b
   757   0012C6                     
   758                           ; BSR set to: 0
   759                           ;main.c: 85:    uint8_t dat[3]={0X30,0X64,0XC0};
   760   0012C6  C050  F0D5         	movff	main@F3018,main@dat
   761   0012CA  C051  F0D6         	movff	main@F3018+1,main@dat+1
   762   0012CE  C052  F0D7         	movff	main@F3018+2,main@dat+2
   763   0012D2                     
   764                           ; BSR set to: 0
   765                           ;main.c: 86:    uint8_t red[3]={0x1C};
   766   0012D2  C04D  F0D8         	movff	main@F3020,main@red
   767   0012D6  C04E  F0D9         	movff	main@F3020+1,main@red+1
   768   0012DA  C04F  F0DA         	movff	main@F3020+2,main@red+2
   769   0012DE                     l4781:
   770                           
   771                           ;main.c: 91:     {;main.c: 94:          if(PORTAbits.RA2 && !bitt.b0 )
   772   0012DE  A480               	btfss	128,2,c	;volatile
   773   0012E0  EF74  F009         	goto	u2651
   774   0012E4  EF76  F009         	goto	u2650
   775   0012E8                     u2651:
   776   0012E8  EFA4  F009         	goto	l963
   777   0012EC                     u2650:
   778   0012EC  0100               	movlb	0	; () banked
   779   0012EE  B1DC               	btfsc	main@bitt& (0+255),0,b
   780   0012F0  EF7C  F009         	goto	u2661
   781   0012F4  EF7E  F009         	goto	u2660
   782   0012F8                     u2661:
   783   0012F8  EFA4  F009         	goto	l963
   784   0012FC                     u2660:
   785   0012FC                     
   786                           ; BSR set to: 0
   787   0012FC  8089               	bsf	137,0,c	;volatile
   788   0012FE                     
   789                           ; BSR set to: 0
   790                           ;main.c: 100:               I2C_WriteNBytes(address,dat,3);
   791   0012FE  0ED5               	movlw	low main@dat
   792   001300  6E18               	movwf	I2C_WriteNBytes@data^0,c
   793   001302  0E00               	movlw	high main@dat
   794   001304  6E19               	movwf	(I2C_WriteNBytes@data+1)^0,c
   795   001306  0E00               	movlw	0
   796   001308  6E1B               	movwf	(I2C_WriteNBytes@len+1)^0,c
   797   00130A  0E03               	movlw	3
   798   00130C  6E1A               	movwf	I2C_WriteNBytes@len^0,c
   799   00130E  51DB               	movf	main@address& (0+255),w,b
   800   001310  EC27  F00E         	call	_I2C_WriteNBytes
   801                           
   802                           ;main.c: 102:               I2C_WriteNBytes((0xD0)>>1,red,1);
   803   001314  0ED8               	movlw	low main@red
   804   001316  6E18               	movwf	I2C_WriteNBytes@data^0,c
   805   001318  0E00               	movlw	high main@red
   806   00131A  6E19               	movwf	(I2C_WriteNBytes@data+1)^0,c
   807   00131C  0E00               	movlw	0
   808   00131E  6E1B               	movwf	(I2C_WriteNBytes@len+1)^0,c
   809   001320  0E01               	movlw	1
   810   001322  6E1A               	movwf	I2C_WriteNBytes@len^0,c
   811   001324  0E68               	movlw	104
   812   001326  EC27  F00E         	call	_I2C_WriteNBytes
   813                           
   814                           ;main.c: 104:               I2C_ReadNBytes((0xD1)>>1, red2 , 3);
   815   00132A  0ED2               	movlw	low main@red2
   816   00132C  6E18               	movwf	I2C_ReadNBytes@data^0,c
   817   00132E  0E00               	movlw	high main@red2
   818   001330  6E19               	movwf	(I2C_ReadNBytes@data+1)^0,c
   819   001332  0E00               	movlw	0
   820   001334  6E1B               	movwf	(I2C_ReadNBytes@len+1)^0,c
   821   001336  0E03               	movlw	3
   822   001338  6E1A               	movwf	I2C_ReadNBytes@len^0,c
   823   00133A  0E68               	movlw	104
   824   00133C  EC7F  F00E         	call	_I2C_ReadNBytes
   825   001340                     
   826                           ;main.c: 106:               bitt.b0=1;
   827   001340  0100               	movlb	0	; () banked
   828   001342  81DC               	bsf	main@bitt& (0+255),0,b
   829                           
   830                           ;main.c: 108:          }
   831   001344  EFB5  F009         	goto	l966
   832   001348                     l963:
   833   001348  B480               	btfsc	128,2,c	;volatile
   834   00134A  EFA9  F009         	goto	u2671
   835   00134E  EFAB  F009         	goto	u2670
   836   001352                     u2671:
   837   001352  EFB5  F009         	goto	l966
   838   001356                     u2670:
   839   001356  0100               	movlb	0	; () banked
   840   001358  A1DC               	btfss	main@bitt& (0+255),0,b
   841   00135A  EFB1  F009         	goto	u2681
   842   00135E  EFB3  F009         	goto	u2680
   843   001362                     u2681:
   844   001362  EFB5  F009         	goto	l966
   845   001366                     u2680:
   846   001366                     
   847                           ; BSR set to: 0
   848   001366  9089               	bcf	137,0,c	;volatile
   849   001368                     
   850                           ; BSR set to: 0
   851                           ;main.c: 112:              bitt.b0=0;
   852   001368  91DC               	bcf	main@bitt& (0+255),0,b
   853   00136A                     l966:
   854                           
   855                           ;main.c: 114:          if(TXSTAbits.TRMT && USART_UDR_vect)
   856   00136A  A2AC               	btfss	172,1,c	;volatile
   857   00136C  EFBA  F009         	goto	u2691
   858   001370  EFBC  F009         	goto	u2690
   859   001374                     u2691:
   860   001374  EFC6  F009         	goto	l4795
   861   001378                     u2690:
   862   001378  503A               	movf	_USART_UDR_vect^0,w,c
   863   00137A  B4D8               	btfsc	status,2,c
   864   00137C  EFC2  F009         	goto	u2701
   865   001380  EFC4  F009         	goto	u2700
   866   001384                     u2701:
   867   001384  EFC6  F009         	goto	l4795
   868   001388                     u2700:
   869   001388                     
   870                           ;main.c: 115:          {;main.c: 116:              USART_UDRE_vect ();
   871   001388  EC9C  F00F         	call	_USART_UDRE_vect	;wreg free
   872   00138C                     l4795:
   873                           
   874                           ;main.c: 119:            modbasRtu_Slave();
   875   00138C  EC46  F00F         	call	_modbasRtu_Slave	;wreg free
   876   001390  EF6F  F009         	goto	l4781
   877   001394  EF68  F000         	goto	start
   878   001398                     __end_of_main:
   879                           	callstack 0
   880                           
   881 ;; *************** function _modbasRtu_Slave *****************
   882 ;; Defined at:
   883 ;;		line 432 in file "Modbas_RTU.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; Hardware stack levels required when called: 9
   904 ;; This function calls:
   905 ;;		_Data_integrity
   906 ;;		_Error_modbasRtu
   907 ;;		_modbasRtu_Answer
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text1
   914   001E8C                     __ptext1:
   915                           	callstack 0
   916   001E8C                     _modbasRtu_Slave:
   917                           	callstack 21
   918   001E8C                     
   919                           ;Modbas_RTU.c: 434:     if (Bit_action_ModbasRtu.b2)
   920   001E8C  A43C               	btfss	_Bit_action_ModbasRtu^0,2,c
   921   001E8E  EF4B  F00F         	goto	u2511
   922   001E92  EF4D  F00F         	goto	u2510
   923   001E96                     u2511:
   924   001E96  EF63  F00F         	goto	l907
   925   001E9A                     u2510:
   926   001E9A                     
   927                           ;Modbas_RTU.c: 435:     {;Modbas_RTU.c: 436:      if ( Data_integrity() == 0 )
   928   001E9A  ECBD  F00D         	call	_Data_integrity	;wreg free
   929   001E9E  0900               	iorlw	0
   930   001EA0  A4D8               	btfss	status,2,c
   931   001EA2  EF55  F00F         	goto	u2521
   932   001EA6  EF57  F00F         	goto	u2520
   933   001EAA                     u2521:
   934   001EAA  EF61  F00F         	goto	l4647
   935   001EAE                     u2520:
   936   001EAE                     
   937                           ;Modbas_RTU.c: 437:      {;Modbas_RTU.c: 440:       Error_modbasRtu (0x04);
   938   001EAE  0E04               	movlw	4
   939   001EB0  ECD3  F010         	call	_Error_modbasRtu
   940   001EB4                     
   941                           ;Modbas_RTU.c: 441:       USART_UDR_vect=1;
   942   001EB4  0E01               	movlw	1
   943   001EB6  6E3A               	movwf	_USART_UDR_vect^0,c
   944   001EB8                     
   945                           ;Modbas_RTU.c: 442:             Temp_ModbasRtu = 0;
   946   001EB8  0E00               	movlw	0
   947   001EBA  6E3D               	movwf	_Temp_ModbasRtu^0,c
   948   001EBC                     
   949                           ;Modbas_RTU.c: 443:             Bit_action_ModbasRtu.b2 = 0;
   950   001EBC  943C               	bcf	_Bit_action_ModbasRtu^0,2,c
   951                           
   952                           ;Modbas_RTU.c: 445:      }
   953   001EBE  EF63  F00F         	goto	l907
   954   001EC2                     l4647:
   955                           
   956                           ;Modbas_RTU.c: 447:      {;Modbas_RTU.c: 448:       modbasRtu_Answer( );
   957   001EC2  EC3F  F00A         	call	_modbasRtu_Answer	;wreg free
   958   001EC6                     l907:
   959   001EC6  0012               	return		;funcret
   960   001EC8                     __end_of_modbasRtu_Slave:
   961                           	callstack 0
   962                           
   963 ;; *************** function _modbasRtu_Answer *****************
   964 ;; Defined at:
   965 ;;		line 355 in file "Modbas_RTU.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;Total ram usage:        2 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 8
   986 ;; This function calls:
   987 ;;		_Changing_Discrete_Output
   988 ;;		_Error_modbasRtu
   989 ;;		_Read_analog_input
   990 ;;		_Reading_Discrete_Output
   991 ;;		_analog_output_recording
   992 ;; This function is called by:
   993 ;;		_modbasRtu_Slave
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text2
   998   00147E                     __ptext2:
   999                           	callstack 0
  1000   00147E                     _modbasRtu_Answer:
  1001                           	callstack 21
  1002   00147E                     
  1003                           ;Modbas_RTU.c: 357:    Temp_ModbasRtu = 0;
  1004   00147E  0E00               	movlw	0
  1005   001480  6E3D               	movwf	_Temp_ModbasRtu^0,c
  1006                           
  1007                           ;Modbas_RTU.c: 358:    switch (Danie_Rx_ModbasRtu[1])
  1008   001482  EF7E  F00A         	goto	l4581
  1009   001486                     l4565:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;Modbas_RTU.c: 361:            Reading_Discrete_Output(Danie_ModbasRtu_Binary_Output,10)
      +                          ;
  1013   001486  0E3F               	movlw	low _Danie_ModbasRtu_Binary_Output
  1014   001488  6E14               	movwf	Reading_Discrete_Output@Massiv^0,c
  1015   00148A  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  1016   00148C  6E15               	movwf	(Reading_Discrete_Output@Massiv+1)^0,c
  1017   00148E  0E0A               	movlw	10
  1018   001490  6E16               	movwf	Reading_Discrete_Output@Number_^0,c
  1019   001492  EC11  F008         	call	_Reading_Discrete_Output	;wreg free
  1020                           
  1021                           ;Modbas_RTU.c: 362:            break;
  1022   001496  EFAC  F00A         	goto	l4583
  1023   00149A                     l4567:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;Modbas_RTU.c: 364:            Reading_Discrete_Output(Danie_ModbasRtu_Binary_input,10);
  1027   00149A  0E41               	movlw	low _Danie_ModbasRtu_Binary_input
  1028   00149C  6E14               	movwf	Reading_Discrete_Output@Massiv^0,c
  1029   00149E  0E00               	movlw	high _Danie_ModbasRtu_Binary_input
  1030   0014A0  6E15               	movwf	(Reading_Discrete_Output@Massiv+1)^0,c
  1031   0014A2  0E0A               	movlw	10
  1032   0014A4  6E16               	movwf	Reading_Discrete_Output@Number_^0,c
  1033   0014A6  EC11  F008         	call	_Reading_Discrete_Output	;wreg free
  1034                           
  1035                           ;Modbas_RTU.c: 365:            break;
  1036   0014AA  EFAC  F00A         	goto	l4583
  1037   0014AE                     l4569:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;Modbas_RTU.c: 367:            Read_analog_input( Danie_ModbasRtu_analog_Output,10,0);
  1041   0014AE  0EAA               	movlw	low _Danie_ModbasRtu_analog_Output
  1042   0014B0  6E14               	movwf	Read_analog_input@Massiv^0,c
  1043   0014B2  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  1044   0014B4  6E15               	movwf	(Read_analog_input@Massiv+1)^0,c
  1045   0014B6  0E0A               	movlw	10
  1046   0014B8  6E16               	movwf	Read_analog_input@Number_^0,c
  1047   0014BA  0E00               	movlw	0
  1048   0014BC  6E17               	movwf	Read_analog_input@Vt^0,c
  1049   0014BE  ECCC  F008         	call	_Read_analog_input	;wreg free
  1050                           
  1051                           ;Modbas_RTU.c: 368:     break;
  1052   0014C2  EFAC  F00A         	goto	l4583
  1053   0014C6                     l4571:
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;Modbas_RTU.c: 370:            Read_analog_input(Danie_ModbasRtu_analog_input,10,1);
  1057   0014C6  0EBE               	movlw	low _Danie_ModbasRtu_analog_input
  1058   0014C8  6E14               	movwf	Read_analog_input@Massiv^0,c
  1059   0014CA  0E00               	movlw	high _Danie_ModbasRtu_analog_input
  1060   0014CC  6E15               	movwf	(Read_analog_input@Massiv+1)^0,c
  1061   0014CE  0E0A               	movlw	10
  1062   0014D0  6E16               	movwf	Read_analog_input@Number_^0,c
  1063   0014D2  0E01               	movlw	1
  1064   0014D4  6E17               	movwf	Read_analog_input@Vt^0,c
  1065   0014D6  ECCC  F008         	call	_Read_analog_input	;wreg free
  1066                           
  1067                           ;Modbas_RTU.c: 371:            break;
  1068   0014DA  EFAC  F00A         	goto	l4583
  1069   0014DE                     l4573:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;Modbas_RTU.c: 373:            Changing_Discrete_Output();
  1073   0014DE  EC4C  F00D         	call	_Changing_Discrete_Output	;wreg free
  1074                           
  1075                           ;Modbas_RTU.c: 374:            break;
  1076   0014E2  EFAC  F00A         	goto	l4583
  1077   0014E6                     l4575:
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;Modbas_RTU.c: 376:            analog_output_recording();
  1081   0014E6  EC54  F00E         	call	_analog_output_recording	;wreg free
  1082                           
  1083                           ;Modbas_RTU.c: 377:            break;
  1084   0014EA  EFAC  F00A         	goto	l4583
  1085   0014EE                     l874:
  1086                           
  1087                           ; BSR set to: 0
  1088   0014EE  F000               	nop		;# 
  1089   0014F0                     l875:
  1090   0014F0  F000               	nop		;# 
  1091   0014F2                     l4577:
  1092                           
  1093                           ;Modbas_RTU.c: 386:           Error_modbasRtu (0x01);
  1094   0014F2  0E01               	movlw	1
  1095   0014F4  ECD3  F010         	call	_Error_modbasRtu
  1096                           
  1097                           ;Modbas_RTU.c: 387:     break;
  1098   0014F8  EFAC  F00A         	goto	l4583
  1099   0014FC                     l4581:
  1100   0014FC  0100               	movlb	0	; () banked
  1101   0014FE  518D               	movf	(_Danie_Rx_ModbasRtu+1)& (0+255),w,b
  1102   001500  6E22               	movwf	??_modbasRtu_Answer^0,c
  1103   001502  6A23               	clrf	(??_modbasRtu_Answer+1)^0,c
  1104                           
  1105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 1, Range of values is 0 to 0
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte            4     3 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112   001504  5023               	movf	(??_modbasRtu_Answer+1)^0,w,c
  1113   001506  0A00               	xorlw	0	; case 0
  1114   001508  B4D8               	btfsc	status,2,c
  1115   00150A  EF89  F00A         	goto	l4897
  1116   00150E  EF79  F00A         	goto	l4577
  1117   001512                     l4897:
  1118                           
  1119                           ; BSR set to: 0
  1120                           ; Switch size 1, requested type "simple"
  1121                           ; Number of cases is 8, Range of values is 1 to 16
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte           25    13 (average)
  1125                           ;	Chosen strategy is simple_byte
  1126   001512  5022               	movf	??_modbasRtu_Answer^0,w,c
  1127   001514  0A01               	xorlw	1	; case 1
  1128   001516  B4D8               	btfsc	status,2,c
  1129   001518  EF43  F00A         	goto	l4565
  1130   00151C  0A03               	xorlw	3	; case 2
  1131   00151E  B4D8               	btfsc	status,2,c
  1132   001520  EF4D  F00A         	goto	l4567
  1133   001524  0A01               	xorlw	1	; case 3
  1134   001526  B4D8               	btfsc	status,2,c
  1135   001528  EF57  F00A         	goto	l4569
  1136   00152C  0A07               	xorlw	7	; case 4
  1137   00152E  B4D8               	btfsc	status,2,c
  1138   001530  EF63  F00A         	goto	l4571
  1139   001534  0A01               	xorlw	1	; case 5
  1140   001536  B4D8               	btfsc	status,2,c
  1141   001538  EF6F  F00A         	goto	l4573
  1142   00153C  0A03               	xorlw	3	; case 6
  1143   00153E  B4D8               	btfsc	status,2,c
  1144   001540  EF73  F00A         	goto	l4575
  1145   001544  0A09               	xorlw	9	; case 15
  1146   001546  B4D8               	btfsc	status,2,c
  1147   001548  EF77  F00A         	goto	l874
  1148   00154C  0A1F               	xorlw	31	; case 16
  1149   00154E  B4D8               	btfsc	status,2,c
  1150   001550  EF78  F00A         	goto	l875
  1151   001554  EF79  F00A         	goto	l4577
  1152   001558                     l4583:
  1153                           
  1154                           ;Modbas_RTU.c: 390:      USART_UDR_vect=1;
  1155   001558  0E01               	movlw	1
  1156   00155A  6E3A               	movwf	_USART_UDR_vect^0,c
  1157   00155C                     
  1158                           ;Modbas_RTU.c: 392:   Bit_action_ModbasRtu.b2 = 0;
  1159   00155C  943C               	bcf	_Bit_action_ModbasRtu^0,2,c
  1160   00155E  0012               	return		;funcret
  1161   001560                     __end_of_modbasRtu_Answer:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _analog_output_recording *****************
  1165 ;; Defined at:
  1166 ;;		line 314 in file "Modbas_RTU.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  address         2   19[COMRAM] int 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;Total ram usage:        2 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 7
  1187 ;; This function calls:
  1188 ;;		_Error_modbasRtu
  1189 ;;		_ModbasRtu_Register_address
  1190 ;; This function is called by:
  1191 ;;		_modbasRtu_Answer
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text3
  1196   001CA8                     __ptext3:
  1197                           	callstack 0
  1198   001CA8                     _analog_output_recording:
  1199                           	callstack 21
  1200   001CA8                     
  1201                           ;Modbas_RTU.c: 316:  register int address;;Modbas_RTU.c: 317:  address = ModbasRtu_Regis
      +                          ter_address(3);
  1202   001CA8  0E03               	movlw	3
  1203   001CAA  EC64  F00F         	call	_ModbasRtu_Register_address
  1204   001CAE  C007  F014         	movff	?_ModbasRtu_Register_address,analog_output_recording@address
  1205   001CB2  C008  F015         	movff	?_ModbasRtu_Register_address+1,analog_output_recording@address+1
  1206   001CB6                     
  1207                           ;Modbas_RTU.c: 318:  if ( address > 10 )
  1208   001CB6  BE15               	btfsc	(analog_output_recording@address+1)^0,7,c
  1209   001CB8  EF67  F00E         	goto	u2411
  1210   001CBC  5015               	movf	(analog_output_recording@address+1)^0,w,c
  1211   001CBE  E109               	bnz	u2410
  1212   001CC0  0E0B               	movlw	11
  1213   001CC2  5C14               	subwf	analog_output_recording@address^0,w,c
  1214   001CC4  A0D8               	btfss	status,0,c
  1215   001CC6  EF67  F00E         	goto	u2411
  1216   001CCA  EF69  F00E         	goto	u2410
  1217   001CCE                     u2411:
  1218   001CCE  EF6E  F00E         	goto	l4419
  1219   001CD2                     u2410:
  1220   001CD2                     
  1221                           ;Modbas_RTU.c: 319:   {;Modbas_RTU.c: 320:   Error_modbasRtu (0x02);
  1222   001CD2  0E02               	movlw	2
  1223   001CD4  ECD3  F010         	call	_Error_modbasRtu
  1224                           
  1225                           ;Modbas_RTU.c: 321:   }
  1226   001CD8  EF7E  F00E         	goto	l857
  1227   001CDC                     l4419:
  1228                           
  1229                           ;Modbas_RTU.c: 323:   {;Modbas_RTU.c: 324:     Danie_ModbasRtu_analog_Output [address] =
      +                           ModbasRtu_Register_address(5);
  1230   001CDC  0E05               	movlw	5
  1231   001CDE  EC64  F00F         	call	_ModbasRtu_Register_address
  1232   001CE2  90D8               	bcf	status,0,c
  1233   001CE4  3414               	rlcf	analog_output_recording@address^0,w,c
  1234   001CE6  6ED9               	movwf	fsr2l,c
  1235   001CE8  3415               	rlcf	(analog_output_recording@address+1)^0,w,c
  1236   001CEA  6EDA               	movwf	fsr2h,c
  1237   001CEC  0EAA               	movlw	low _Danie_ModbasRtu_analog_Output
  1238   001CEE  26D9               	addwf	fsr2l,f,c
  1239   001CF0  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  1240   001CF2  22DA               	addwfc	fsr2h,f,c
  1241   001CF4  C007  FFDE         	movff	?_ModbasRtu_Register_address,postinc2
  1242   001CF8  C008  FFDD         	movff	?_ModbasRtu_Register_address+1,postdec2
  1243   001CFC                     l857:
  1244   001CFC  0012               	return		;funcret
  1245   001CFE                     __end_of_analog_output_recording:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _Reading_Discrete_Output *****************
  1249 ;; Defined at:
  1250 ;;		line 215 in file "Modbas_RTU.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  Massiv          2   19[COMRAM] PTR unsigned char 
  1253 ;;		 -> Danie_ModbasRtu_Binary_input(2), Danie_ModbasRtu_Binary_Output(2), 
  1254 ;;  Number_         1   21[COMRAM] unsigned char 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  address         2   31[COMRAM] volatile unsigned int 
  1257 ;;  Number_bits     2   29[COMRAM] volatile unsigned int 
  1258 ;;  Temp3           1   28[COMRAM] unsigned char 
  1259 ;;  address2        1   27[COMRAM] unsigned char 
  1260 ;;  Temp2           1   26[COMRAM] unsigned char 
  1261 ;;  Temp            1   25[COMRAM] unsigned char 
  1262 ;;  Danie           1   24[COMRAM] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1272 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;Total ram usage:       14 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 7
  1279 ;; This function calls:
  1280 ;;		_Error_modbasRtu
  1281 ;;		_ModbasRtu_Register_address
  1282 ;;		_check_sum
  1283 ;; This function is called by:
  1284 ;;		_modbasRtu_Answer
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text4
  1289   001022                     __ptext4:
  1290                           	callstack 0
  1291   001022                     _Reading_Discrete_Output:
  1292                           	callstack 21
  1293   001022                     
  1294                           ;Modbas_RTU.c: 215:  void Reading_Discrete_Output(unsigned char* Massiv, register unsign
      +                          ed char Number_);Modbas_RTU.c: 216:   {;Modbas_RTU.c: 217:  volatile unsigned int addres
      +                          s,Number_bits;;Modbas_RTU.c: 218:  register unsigned char Temp = 0,Danie,Temp2 = 0,addre
      +                          ss2 = 0,Temp3 = 2;
  1295   001022  0E00               	movlw	0
  1296   001024  6E1A               	movwf	Reading_Discrete_Output@Temp^0,c
  1297   001026  0E00               	movlw	0
  1298   001028  6E1B               	movwf	Reading_Discrete_Output@Temp2^0,c
  1299   00102A  0E00               	movlw	0
  1300   00102C  6E1C               	movwf	Reading_Discrete_Output@address2^0,c
  1301   00102E  0E02               	movlw	2
  1302   001030  6E1D               	movwf	Reading_Discrete_Output@Temp3^0,c
  1303   001032                     
  1304                           ;Modbas_RTU.c: 219:  address = ModbasRtu_Register_address(3);
  1305   001032  0E03               	movlw	3
  1306   001034  EC64  F00F         	call	_ModbasRtu_Register_address
  1307   001038  C007  F020         	movff	?_ModbasRtu_Register_address,Reading_Discrete_Output@address	;volatile
  1308   00103C  C008  F021         	movff	?_ModbasRtu_Register_address+1,Reading_Discrete_Output@address+1	;volatile
  1309   001040                     
  1310                           ;Modbas_RTU.c: 220:  if ( address > Number_ )
  1311   001040  5016               	movf	Reading_Discrete_Output@Number_^0,w,c
  1312   001042  6E17               	movwf	??_Reading_Discrete_Output^0,c
  1313   001044  6A18               	clrf	(??_Reading_Discrete_Output+1)^0,c
  1314   001046  5020               	movf	Reading_Discrete_Output@address^0,w,c	;volatile
  1315   001048  5C17               	subwf	??_Reading_Discrete_Output^0,w,c
  1316   00104A  5021               	movf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  1317   00104C  5818               	subwfb	(??_Reading_Discrete_Output+1)^0,w,c
  1318   00104E  B0D8               	btfsc	status,0,c
  1319   001050  EF2C  F008         	goto	u2291
  1320   001054  EF2E  F008         	goto	u2290
  1321   001058                     u2291:
  1322   001058  EF33  F008         	goto	l4325
  1323   00105C                     u2290:
  1324   00105C                     
  1325                           ;Modbas_RTU.c: 221:         {;Modbas_RTU.c: 222:            Error_modbasRtu (0x02);
  1326   00105C  0E02               	movlw	2
  1327   00105E  ECD3  F010         	call	_Error_modbasRtu
  1328                           
  1329                           ;Modbas_RTU.c: 223:         }
  1330   001062  EFCB  F008         	goto	l842
  1331   001066                     l4325:
  1332                           
  1333                           ;Modbas_RTU.c: 225:   {;Modbas_RTU.c: 226:   Number_bits = ModbasRtu_Register_address(5)
      +                          ;
  1334   001066  0E05               	movlw	5
  1335   001068  EC64  F00F         	call	_ModbasRtu_Register_address
  1336   00106C  C007  F01E         	movff	?_ModbasRtu_Register_address,Reading_Discrete_Output@Number_bits	;volatile
  1337   001070  C008  F01F         	movff	?_ModbasRtu_Register_address+1,Reading_Discrete_Output@Number_bits+1	;volatile
  1338                           
  1339                           ;Modbas_RTU.c: 227:   while (address >= 8)
  1340   001074  EF43  F008         	goto	l4331
  1341   001078                     l4327:
  1342                           
  1343                           ;Modbas_RTU.c: 228:             {;Modbas_RTU.c: 229:               address = address - 8
      +                          ;
  1344   001078  0EF8               	movlw	248
  1345   00107A  2420               	addwf	Reading_Discrete_Output@address^0,w,c	;volatile
  1346   00107C  6E20               	movwf	Reading_Discrete_Output@address^0,c	;volatile
  1347   00107E  0EFF               	movlw	255
  1348   001080  2021               	addwfc	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  1349   001082  6E21               	movwf	(Reading_Discrete_Output@address+1)^0,c	;volatile
  1350   001084                     
  1351                           ;Modbas_RTU.c: 230:               Temp ++;
  1352   001084  2A1A               	incf	Reading_Discrete_Output@Temp^0,f,c
  1353   001086                     l4331:
  1354                           
  1355                           ;Modbas_RTU.c: 227:   while (address >= 8)
  1356   001086  5021               	movf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  1357   001088  E107               	bnz	u2301
  1358   00108A  0E08               	movlw	8
  1359   00108C  5C20               	subwf	Reading_Discrete_Output@address^0,w,c	;volatile
  1360   00108E  B0D8               	btfsc	status,0,c
  1361   001090  EF4C  F008         	goto	u2301
  1362   001094  EF4E  F008         	goto	u2300
  1363   001098                     u2301:
  1364   001098  EF3C  F008         	goto	l4327
  1365   00109C                     u2300:
  1366   00109C                     l4333:
  1367                           
  1368                           ;Modbas_RTU.c: 232:   Danie = Massiv [ Temp ];
  1369   00109C  501A               	movf	Reading_Discrete_Output@Temp^0,w,c
  1370   00109E  2414               	addwf	Reading_Discrete_Output@Massiv^0,w,c
  1371   0010A0  6ED9               	movwf	fsr2l,c
  1372   0010A2  0E00               	movlw	0
  1373   0010A4  2015               	addwfc	(Reading_Discrete_Output@Massiv+1)^0,w,c
  1374   0010A6  6EDA               	movwf	fsr2h,c
  1375   0010A8  50DF               	movf	indf2,w,c
  1376   0010AA  6E19               	movwf	Reading_Discrete_Output@Danie^0,c
  1377                           
  1378                           ;Modbas_RTU.c: 236:   while ( Number_bits > 0)
  1379   0010AC  EFA9  F008         	goto	l4361
  1380   0010B0                     l4335:
  1381                           
  1382                           ;Modbas_RTU.c: 237:     {;Modbas_RTU.c: 238:                 Number_bits --;
  1383   0010B0  061E               	decf	Reading_Discrete_Output@Number_bits^0,f,c	;volatile
  1384   0010B2  A0D8               	btfss	status,0,c
  1385   0010B4  061F               	decf	(Reading_Discrete_Output@Number_bits+1)^0,f,c	;volatile
  1386   0010B6                     
  1387                           ;Modbas_RTU.c: 239:                 if ( Danie & (1 << address) )
  1388   0010B6  C020  F017         	movff	Reading_Discrete_Output@address,??_Reading_Discrete_Output	;volatile
  1389   0010BA  0E01               	movlw	1
  1390   0010BC  6E18               	movwf	(??_Reading_Discrete_Output+1)^0,c
  1391   0010BE  2A17               	incf	??_Reading_Discrete_Output^0,f,c
  1392   0010C0  EF64  F008         	goto	u2314
  1393   0010C4                     u2315:
  1394   0010C4  90D8               	bcf	status,0,c
  1395   0010C6  3618               	rlcf	(??_Reading_Discrete_Output+1)^0,f,c
  1396   0010C8                     u2314:
  1397   0010C8  2E17               	decfsz	??_Reading_Discrete_Output^0,f,c
  1398   0010CA  EF62  F008         	goto	u2315
  1399   0010CE  5018               	movf	(??_Reading_Discrete_Output+1)^0,w,c
  1400   0010D0  1419               	andwf	Reading_Discrete_Output@Danie^0,w,c
  1401   0010D2  0900               	iorlw	0
  1402   0010D4  B4D8               	btfsc	status,2,c
  1403   0010D6  EF6F  F008         	goto	u2321
  1404   0010DA  EF71  F008         	goto	u2320
  1405   0010DE                     u2321:
  1406   0010DE  EF7F  F008         	goto	l4341
  1407   0010E2                     u2320:
  1408   0010E2                     
  1409                           ;Modbas_RTU.c: 240:                     {;Modbas_RTU.c: 241:                       Temp2
      +                           |=(1<<address2);
  1410   0010E2  C01C  F017         	movff	Reading_Discrete_Output@address2,??_Reading_Discrete_Output
  1411   0010E6  0E01               	movlw	1
  1412   0010E8  6E18               	movwf	(??_Reading_Discrete_Output+1)^0,c
  1413   0010EA  2A17               	incf	??_Reading_Discrete_Output^0,f,c
  1414   0010EC  EF7A  F008         	goto	u2334
  1415   0010F0                     u2335:
  1416   0010F0  90D8               	bcf	status,0,c
  1417   0010F2  3618               	rlcf	(??_Reading_Discrete_Output+1)^0,f,c
  1418   0010F4                     u2334:
  1419   0010F4  2E17               	decfsz	??_Reading_Discrete_Output^0,f,c
  1420   0010F6  EF78  F008         	goto	u2335
  1421   0010FA  5018               	movf	(??_Reading_Discrete_Output+1)^0,w,c
  1422   0010FC  121B               	iorwf	Reading_Discrete_Output@Temp2^0,f,c
  1423   0010FE                     l4341:
  1424                           
  1425                           ;Modbas_RTU.c: 243:                 address2 ++;
  1426   0010FE  2A1C               	incf	Reading_Discrete_Output@address2^0,f,c
  1427   001100                     
  1428                           ;Modbas_RTU.c: 244:                 address ++;
  1429   001100  4A20               	infsnz	Reading_Discrete_Output@address^0,f,c	;volatile
  1430   001102  2A21               	incf	(Reading_Discrete_Output@address+1)^0,f,c	;volatile
  1431                           
  1432                           ;Modbas_RTU.c: 245:                 if (address2 == 8 )
  1433   001104  0E08               	movlw	8
  1434   001106  181C               	xorwf	Reading_Discrete_Output@address2^0,w,c
  1435   001108  A4D8               	btfss	status,2,c
  1436   00110A  EF89  F008         	goto	u2341
  1437   00110E  EF8B  F008         	goto	u2340
  1438   001112                     u2341:
  1439   001112  EF98  F008         	goto	l4353
  1440   001116                     u2340:
  1441   001116                     
  1442                           ;Modbas_RTU.c: 246:                     {;Modbas_RTU.c: 247:                       addre
      +                          ss2 = 0;
  1443   001116  0E00               	movlw	0
  1444   001118  6E1C               	movwf	Reading_Discrete_Output@address2^0,c
  1445   00111A                     
  1446                           ;Modbas_RTU.c: 248:                       Temp3 ++;
  1447   00111A  2A1D               	incf	Reading_Discrete_Output@Temp3^0,f,c
  1448   00111C                     
  1449                           ;Modbas_RTU.c: 249:                       Danie_Rx_ModbasRtu[Temp3] = Temp2;
  1450   00111C  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  1451   00111E  241D               	addwf	Reading_Discrete_Output@Temp3^0,w,c
  1452   001120  6ED9               	movwf	fsr2l,c
  1453   001122  6ADA               	clrf	fsr2h,c
  1454   001124  0E00               	movlw	high _Danie_Rx_ModbasRtu
  1455   001126  22DA               	addwfc	fsr2h,f,c
  1456   001128  C01B  FFDF         	movff	Reading_Discrete_Output@Temp2,indf2
  1457   00112C                     
  1458                           ;Modbas_RTU.c: 250:                       Temp2 = 0;
  1459   00112C  0E00               	movlw	0
  1460   00112E  6E1B               	movwf	Reading_Discrete_Output@Temp2^0,c
  1461   001130                     l4353:
  1462                           
  1463                           ;Modbas_RTU.c: 252:                 if ( address == 8)
  1464   001130  0E08               	movlw	8
  1465   001132  1820               	xorwf	Reading_Discrete_Output@address^0,w,c	;volatile
  1466   001134  1021               	iorwf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  1467   001136  A4D8               	btfss	status,2,c
  1468   001138  EFA0  F008         	goto	u2351
  1469   00113C  EFA2  F008         	goto	u2350
  1470   001140                     u2351:
  1471   001140  EFA9  F008         	goto	l4361
  1472   001144                     u2350:
  1473   001144                     
  1474                           ;Modbas_RTU.c: 253:                     {;Modbas_RTU.c: 254:                        addr
      +                          ess = 0;
  1475   001144  0E00               	movlw	0
  1476   001146  6E21               	movwf	(Reading_Discrete_Output@address+1)^0,c	;volatile
  1477   001148  0E00               	movlw	0
  1478   00114A  6E20               	movwf	Reading_Discrete_Output@address^0,c	;volatile
  1479   00114C                     
  1480                           ;Modbas_RTU.c: 255:                        Temp++;
  1481   00114C  2A1A               	incf	Reading_Discrete_Output@Temp^0,f,c
  1482   00114E  EF4E  F008         	goto	l4333
  1483   001152                     l4361:
  1484                           
  1485                           ;Modbas_RTU.c: 236:   while ( Number_bits > 0)
  1486   001152  501E               	movf	Reading_Discrete_Output@Number_bits^0,w,c	;volatile
  1487   001154  101F               	iorwf	(Reading_Discrete_Output@Number_bits+1)^0,w,c	;volatile
  1488   001156  A4D8               	btfss	status,2,c
  1489   001158  EFB0  F008         	goto	u2361
  1490   00115C  EFB2  F008         	goto	u2360
  1491   001160                     u2361:
  1492   001160  EF58  F008         	goto	l4335
  1493   001164                     u2360:
  1494   001164                     
  1495                           ;Modbas_RTU.c: 259:   if ( address2 > 0 )
  1496   001164  501C               	movf	Reading_Discrete_Output@address2^0,w,c
  1497   001166  B4D8               	btfsc	status,2,c
  1498   001168  EFB8  F008         	goto	u2371
  1499   00116C  EFBA  F008         	goto	u2370
  1500   001170                     u2371:
  1501   001170  EFC3  F008         	goto	l4369
  1502   001174                     u2370:
  1503   001174                     
  1504                           ;Modbas_RTU.c: 260:    {;Modbas_RTU.c: 261:      Temp3 ++;
  1505   001174  2A1D               	incf	Reading_Discrete_Output@Temp3^0,f,c
  1506   001176                     
  1507                           ;Modbas_RTU.c: 262:      Danie_Rx_ModbasRtu[Temp3] = Temp2;
  1508   001176  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  1509   001178  241D               	addwf	Reading_Discrete_Output@Temp3^0,w,c
  1510   00117A  6ED9               	movwf	fsr2l,c
  1511   00117C  6ADA               	clrf	fsr2h,c
  1512   00117E  0E00               	movlw	high _Danie_Rx_ModbasRtu
  1513   001180  22DA               	addwfc	fsr2h,f,c
  1514   001182  C01B  FFDF         	movff	Reading_Discrete_Output@Temp2,indf2
  1515   001186                     l4369:
  1516                           
  1517                           ;Modbas_RTU.c: 266:   Danie_Rx_ModbasRtu[2] = Temp3 - 2;
  1518   001186  501D               	movf	Reading_Discrete_Output@Temp3^0,w,c
  1519   001188  0FFE               	addlw	254
  1520   00118A  0100               	movlb	0	; () banked
  1521   00118C  6F8E               	movwf	(_Danie_Rx_ModbasRtu+2)& (0+255),b
  1522   00118E                     
  1523                           ; BSR set to: 0
  1524                           ;Modbas_RTU.c: 267:   Temp3 ++;
  1525   00118E  2A1D               	incf	Reading_Discrete_Output@Temp3^0,f,c
  1526   001190                     
  1527                           ; BSR set to: 0
  1528                           ;Modbas_RTU.c: 268:   check_sum ( Temp3);
  1529   001190  501D               	movf	Reading_Discrete_Output@Temp3^0,w,c
  1530   001192  ECE5  F00E         	call	_check_sum
  1531   001196                     l842:
  1532   001196  0012               	return		;funcret
  1533   001198                     __end_of_Reading_Discrete_Output:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _Read_analog_input *****************
  1537 ;; Defined at:
  1538 ;;		line 276 in file "Modbas_RTU.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  Massiv          2   19[COMRAM] PTR unsigned char 
  1541 ;;		 -> Danie_ModbasRtu_analog_Output(20), Danie_ModbasRtu_analog_input(20), Read_analog_input@Danie(2), 
  1542 ;;  Number_         1   21[COMRAM] unsigned char 
  1543 ;;  Vt              1   22[COMRAM] unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  Number_bits     2   29[COMRAM] volatile unsigned int 
  1546 ;;  address         2   27[COMRAM] volatile unsigned int 
  1547 ;;  Danie           2   25[COMRAM] volatile unsigned int 
  1548 ;;  Adress          1   31[COMRAM] volatile unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:       13 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 7
  1565 ;; This function calls:
  1566 ;;		_Error_modbasRtu
  1567 ;;		_ModbasRtu_Register_address
  1568 ;;		_check_sum
  1569 ;; This function is called by:
  1570 ;;		_modbasRtu_Answer
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text5
  1575   001198                     __ptext5:
  1576                           	callstack 0
  1577   001198                     _Read_analog_input:
  1578                           	callstack 21
  1579   001198                     
  1580                           ;Modbas_RTU.c: 276:  void Read_analog_input(unsigned char* Massiv, register unsigned cha
      +                          r Number_, unsigned char Vt);Modbas_RTU.c: 277:  {;Modbas_RTU.c: 278:  volatile unsigned
      +                           int address,Number_bits,Danie;;Modbas_RTU.c: 279:  volatile unsigned char Adress = 4;
  1581   001198  0E04               	movlw	4
  1582   00119A  6E20               	movwf	Read_analog_input@Adress^0,c	;volatile
  1583   00119C                     
  1584                           ;Modbas_RTU.c: 280:  address = ModbasRtu_Register_address(3);
  1585   00119C  0E03               	movlw	3
  1586   00119E  EC64  F00F         	call	_ModbasRtu_Register_address
  1587   0011A2  C007  F01C         	movff	?_ModbasRtu_Register_address,Read_analog_input@address	;volatile
  1588   0011A6  C008  F01D         	movff	?_ModbasRtu_Register_address+1,Read_analog_input@address+1	;volatile
  1589   0011AA                     
  1590                           ;Modbas_RTU.c: 281:  if ( address > Number_ )
  1591   0011AA  5016               	movf	Read_analog_input@Number_^0,w,c
  1592   0011AC  6E18               	movwf	??_Read_analog_input^0,c
  1593   0011AE  6A19               	clrf	(??_Read_analog_input+1)^0,c
  1594   0011B0  501C               	movf	Read_analog_input@address^0,w,c	;volatile
  1595   0011B2  5C18               	subwf	??_Read_analog_input^0,w,c
  1596   0011B4  501D               	movf	(Read_analog_input@address+1)^0,w,c	;volatile
  1597   0011B6  5819               	subwfb	(??_Read_analog_input+1)^0,w,c
  1598   0011B8  B0D8               	btfsc	status,0,c
  1599   0011BA  EFE1  F008         	goto	u2381
  1600   0011BE  EFE3  F008         	goto	u2380
  1601   0011C2                     u2381:
  1602   0011C2  EFE8  F008         	goto	l4383
  1603   0011C6                     u2380:
  1604   0011C6                     
  1605                           ;Modbas_RTU.c: 282:   {;Modbas_RTU.c: 283:   Error_modbasRtu (0x02);
  1606   0011C6  0E02               	movlw	2
  1607   0011C8  ECD3  F010         	call	_Error_modbasRtu
  1608                           
  1609                           ;Modbas_RTU.c: 284:   }
  1610   0011CC  EF4F  F009         	goto	l852
  1611   0011D0                     l4383:
  1612                           
  1613                           ;Modbas_RTU.c: 286:   {;Modbas_RTU.c: 287:   Number_bits = ModbasRtu_Register_address(5)
      +                          ;
  1614   0011D0  0E05               	movlw	5
  1615   0011D2  EC64  F00F         	call	_ModbasRtu_Register_address
  1616   0011D6  C007  F01E         	movff	?_ModbasRtu_Register_address,Read_analog_input@Number_bits	;volatile
  1617   0011DA  C008  F01F         	movff	?_ModbasRtu_Register_address+1,Read_analog_input@Number_bits+1	;volatile
  1618   0011DE                     
  1619                           ;Modbas_RTU.c: 288:   Danie_Rx_ModbasRtu[2] = (char)Number_bits * 2;
  1620   0011DE  501E               	movf	Read_analog_input@Number_bits^0,w,c	;volatile
  1621   0011E0  0D02               	mullw	2
  1622   0011E2  CFF3 F08E          	movff	prodl,_Danie_Rx_ModbasRtu+2
  1623   0011E6                     
  1624                           ;Modbas_RTU.c: 289:   Adress = 3;
  1625   0011E6  0E03               	movlw	3
  1626   0011E8  6E20               	movwf	Read_analog_input@Adress^0,c	;volatile
  1627                           
  1628                           ;Modbas_RTU.c: 290:   while (Number_bits > 0 )
  1629   0011EA  EF43  F009         	goto	l4409
  1630   0011EE                     l4389:
  1631                           
  1632                           ;Modbas_RTU.c: 291:    {;Modbas_RTU.c: 292:    if ( Vt == 1 )
  1633   0011EE  0417               	decf	Read_analog_input@Vt^0,w,c
  1634   0011F0  A4D8               	btfss	status,2,c
  1635   0011F2  EFFD  F008         	goto	u2391
  1636   0011F6  EFFF  F008         	goto	u2390
  1637   0011FA                     u2391:
  1638   0011FA  EF0E  F009         	goto	l4393
  1639   0011FE                     u2390:
  1640   0011FE                     
  1641                           ;Modbas_RTU.c: 293:    {;Modbas_RTU.c: 294:      Danie = Danie_ModbasRtu_analog_input[ a
      +                          ddress ];
  1642   0011FE  90D8               	bcf	status,0,c
  1643   001200  341C               	rlcf	Read_analog_input@address^0,w,c	;volatile
  1644   001202  6ED9               	movwf	fsr2l,c
  1645   001204  341D               	rlcf	(Read_analog_input@address+1)^0,w,c	;volatile
  1646   001206  6EDA               	movwf	fsr2h,c
  1647   001208  0EBE               	movlw	low _Danie_ModbasRtu_analog_input
  1648   00120A  26D9               	addwf	fsr2l,f,c
  1649   00120C  0E00               	movlw	high _Danie_ModbasRtu_analog_input
  1650   00120E  22DA               	addwfc	fsr2h,f,c
  1651   001210  CFDE F01A          	movff	postinc2,Read_analog_input@Danie	;volatile
  1652   001214  CFDD F01B          	movff	postdec2,Read_analog_input@Danie+1	;volatile
  1653                           
  1654                           ;Modbas_RTU.c: 295:    }
  1655   001218  EF1B  F009         	goto	l4395
  1656   00121C                     l4393:
  1657                           
  1658                           ;Modbas_RTU.c: 297:       {;Modbas_RTU.c: 298:      Danie = Danie_ModbasRtu_analog_Outpu
      +                          t[ address ];
  1659   00121C  90D8               	bcf	status,0,c
  1660   00121E  341C               	rlcf	Read_analog_input@address^0,w,c	;volatile
  1661   001220  6ED9               	movwf	fsr2l,c
  1662   001222  341D               	rlcf	(Read_analog_input@address+1)^0,w,c	;volatile
  1663   001224  6EDA               	movwf	fsr2h,c
  1664   001226  0EAA               	movlw	low _Danie_ModbasRtu_analog_Output
  1665   001228  26D9               	addwf	fsr2l,f,c
  1666   00122A  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  1667   00122C  22DA               	addwfc	fsr2h,f,c
  1668   00122E  CFDE F01A          	movff	postinc2,Read_analog_input@Danie	;volatile
  1669   001232  CFDD F01B          	movff	postdec2,Read_analog_input@Danie+1	;volatile
  1670   001236                     l4395:
  1671                           
  1672                           ;Modbas_RTU.c: 300:    address++;
  1673   001236  4A1C               	infsnz	Read_analog_input@address^0,f,c	;volatile
  1674   001238  2A1D               	incf	(Read_analog_input@address+1)^0,f,c	;volatile
  1675   00123A                     
  1676                           ;Modbas_RTU.c: 301:    Massiv = &Danie;
  1677   00123A  0E1A               	movlw	low Read_analog_input@Danie
  1678   00123C  6E14               	movwf	Read_analog_input@Massiv^0,c
  1679   00123E  0E00               	movlw	high Read_analog_input@Danie
  1680   001240  6E15               	movwf	(Read_analog_input@Massiv+1)^0,c
  1681   001242                     
  1682                           ;Modbas_RTU.c: 302:    Danie_Rx_ModbasRtu[Adress ++] = Massiv[1];
  1683   001242  EE20 F001          	lfsr	2,1
  1684   001246  5014               	movf	Read_analog_input@Massiv^0,w,c
  1685   001248  26D9               	addwf	fsr2l,f,c
  1686   00124A  5015               	movf	(Read_analog_input@Massiv+1)^0,w,c
  1687   00124C  22DA               	addwfc	fsr2h,f,c
  1688   00124E  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  1689   001250  2420               	addwf	Read_analog_input@Adress^0,w,c	;volatile
  1690   001252  6EE1               	movwf	fsr1l,c
  1691   001254  6AE2               	clrf	fsr1h,c
  1692   001256  0E00               	movlw	high _Danie_Rx_ModbasRtu
  1693   001258  22E2               	addwfc	fsr1h,f,c
  1694   00125A  CFDF FFE7          	movff	indf2,indf1
  1695   00125E  2A20               	incf	Read_analog_input@Adress^0,f,c	;volatile
  1696   001260                     
  1697                           ;Modbas_RTU.c: 303:    Danie_Rx_ModbasRtu[Adress++] = Massiv [0];
  1698   001260  C014  FFD9         	movff	Read_analog_input@Massiv,fsr2l
  1699   001264  C015  FFDA         	movff	Read_analog_input@Massiv+1,fsr2h
  1700   001268  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  1701   00126A  2420               	addwf	Read_analog_input@Adress^0,w,c	;volatile
  1702   00126C  6EE1               	movwf	fsr1l,c
  1703   00126E  6AE2               	clrf	fsr1h,c
  1704   001270  0E00               	movlw	high _Danie_Rx_ModbasRtu
  1705   001272  22E2               	addwfc	fsr1h,f,c
  1706   001274  CFDF FFE7          	movff	indf2,indf1
  1707   001278  2A20               	incf	Read_analog_input@Adress^0,f,c	;volatile
  1708   00127A                     
  1709                           ;Modbas_RTU.c: 304:    Number_bits = Number_bits - 1 ;
  1710   00127A  0EFF               	movlw	255
  1711   00127C  241E               	addwf	Read_analog_input@Number_bits^0,w,c	;volatile
  1712   00127E  6E1E               	movwf	Read_analog_input@Number_bits^0,c	;volatile
  1713   001280  0EFF               	movlw	255
  1714   001282  201F               	addwfc	(Read_analog_input@Number_bits+1)^0,w,c	;volatile
  1715   001284  6E1F               	movwf	(Read_analog_input@Number_bits+1)^0,c	;volatile
  1716   001286                     l4409:
  1717                           
  1718                           ;Modbas_RTU.c: 290:   while (Number_bits > 0 )
  1719   001286  501E               	movf	Read_analog_input@Number_bits^0,w,c	;volatile
  1720   001288  101F               	iorwf	(Read_analog_input@Number_bits+1)^0,w,c	;volatile
  1721   00128A  A4D8               	btfss	status,2,c
  1722   00128C  EF4A  F009         	goto	u2401
  1723   001290  EF4C  F009         	goto	u2400
  1724   001294                     u2401:
  1725   001294  EFF7  F008         	goto	l4389
  1726   001298                     u2400:
  1727   001298                     
  1728                           ;Modbas_RTU.c: 306:   check_sum ( Adress);
  1729   001298  5020               	movf	Read_analog_input@Adress^0,w,c	;volatile
  1730   00129A  ECE5  F00E         	call	_check_sum
  1731   00129E                     l852:
  1732   00129E  0012               	return		;funcret
  1733   0012A0                     __end_of_Read_analog_input:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function _Changing_Discrete_Output *****************
  1737 ;; Defined at:
  1738 ;;		line 194 in file "Modbas_RTU.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  address         2   19[COMRAM] unsigned int 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 7
  1759 ;; This function calls:
  1760 ;;		_Error_modbasRtu
  1761 ;;		_ModbasRtu_Register_address
  1762 ;;		__Bin_input_Output
  1763 ;; This function is called by:
  1764 ;;		_modbasRtu_Answer
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text6
  1769   001A98                     __ptext6:
  1770                           	callstack 0
  1771   001A98                     _Changing_Discrete_Output:
  1772                           	callstack 21
  1773   001A98                     
  1774                           ;Modbas_RTU.c: 196:    register unsigned int address;;Modbas_RTU.c: 197:    address = Mo
      +                          dbasRtu_Register_address(3);
  1775   001A98  0E03               	movlw	3
  1776   001A9A  EC64  F00F         	call	_ModbasRtu_Register_address
  1777   001A9E  C007  F014         	movff	?_ModbasRtu_Register_address,Changing_Discrete_Output@address
  1778   001AA2  C008  F015         	movff	?_ModbasRtu_Register_address+1,Changing_Discrete_Output@address+1
  1779   001AA6                     
  1780                           ;Modbas_RTU.c: 198:    if ( address > 10 )
  1781   001AA6  5015               	movf	(Changing_Discrete_Output@address+1)^0,w,c
  1782   001AA8  E109               	bnz	u2270
  1783   001AAA  0E0B               	movlw	11
  1784   001AAC  5C14               	subwf	Changing_Discrete_Output@address^0,w,c
  1785   001AAE  A0D8               	btfss	status,0,c
  1786   001AB0  EF5C  F00D         	goto	u2271
  1787   001AB4  EF5E  F00D         	goto	u2270
  1788   001AB8                     u2271:
  1789   001AB8  EF63  F00D         	goto	l4311
  1790   001ABC                     u2270:
  1791   001ABC                     
  1792                           ;Modbas_RTU.c: 199:     {;Modbas_RTU.c: 200:     Error_modbasRtu (0x02);
  1793   001ABC  0E02               	movlw	2
  1794   001ABE  ECD3  F010         	call	_Error_modbasRtu
  1795                           
  1796                           ;Modbas_RTU.c: 201:     }
  1797   001AC2  EF84  F00D         	goto	l827
  1798   001AC6                     l4311:
  1799                           
  1800                           ;Modbas_RTU.c: 203:     {;Modbas_RTU.c: 204:    if (Danie_Rx_ModbasRtu[4] == 255)
  1801   001AC6  0100               	movlb	0	; () banked
  1802   001AC8  2990               	incf	(_Danie_Rx_ModbasRtu+4)& (0+255),w,b
  1803   001ACA  A4D8               	btfss	status,2,c
  1804   001ACC  EF6A  F00D         	goto	u2281
  1805   001AD0  EF6C  F00D         	goto	u2280
  1806   001AD4                     u2281:
  1807   001AD4  EF79  F00D         	goto	l4315
  1808   001AD8                     u2280:
  1809   001AD8                     
  1810                           ; BSR set to: 0
  1811                           ;Modbas_RTU.c: 205:      _Bin_input_Output ((char)address,1,Danie_ModbasRtu_Binary_Outpu
      +                          t,10);
  1812   001AD8  0E01               	movlw	1
  1813   001ADA  6E07               	movwf	__Bin_input_Output@state^0,c
  1814   001ADC  0E3F               	movlw	low _Danie_ModbasRtu_Binary_Output
  1815   001ADE  6E08               	movwf	__Bin_input_Output@Masiv^0,c
  1816   001AE0  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  1817   001AE2  6E09               	movwf	(__Bin_input_Output@Masiv+1)^0,c
  1818   001AE4  0E0A               	movlw	10
  1819   001AE6  6E0A               	movwf	__Bin_input_Output@Sd^0,c
  1820   001AE8  5014               	movf	Changing_Discrete_Output@address^0,w,c
  1821   001AEA  ECCC  F009         	call	__Bin_input_Output
  1822   001AEE  EF84  F00D         	goto	l827
  1823   001AF2                     l4315:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;Modbas_RTU.c: 207:            _Bin_input_Output ((char)address,0,Danie_ModbasRtu_Binary
      +                          _Output,10);
  1827   001AF2  0E00               	movlw	0
  1828   001AF4  6E07               	movwf	__Bin_input_Output@state^0,c
  1829   001AF6  0E3F               	movlw	low _Danie_ModbasRtu_Binary_Output
  1830   001AF8  6E08               	movwf	__Bin_input_Output@Masiv^0,c
  1831   001AFA  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  1832   001AFC  6E09               	movwf	(__Bin_input_Output@Masiv+1)^0,c
  1833   001AFE  0E0A               	movlw	10
  1834   001B00  6E0A               	movwf	__Bin_input_Output@Sd^0,c
  1835   001B02  5014               	movf	Changing_Discrete_Output@address^0,w,c
  1836   001B04  ECCC  F009         	call	__Bin_input_Output
  1837   001B08                     l827:
  1838   001B08  0012               	return		;funcret
  1839   001B0A                     __end_of_Changing_Discrete_Output:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function __Bin_input_Output *****************
  1843 ;; Defined at:
  1844 ;;		line 162 in file "Modbas_RTU.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  NUMBER          1    wreg     unsigned char 
  1847 ;;  state           1    6[COMRAM] unsigned char 
  1848 ;;  Masiv           2    7[COMRAM] PTR volatile unsigned ch
  1849 ;;		 -> Danie_ModbasRtu_Binary_input(2), Danie_ModbasRtu_Binary_Output(2), 
  1850 ;;  Sd              1    9[COMRAM] volatile unsigned char 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  NUMBER          1   12[COMRAM] unsigned char 
  1853 ;;  Temp1           1   14[COMRAM] volatile unsigned char 
  1854 ;;  Temp            1   13[COMRAM] volatile unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      unsigned char 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;Total ram usage:        9 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 4
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_Changing_Discrete_Output
  1875 ;;		_read_digital_inputs
  1876 ;;		_change_digital_inputs
  1877 ;;		_read_digital_Output
  1878 ;;		_change_digital_Output
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text7
  1883   001398                     __ptext7:
  1884                           	callstack 0
  1885   001398                     __Bin_input_Output:
  1886                           	callstack 23
  1887                           
  1888                           ;incstack = 0
  1889                           ;__Bin_input_Output@NUMBER stored from wreg
  1890   001398  6E0D               	movwf	__Bin_input_Output@NUMBER^0,c
  1891   00139A                     
  1892                           ;Modbas_RTU.c: 162: char _Bin_input_Output( register unsigned char NUMBER, register unsi
      +                          gned char state,volatile unsigned char *Masiv, volatile unsigned char Sd );Modbas_RTU.c:
      +                           163:   {;Modbas_RTU.c: 164:  volatile unsigned char Temp = 0,Temp1 = 0;
  1893   00139A  0E00               	movlw	0
  1894   00139C  6E0E               	movwf	__Bin_input_Output@Temp^0,c	;volatile
  1895   00139E  0E00               	movlw	0
  1896   0013A0  6E0F               	movwf	__Bin_input_Output@Temp1^0,c	;volatile
  1897                           
  1898                           ;Modbas_RTU.c: 165:  while (NUMBER >= 8)
  1899   0013A2  EFD7  F009         	goto	l4231
  1900   0013A6                     l4227:
  1901                           
  1902                           ;Modbas_RTU.c: 166:   {;Modbas_RTU.c: 167:     NUMBER = NUMBER - 8;
  1903   0013A6  500D               	movf	__Bin_input_Output@NUMBER^0,w,c
  1904   0013A8  0FF8               	addlw	248
  1905   0013AA  6E0D               	movwf	__Bin_input_Output@NUMBER^0,c
  1906   0013AC                     
  1907                           ;Modbas_RTU.c: 168:     Temp ++;
  1908   0013AC  2A0E               	incf	__Bin_input_Output@Temp^0,f,c	;volatile
  1909   0013AE                     l4231:
  1910                           
  1911                           ;Modbas_RTU.c: 165:  while (NUMBER >= 8)
  1912   0013AE  0E08               	movlw	8
  1913   0013B0  600D               	cpfslt	__Bin_input_Output@NUMBER^0,c
  1914   0013B2  EFDD  F009         	goto	u2171
  1915   0013B6  EFDF  F009         	goto	u2170
  1916   0013BA                     u2171:
  1917   0013BA  EFD3  F009         	goto	l4227
  1918   0013BE                     u2170:
  1919   0013BE                     
  1920                           ;Modbas_RTU.c: 170:  Temp1 = Masiv [ Temp ];
  1921   0013BE  500E               	movf	__Bin_input_Output@Temp^0,w,c	;volatile
  1922   0013C0  2408               	addwf	__Bin_input_Output@Masiv^0,w,c
  1923   0013C2  6ED9               	movwf	fsr2l,c
  1924   0013C4  0E00               	movlw	0
  1925   0013C6  2009               	addwfc	(__Bin_input_Output@Masiv+1)^0,w,c
  1926   0013C8  6EDA               	movwf	fsr2h,c
  1927   0013CA  50DF               	movf	indf2,w,c
  1928   0013CC  6E0F               	movwf	__Bin_input_Output@Temp1^0,c	;volatile
  1929   0013CE                     
  1930                           ;Modbas_RTU.c: 171:  if (Sd == 10 )
  1931   0013CE  0E0A               	movlw	10
  1932   0013D0  180A               	xorwf	__Bin_input_Output@Sd^0,w,c	;volatile
  1933   0013D2  A4D8               	btfss	status,2,c
  1934   0013D4  EFEE  F009         	goto	u2181
  1935   0013D8  EFF0  F009         	goto	u2180
  1936   0013DC                     u2181:
  1937   0013DC  EF21  F00A         	goto	l4245
  1938   0013E0                     u2180:
  1939   0013E0                     
  1940                           ;Modbas_RTU.c: 172:   {;Modbas_RTU.c: 173:     if ( state == 1)
  1941   0013E0  0407               	decf	__Bin_input_Output@state^0,w,c
  1942   0013E2  A4D8               	btfss	status,2,c
  1943   0013E4  EFF6  F009         	goto	u2191
  1944   0013E8  EFF8  F009         	goto	u2190
  1945   0013EC                     u2191:
  1946   0013EC  EF08  F00A         	goto	l4241
  1947   0013F0                     u2190:
  1948   0013F0                     
  1949                           ;Modbas_RTU.c: 174:      Temp1 |=(1<<NUMBER);
  1950   0013F0  C00D  F00B         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  1951   0013F4  0E01               	movlw	1
  1952   0013F6  6E0C               	movwf	(??__Bin_input_Output+1)^0,c
  1953   0013F8  2A0B               	incf	??__Bin_input_Output^0,f,c
  1954   0013FA  EF01  F00A         	goto	u2204
  1955   0013FE                     u2205:
  1956   0013FE  90D8               	bcf	status,0,c
  1957   001400  360C               	rlcf	(??__Bin_input_Output+1)^0,f,c
  1958   001402                     u2204:
  1959   001402  2E0B               	decfsz	??__Bin_input_Output^0,f,c
  1960   001404  EFFF  F009         	goto	u2205
  1961   001408  500C               	movf	(??__Bin_input_Output+1)^0,w,c
  1962   00140A  120F               	iorwf	__Bin_input_Output@Temp1^0,f,c	;volatile
  1963   00140C  EF17  F00A         	goto	l4243
  1964   001410                     l4241:
  1965                           
  1966                           ;Modbas_RTU.c: 176:      Temp1 &=~(1<<NUMBER);
  1967   001410  C00D  F00B         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  1968   001414  0E01               	movlw	1
  1969   001416  6E0C               	movwf	(??__Bin_input_Output+1)^0,c
  1970   001418  2A0B               	incf	??__Bin_input_Output^0,f,c
  1971   00141A  EF11  F00A         	goto	u2214
  1972   00141E                     u2215:
  1973   00141E  90D8               	bcf	status,0,c
  1974   001420  360C               	rlcf	(??__Bin_input_Output+1)^0,f,c
  1975   001422                     u2214:
  1976   001422  2E0B               	decfsz	??__Bin_input_Output^0,f,c
  1977   001424  EF0F  F00A         	goto	u2215
  1978   001428  500C               	movf	(??__Bin_input_Output+1)^0,w,c
  1979   00142A  0AFF               	xorlw	255
  1980   00142C  160F               	andwf	__Bin_input_Output@Temp1^0,f,c	;volatile
  1981   00142E                     l4243:
  1982                           
  1983                           ;Modbas_RTU.c: 177:     Masiv [ Temp ] = Temp1;
  1984   00142E  500E               	movf	__Bin_input_Output@Temp^0,w,c	;volatile
  1985   001430  2408               	addwf	__Bin_input_Output@Masiv^0,w,c
  1986   001432  6ED9               	movwf	fsr2l,c
  1987   001434  0E00               	movlw	0
  1988   001436  2009               	addwfc	(__Bin_input_Output@Masiv+1)^0,w,c
  1989   001438  6EDA               	movwf	fsr2h,c
  1990   00143A  C00F  FFDF         	movff	__Bin_input_Output@Temp1,indf2	;volatile
  1991                           
  1992                           ;Modbas_RTU.c: 178:   }
  1993   00143E  EF3D  F00A         	goto	l817
  1994   001442                     l4245:
  1995                           
  1996                           ;Modbas_RTU.c: 180:   {;Modbas_RTU.c: 181:   if ( Temp1 & (1<<NUMBER) )
  1997   001442  C00D  F00B         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  1998   001446  0E01               	movlw	1
  1999   001448  6E0C               	movwf	(??__Bin_input_Output+1)^0,c
  2000   00144A  2A0B               	incf	??__Bin_input_Output^0,f,c
  2001   00144C  EF2A  F00A         	goto	u2224
  2002   001450                     u2225:
  2003   001450  90D8               	bcf	status,0,c
  2004   001452  360C               	rlcf	(??__Bin_input_Output+1)^0,f,c
  2005   001454                     u2224:
  2006   001454  2E0B               	decfsz	??__Bin_input_Output^0,f,c
  2007   001456  EF28  F00A         	goto	u2225
  2008   00145A  500C               	movf	(??__Bin_input_Output+1)^0,w,c
  2009   00145C  140F               	andwf	__Bin_input_Output@Temp1^0,w,c	;volatile
  2010   00145E  0900               	iorlw	0
  2011   001460  B4D8               	btfsc	status,2,c
  2012   001462  EF35  F00A         	goto	u2231
  2013   001466  EF37  F00A         	goto	u2230
  2014   00146A                     u2231:
  2015   00146A  EF3B  F00A         	goto	l4249
  2016   00146E                     u2230:
  2017   00146E                     
  2018                           ;Modbas_RTU.c: 182:    NUMBER = 1;
  2019   00146E  0E01               	movlw	1
  2020   001470  6E0D               	movwf	__Bin_input_Output@NUMBER^0,c
  2021   001472  EF3D  F00A         	goto	l817
  2022   001476                     l4249:
  2023                           
  2024                           ;Modbas_RTU.c: 184:    NUMBER = 0;
  2025   001476  0E00               	movlw	0
  2026   001478  6E0D               	movwf	__Bin_input_Output@NUMBER^0,c
  2027   00147A                     l817:
  2028                           
  2029                           ;Modbas_RTU.c: 186:   return NUMBER;
  2030   00147A  500D               	movf	__Bin_input_Output@NUMBER^0,w,c
  2031   00147C  0012               	return		;funcret
  2032   00147E                     __end_of__Bin_input_Output:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _ModbasRtu_Register_address *****************
  2036 ;; Defined at:
  2037 ;;		line 131 in file "Modbas_RTU.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  Li              1    wreg     unsigned char 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  Li              1   13[COMRAM] unsigned char 
  2042 ;;  Hi              1   12[COMRAM] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  2    6[COMRAM] unsigned int 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;Total ram usage:        8 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 4
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_Changing_Discrete_Output
  2063 ;;		_Reading_Discrete_Output
  2064 ;;		_Read_analog_input
  2065 ;;		_analog_output_recording
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text8
  2070   001EC8                     __ptext8:
  2071                           	callstack 0
  2072   001EC8                     _ModbasRtu_Register_address:
  2073                           	callstack 23
  2074                           
  2075                           ;incstack = 0
  2076                           ;ModbasRtu_Register_address@Li stored from wreg
  2077   001EC8  6E0E               	movwf	ModbasRtu_Register_address@Li^0,c
  2078   001ECA                     
  2079                           ;Modbas_RTU.c: 131:  unsigned int ModbasRtu_Register_address(unsigned char Li);Modbas_RT
      +                          U.c: 132:  {;Modbas_RTU.c: 133:   register char Hi= Li - 1;
  2080   001ECA  040E               	decf	ModbasRtu_Register_address@Li^0,w,c
  2081   001ECC  6E0D               	movwf	ModbasRtu_Register_address@Hi^0,c
  2082   001ECE                     
  2083                           ;Modbas_RTU.c: 134:   return Danie_Rx_ModbasRtu[Hi] * 256+ Danie_Rx_ModbasRtu[Li];
  2084   001ECE  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2085   001ED0  240E               	addwf	ModbasRtu_Register_address@Li^0,w,c
  2086   001ED2  6ED9               	movwf	fsr2l,c
  2087   001ED4  6ADA               	clrf	fsr2h,c
  2088   001ED6  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2089   001ED8  22DA               	addwfc	fsr2h,f,c
  2090   001EDA  50DF               	movf	indf2,w,c
  2091   001EDC  6E09               	movwf	??_ModbasRtu_Register_address^0,c
  2092   001EDE  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2093   001EE0  240D               	addwf	ModbasRtu_Register_address@Hi^0,w,c
  2094   001EE2  6ED9               	movwf	fsr2l,c
  2095   001EE4  6ADA               	clrf	fsr2h,c
  2096   001EE6  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2097   001EE8  22DA               	addwfc	fsr2h,f,c
  2098   001EEA  50DF               	movf	indf2,w,c
  2099   001EEC  6E0A               	movwf	(??_ModbasRtu_Register_address+1)^0,c
  2100   001EEE  500A               	movf	(??_ModbasRtu_Register_address+1)^0,w,c
  2101   001EF0  6E0C               	movwf	(??_ModbasRtu_Register_address+3)^0,c
  2102   001EF2  6A0B               	clrf	(??_ModbasRtu_Register_address+2)^0,c
  2103   001EF4  5009               	movf	??_ModbasRtu_Register_address^0,w,c
  2104   001EF6  240B               	addwf	(??_ModbasRtu_Register_address+2)^0,w,c
  2105   001EF8  6E07               	movwf	?_ModbasRtu_Register_address^0,c
  2106   001EFA  0E00               	movlw	0
  2107   001EFC  200C               	addwfc	(??_ModbasRtu_Register_address+3)^0,w,c
  2108   001EFE  6E08               	movwf	(?_ModbasRtu_Register_address+1)^0,c
  2109   001F00  0012               	return		;funcret
  2110   001F02                     __end_of_ModbasRtu_Register_address:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _Error_modbasRtu *****************
  2114 ;; Defined at:
  2115 ;;		line 332 in file "Modbas_RTU.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  Temp_Error      1    wreg     volatile unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  Temp_Error      1   18[COMRAM] volatile unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;Total ram usage:        1 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 6
  2136 ;; This function calls:
  2137 ;;		_check_sum
  2138 ;; This function is called by:
  2139 ;;		_Changing_Discrete_Output
  2140 ;;		_Reading_Discrete_Output
  2141 ;;		_Read_analog_input
  2142 ;;		_analog_output_recording
  2143 ;;		_modbasRtu_Answer
  2144 ;;		_modbasRtu_Slave
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text9
  2149   0021A6                     __ptext9:
  2150                           	callstack 0
  2151   0021A6                     _Error_modbasRtu:
  2152                           	callstack 21
  2153                           
  2154                           ;incstack = 0
  2155                           ;Error_modbasRtu@Temp_Error stored from wreg
  2156   0021A6  6E13               	movwf	Error_modbasRtu@Temp_Error^0,c	;volatile
  2157   0021A8                     
  2158                           ;Modbas_RTU.c: 332:  void Error_modbasRtu (volatile unsigned char Temp_Error);Modbas_RTU
      +                          .c: 333:   {;Modbas_RTU.c: 334:  Danie_Rx_ModbasRtu[1] |= (1<<7);
  2159   0021A8  0100               	movlb	0	; () banked
  2160   0021AA  8F8D               	bsf	(_Danie_Rx_ModbasRtu+1)& (0+255),7,b
  2161   0021AC                     
  2162                           ; BSR set to: 0
  2163                           ;Modbas_RTU.c: 335:  Danie_Rx_ModbasRtu[2] = Temp_Error;
  2164   0021AC  C013  F08E         	movff	Error_modbasRtu@Temp_Error,_Danie_Rx_ModbasRtu+2	;volatile
  2165   0021B0                     
  2166                           ; BSR set to: 0
  2167                           ;Modbas_RTU.c: 336:  check_sum (3);
  2168   0021B0  0E03               	movlw	3
  2169   0021B2  ECE5  F00E         	call	_check_sum
  2170   0021B6  0012               	return		;funcret
  2171   0021B8                     __end_of_Error_modbasRtu:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _check_sum *****************
  2175 ;; Defined at:
  2176 ;;		line 341 in file "Modbas_RTU.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  Adress          1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  Adress          1   17[COMRAM] unsigned char 
  2181 ;;  RC              2   15[COMRAM] unsigned int 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;Total ram usage:        3 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 5
  2198 ;; This function calls:
  2199 ;;		_crc_chk
  2200 ;; This function is called by:
  2201 ;;		_Reading_Discrete_Output
  2202 ;;		_Read_analog_input
  2203 ;;		_Error_modbasRtu
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text10
  2208   001DCA                     __ptext10:
  2209                           	callstack 0
  2210   001DCA                     _check_sum:
  2211                           	callstack 21
  2212                           
  2213                           ;incstack = 0
  2214                           ;check_sum@Adress stored from wreg
  2215   001DCA  6E12               	movwf	check_sum@Adress^0,c
  2216   001DCC                     
  2217                           ;Modbas_RTU.c: 341:  void check_sum ( register unsigned char Adress);Modbas_RTU.c: 342: 
      +                            {;Modbas_RTU.c: 343:  register unsigned int RC;;Modbas_RTU.c: 344:  RC = crc_chk(Danie
      +                          _Rx_ModbasRtu,Adress);
  2218   001DCC  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2219   001DCE  6E07               	movwf	crc_chk@data^0,c
  2220   001DD0  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2221   001DD2  6E08               	movwf	(crc_chk@data+1)^0,c
  2222   001DD4  C012  F009         	movff	check_sum@Adress,crc_chk@length
  2223   001DD8  ECC2  F00B         	call	_crc_chk	;wreg free
  2224   001DDC  C007  F010         	movff	?_crc_chk,check_sum@RC
  2225   001DE0  C008  F011         	movff	?_crc_chk+1,check_sum@RC+1
  2226   001DE4                     
  2227                           ;Modbas_RTU.c: 345:  Danie_Rx_ModbasRtu[Adress] = RC ;
  2228   001DE4  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2229   001DE6  2412               	addwf	check_sum@Adress^0,w,c
  2230   001DE8  6ED9               	movwf	fsr2l,c
  2231   001DEA  6ADA               	clrf	fsr2h,c
  2232   001DEC  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2233   001DEE  22DA               	addwfc	fsr2h,f,c
  2234   001DF0  C010  FFDF         	movff	check_sum@RC,indf2
  2235   001DF4                     
  2236                           ;Modbas_RTU.c: 346:  Adress++;
  2237   001DF4  2A12               	incf	check_sum@Adress^0,f,c
  2238   001DF6                     
  2239                           ;Modbas_RTU.c: 347:  Danie_Rx_ModbasRtu[Adress] = RC >> 8;
  2240   001DF6  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2241   001DF8  2412               	addwf	check_sum@Adress^0,w,c
  2242   001DFA  6ED9               	movwf	fsr2l,c
  2243   001DFC  6ADA               	clrf	fsr2h,c
  2244   001DFE  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2245   001E00  22DA               	addwfc	fsr2h,f,c
  2246   001E02  5011               	movf	(check_sum@RC+1)^0,w,c
  2247   001E04  6EDF               	movwf	indf2,c
  2248   001E06                     
  2249                           ;Modbas_RTU.c: 348:  quantity_Data_ModbasRtu = Adress;
  2250   001E06  C012  F03E         	movff	check_sum@Adress,_quantity_Data_ModbasRtu
  2251   001E0A  0012               	return		;funcret
  2252   001E0C                     __end_of_check_sum:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _Data_integrity *****************
  2256 ;; Defined at:
  2257 ;;		line 139 in file "Modbas_RTU.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  Temp22          2   16[COMRAM] unsigned int 
  2262 ;;  Temp33          1   18[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;Total ram usage:        4 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 5
  2279 ;; This function calls:
  2280 ;;		_crc_chk
  2281 ;; This function is called by:
  2282 ;;		_modbasRtu_Slave
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text11
  2287   001B7A                     __ptext11:
  2288                           	callstack 0
  2289   001B7A                     _Data_integrity:
  2290                           	callstack 24
  2291   001B7A                     
  2292                           ;Modbas_RTU.c: 141:    register unsigned int Temp22;;Modbas_RTU.c: 142:    register unsi
      +                          gned char Temp33;;Modbas_RTU.c: 143:    quantity_Data_ModbasRtu = quantity_Data_ModbasRt
      +                          u - 2;
  2293   001B7A  503E               	movf	_quantity_Data_ModbasRtu^0,w,c
  2294   001B7C  0FFE               	addlw	254
  2295   001B7E  6E3E               	movwf	_quantity_Data_ModbasRtu^0,c
  2296   001B80                     
  2297                           ;Modbas_RTU.c: 144:    Temp22 = crc_chk(Danie_Rx_ModbasRtu,quantity_Data_ModbasRtu);
  2298   001B80  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2299   001B82  6E07               	movwf	crc_chk@data^0,c
  2300   001B84  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2301   001B86  6E08               	movwf	(crc_chk@data+1)^0,c
  2302   001B88  C03E  F009         	movff	_quantity_Data_ModbasRtu,crc_chk@length
  2303   001B8C  ECC2  F00B         	call	_crc_chk	;wreg free
  2304   001B90  C007  F011         	movff	?_crc_chk,Data_integrity@Temp22
  2305   001B94  C008  F012         	movff	?_crc_chk+1,Data_integrity@Temp22+1
  2306   001B98                     
  2307                           ;Modbas_RTU.c: 145:    Temp33 = Temp22;
  2308   001B98  C011  F013         	movff	Data_integrity@Temp22,Data_integrity@Temp33
  2309   001B9C                     
  2310                           ;Modbas_RTU.c: 146:    if ( Danie_Rx_ModbasRtu[quantity_Data_ModbasRtu] == Temp33 )
  2311   001B9C  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2312   001B9E  243E               	addwf	_quantity_Data_ModbasRtu^0,w,c
  2313   001BA0  6ED9               	movwf	fsr2l,c
  2314   001BA2  6ADA               	clrf	fsr2h,c
  2315   001BA4  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2316   001BA6  22DA               	addwfc	fsr2h,f,c
  2317   001BA8  5013               	movf	Data_integrity@Temp33^0,w,c
  2318   001BAA  18DE               	xorwf	postinc2,w,c
  2319   001BAC  A4D8               	btfss	status,2,c
  2320   001BAE  EFDB  F00D         	goto	u2441
  2321   001BB2  EFDD  F00D         	goto	u2440
  2322   001BB6                     u2441:
  2323   001BB6  EFF2  F00D         	goto	l4559
  2324   001BBA                     u2440:
  2325   001BBA                     
  2326                           ;Modbas_RTU.c: 147:  {;Modbas_RTU.c: 148:    quantity_Data_ModbasRtu ++;
  2327   001BBA  2A3E               	incf	_quantity_Data_ModbasRtu^0,f,c
  2328   001BBC                     
  2329                           ;Modbas_RTU.c: 149:    Temp33 = (Temp22>> 8) ;
  2330   001BBC  5012               	movf	(Data_integrity@Temp22+1)^0,w,c
  2331   001BBE  6E13               	movwf	Data_integrity@Temp33^0,c
  2332   001BC0                     
  2333                           ;Modbas_RTU.c: 150:    if ( Danie_Rx_ModbasRtu[quantity_Data_ModbasRtu] == Temp33 )
  2334   001BC0  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2335   001BC2  243E               	addwf	_quantity_Data_ModbasRtu^0,w,c
  2336   001BC4  6ED9               	movwf	fsr2l,c
  2337   001BC6  6ADA               	clrf	fsr2h,c
  2338   001BC8  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2339   001BCA  22DA               	addwfc	fsr2h,f,c
  2340   001BCC  5013               	movf	Data_integrity@Temp33^0,w,c
  2341   001BCE  18DE               	xorwf	postinc2,w,c
  2342   001BD0  A4D8               	btfss	status,2,c
  2343   001BD2  EFED  F00D         	goto	u2451
  2344   001BD6  EFEF  F00D         	goto	u2450
  2345   001BDA                     u2451:
  2346   001BDA  EFF2  F00D         	goto	l4559
  2347   001BDE                     u2450:
  2348   001BDE                     
  2349                           ;Modbas_RTU.c: 151:     {;Modbas_RTU.c: 152:    return 1;
  2350   001BDE  0E01               	movlw	1
  2351   001BE0  EFF3  F00D         	goto	l808
  2352   001BE4                     l4559:
  2353                           
  2354                           ;Modbas_RTU.c: 155:    return 0;
  2355   001BE4  0E00               	movlw	0
  2356   001BE6                     l808:
  2357   001BE6  0012               	return		;funcret
  2358   001BE8                     __end_of_Data_integrity:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _crc_chk *****************
  2362 ;; Defined at:
  2363 ;;		line 107 in file "Modbas_RTU.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  data            2    6[COMRAM] PTR unsigned char 
  2366 ;;		 -> Danie_Rx_ModbasRtu(30), 
  2367 ;;  length          1    8[COMRAM] unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  reg_crc         2   13[COMRAM] unsigned int 
  2370 ;;  j               2   11[COMRAM] int 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2    6[COMRAM] int 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:        9 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 4
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_Data_integrity
  2391 ;;		_check_sum
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text12
  2396   001784                     __ptext12:
  2397                           	callstack 0
  2398   001784                     _crc_chk:
  2399                           	callstack 21
  2400   001784                     
  2401                           ;Modbas_RTU.c: 107:   int crc_chk (unsigned char* data, unsigned char length );Modbas_RT
      +                          U.c: 108:   {;Modbas_RTU.c: 109:   int j;;Modbas_RTU.c: 110:   unsigned int reg_crc = 0x
      +                          FFFF;
  2402   001784  680E               	setf	crc_chk@reg_crc^0,c
  2403   001786  680F               	setf	(crc_chk@reg_crc+1)^0,c
  2404                           
  2405                           ;Modbas_RTU.c: 111:  while (length--)
  2406   001788  EFFF  F00B         	goto	l4185
  2407   00178C                     l4167:
  2408                           
  2409                           ;Modbas_RTU.c: 112:  {;Modbas_RTU.c: 113:    reg_crc ^= *data++;
  2410   00178C  C007  FFD9         	movff	crc_chk@data,fsr2l
  2411   001790  C008  FFDA         	movff	crc_chk@data+1,fsr2h
  2412   001794  50DF               	movf	indf2,w,c
  2413   001796  6E0A               	movwf	??_crc_chk^0,c
  2414   001798  500A               	movf	??_crc_chk^0,w,c
  2415   00179A  1A0E               	xorwf	crc_chk@reg_crc^0,f,c
  2416   00179C  4A07               	infsnz	crc_chk@data^0,f,c
  2417   00179E  2A08               	incf	(crc_chk@data+1)^0,f,c
  2418   0017A0                     
  2419                           ;Modbas_RTU.c: 114:    for(j=0;j<8;j++)
  2420   0017A0  0E00               	movlw	0
  2421   0017A2  6E0D               	movwf	(crc_chk@j+1)^0,c
  2422   0017A4  0E00               	movlw	0
  2423   0017A6  6E0C               	movwf	crc_chk@j^0,c
  2424   0017A8                     l795:
  2425                           
  2426                           ;Modbas_RTU.c: 115:     {;Modbas_RTU.c: 116:    if(reg_crc & 0x01)
  2427   0017A8  A00E               	btfss	crc_chk@reg_crc^0,0,c
  2428   0017AA  EFD9  F00B         	goto	u2091
  2429   0017AE  EFDB  F00B         	goto	u2090
  2430   0017B2                     u2091:
  2431   0017B2  EFE8  F00B         	goto	l4179
  2432   0017B6                     u2090:
  2433   0017B6                     
  2434                           ;Modbas_RTU.c: 117:        {;Modbas_RTU.c: 118:       reg_crc = (reg_crc >> 1) ^ 0xA001;
  2435   0017B6  90D8               	bcf	status,0,c
  2436   0017B8  300F               	rrcf	(crc_chk@reg_crc+1)^0,w,c
  2437   0017BA  6E0B               	movwf	(??_crc_chk+1)^0,c
  2438   0017BC  300E               	rrcf	crc_chk@reg_crc^0,w,c
  2439   0017BE  6E0A               	movwf	??_crc_chk^0,c
  2440   0017C0  0E01               	movlw	1
  2441   0017C2  180A               	xorwf	??_crc_chk^0,w,c
  2442   0017C4  6E0E               	movwf	crc_chk@reg_crc^0,c
  2443   0017C6  0EA0               	movlw	160
  2444   0017C8  180B               	xorwf	(??_crc_chk+1)^0,w,c
  2445   0017CA  6E0F               	movwf	(crc_chk@reg_crc+1)^0,c
  2446                           
  2447                           ;Modbas_RTU.c: 119:        }
  2448   0017CC  EFEF  F00B         	goto	l4181
  2449   0017D0                     l4179:
  2450                           
  2451                           ;Modbas_RTU.c: 121:        {;Modbas_RTU.c: 122:       reg_crc = reg_crc >> 1;
  2452   0017D0  90D8               	bcf	status,0,c
  2453   0017D2  300F               	rrcf	(crc_chk@reg_crc+1)^0,w,c
  2454   0017D4  6E0A               	movwf	??_crc_chk^0,c
  2455   0017D6  300E               	rrcf	crc_chk@reg_crc^0,w,c
  2456   0017D8  6E0E               	movwf	crc_chk@reg_crc^0,c
  2457   0017DA  C00A  F00F         	movff	??_crc_chk,crc_chk@reg_crc+1
  2458   0017DE                     l4181:
  2459                           
  2460                           ;Modbas_RTU.c: 124:     }
  2461   0017DE  4A0C               	infsnz	crc_chk@j^0,f,c
  2462   0017E0  2A0D               	incf	(crc_chk@j+1)^0,f,c
  2463   0017E2  BE0D               	btfsc	(crc_chk@j+1)^0,7,c
  2464   0017E4  EFFD  F00B         	goto	u2101
  2465   0017E8  500D               	movf	(crc_chk@j+1)^0,w,c
  2466   0017EA  E109               	bnz	u2100
  2467   0017EC  0E08               	movlw	8
  2468   0017EE  5C0C               	subwf	crc_chk@j^0,w,c
  2469   0017F0  A0D8               	btfss	status,0,c
  2470   0017F2  EFFD  F00B         	goto	u2101
  2471   0017F6  EFFF  F00B         	goto	u2100
  2472   0017FA                     u2101:
  2473   0017FA  EFD4  F00B         	goto	l795
  2474   0017FE                     u2100:
  2475   0017FE                     l4185:
  2476                           
  2477                           ;Modbas_RTU.c: 111:  while (length--)
  2478   0017FE  0609               	decf	crc_chk@length^0,f,c
  2479   001800  2809               	incf	crc_chk@length^0,w,c
  2480   001802  A4D8               	btfss	status,2,c
  2481   001804  EF06  F00C         	goto	u2111
  2482   001808  EF08  F00C         	goto	u2110
  2483   00180C                     u2111:
  2484   00180C  EFC6  F00B         	goto	l4167
  2485   001810                     u2110:
  2486   001810                     
  2487                           ;Modbas_RTU.c: 126:  return reg_crc;
  2488   001810  C00E  F007         	movff	crc_chk@reg_crc,?_crc_chk
  2489   001814  C00F  F008         	movff	crc_chk@reg_crc+1,?_crc_chk+1
  2490   001818  0012               	return		;funcret
  2491   00181A                     __end_of_crc_chk:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _USART_UDRE_vect *****************
  2495 ;; Defined at:
  2496 ;;		line 82 in file "Modbas_RTU.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 4
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text13
  2525   001F38                     __ptext13:
  2526                           	callstack 0
  2527   001F38                     _USART_UDRE_vect:
  2528                           	callstack 26
  2529   001F38                     
  2530                           ;Modbas_RTU.c: 85:    if (quantity_Data_ModbasRtu >= Temp_ModbasRtu )
  2531   001F38  503D               	movf	_Temp_ModbasRtu^0,w,c
  2532   001F3A  5C3E               	subwf	_quantity_Data_ModbasRtu^0,w,c
  2533   001F3C  A0D8               	btfss	status,0,c
  2534   001F3E  EFA3  F00F         	goto	u2501
  2535   001F42  EFA5  F00F         	goto	u2500
  2536   001F46                     u2501:
  2537   001F46  EFB0  F00F         	goto	l4631
  2538   001F4A                     u2500:
  2539   001F4A                     
  2540                           ;Modbas_RTU.c: 86:     {;Modbas_RTU.c: 87:    TXREG = Danie_Rx_ModbasRtu[Temp_ModbasRtu+
      +                          +];
  2541   001F4A  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2542   001F4C  243D               	addwf	_Temp_ModbasRtu^0,w,c
  2543   001F4E  6ED9               	movwf	fsr2l,c
  2544   001F50  6ADA               	clrf	fsr2h,c
  2545   001F52  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2546   001F54  22DA               	addwfc	fsr2h,f,c
  2547   001F56  50DF               	movf	indf2,w,c
  2548   001F58  6EAD               	movwf	173,c	;volatile
  2549   001F5A  2A3D               	incf	_Temp_ModbasRtu^0,f,c
  2550                           
  2551                           ;Modbas_RTU.c: 89:     }
  2552   001F5C  EFB3  F00F         	goto	l790
  2553   001F60                     l4631:
  2554                           
  2555                           ;Modbas_RTU.c: 91:     {;Modbas_RTU.c: 96:       USART_UDR_vect=0;
  2556   001F60  0E00               	movlw	0
  2557   001F62  6E3A               	movwf	_USART_UDR_vect^0,c
  2558   001F64                     
  2559                           ;Modbas_RTU.c: 98:       PIE1bits.TX1IE=1;
  2560   001F64  889D               	bsf	157,4,c	;volatile
  2561   001F66                     l790:
  2562   001F66  0012               	return		;funcret
  2563   001F68                     __end_of_USART_UDRE_vect:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _SYSTEM_Initialize *****************
  2567 ;; Defined at:
  2568 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; Hardware stack levels required when called: 6
  2589 ;; This function calls:
  2590 ;;		_EUSART_Initialize
  2591 ;;		_I2C_Initialize
  2592 ;;		_INTERRUPT_Initialize
  2593 ;;		_OSCILLATOR_Initialize
  2594 ;;		_PIN_MANAGER_Initialize
  2595 ;;		_TMR0_Initialize
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text14
  2602   00211A                     __ptext14:
  2603                           	callstack 0
  2604   00211A                     _SYSTEM_Initialize:
  2605                           	callstack 24
  2606   00211A                     
  2607                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2608   00211A  EC63  F011         	call	_INTERRUPT_Initialize	;wreg free
  2609   00211E                     
  2610                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  2611   00211E  ECBF  F010         	call	_I2C_Initialize	;wreg free
  2612   002122                     
  2613                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2614   002122  EC37  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  2615   002126                     
  2616                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2617   002126  EC0B  F011         	call	_OSCILLATOR_Initialize	;wreg free
  2618   00212A                     
  2619                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  2620   00212A  EC5C  F010         	call	_TMR0_Initialize	;wreg free
  2621   00212E                     
  2622                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2623   00212E  EC12  F00D         	call	_EUSART_Initialize	;wreg free
  2624   002132  0012               	return		;funcret
  2625   002134                     __end_of_SYSTEM_Initialize:
  2626                           	callstack 0
  2627                           
  2628 ;; *************** function _TMR0_Initialize *****************
  2629 ;; Defined at:
  2630 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 5
  2651 ;; This function calls:
  2652 ;;		_TMR0_SetInterruptHandler
  2653 ;; This function is called by:
  2654 ;;		_SYSTEM_Initialize
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text15
  2659   0020B8                     __ptext15:
  2660                           	callstack 0
  2661   0020B8                     _TMR0_Initialize:
  2662                           	callstack 24
  2663   0020B8                     
  2664                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x00;
  2665   0020B8  0E00               	movlw	0
  2666   0020BA  6ED7               	movwf	215,c	;volatile
  2667                           
  2668                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xE1;
  2669   0020BC  0EE1               	movlw	225
  2670   0020BE  6ED6               	movwf	214,c	;volatile
  2671                           
  2672                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal = 225;
  2673   0020C0  0EE1               	movlw	225
  2674   0020C2  6E4C               	movwf	_timer0ReloadVal^0,c	;volatile
  2675   0020C4                     
  2676                           ;mcc_generated_files/tmr0.c: 83:     INTCONbits.TMR0IF = 0;
  2677   0020C4  94F2               	bcf	242,2,c	;volatile
  2678   0020C6                     
  2679                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IE = 1;
  2680   0020C6  8AF2               	bsf	242,5,c	;volatile
  2681   0020C8                     
  2682                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2683   0020C8  0E02               	movlw	low _TMR0_DefaultInterruptHandler
  2684   0020CA  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2685   0020CC  0E23               	movlw	high _TMR0_DefaultInterruptHandler
  2686   0020CE  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2687   0020D0  EC06  F011         	call	_TMR0_SetInterruptHandler	;wreg free
  2688   0020D4                     
  2689                           ;mcc_generated_files/tmr0.c: 92:     T0CON = 0x57;
  2690   0020D4  0E57               	movlw	87
  2691   0020D6  6ED5               	movwf	213,c	;volatile
  2692   0020D8  0012               	return		;funcret
  2693   0020DA                     __end_of_TMR0_Initialize:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _TMR0_SetInterruptHandler *****************
  2697 ;; Defined at:
  2698 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  2701 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;Total ram usage:        2 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 4
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_TMR0_Initialize
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text16
  2728   00220C                     __ptext16:
  2729                           	callstack 0
  2730   00220C                     _TMR0_SetInterruptHandler:
  2731                           	callstack 24
  2732   00220C                     
  2733                           ;mcc_generated_files/tmr0.c: 150:     TMR0_InterruptHandler = InterruptHandler;
  2734   00220C  C007  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2735   002210  C008  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2736   002214  0012               	return		;funcret
  2737   002216                     __end_of_TMR0_SetInterruptHandler:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _PIN_MANAGER_Initialize *****************
  2741 ;; Defined at:
  2742 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 4
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_SYSTEM_Initialize
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text17
  2771   00206E                     __ptext17:
  2772                           	callstack 0
  2773   00206E                     _PIN_MANAGER_Initialize:
  2774                           	callstack 25
  2775   00206E                     
  2776                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2777   00206E  0E00               	movlw	0
  2778   002070  6E89               	movwf	137,c	;volatile
  2779                           
  2780                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2781   002072  0E00               	movlw	0
  2782   002074  6E8A               	movwf	138,c	;volatile
  2783                           
  2784                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2785   002076  0E00               	movlw	0
  2786   002078  6E8B               	movwf	139,c	;volatile
  2787                           
  2788                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFC;
  2789   00207A  0EFC               	movlw	252
  2790   00207C  6E92               	movwf	146,c	;volatile
  2791   00207E                     
  2792                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  2793   00207E  6893               	setf	147,c	;volatile
  2794                           
  2795                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  2796   002080  0EBF               	movlw	191
  2797   002082  6E94               	movwf	148,c	;volatile
  2798                           
  2799                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x13;
  2800   002084  0E13               	movlw	19
  2801   002086  6E7E               	movwf	126,c	;volatile
  2802                           
  2803                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
  2804   002088  0E1F               	movlw	31
  2805   00208A  6E7F               	movwf	127,c	;volatile
  2806                           
  2807                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  2808   00208C  0E00               	movlw	0
  2809   00208E  6E7C               	movwf	124,c	;volatile
  2810   002090                     
  2811                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  2812   002090  8EF1               	bsf	241,7,c	;volatile
  2813   002092  0012               	return		;funcret
  2814   002094                     __end_of_PIN_MANAGER_Initialize:
  2815                           	callstack 0
  2816                           
  2817 ;; *************** function _OSCILLATOR_Initialize *****************
  2818 ;; Defined at:
  2819 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;Total ram usage:        0 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 4
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_SYSTEM_Initialize
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text18
  2848   002216                     __ptext18:
  2849                           	callstack 0
  2850   002216                     _OSCILLATOR_Initialize:
  2851                           	callstack 25
  2852   002216                     
  2853                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x60;
  2854   002216  0E60               	movlw	96
  2855   002218  6ED3               	movwf	211,c	;volatile
  2856                           
  2857                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2858   00221A  0E00               	movlw	0
  2859   00221C  6E9B               	movwf	155,c	;volatile
  2860   00221E  0012               	return		;funcret
  2861   002220                     __end_of_OSCILLATOR_Initialize:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _INTERRUPT_Initialize *****************
  2865 ;; Defined at:
  2866 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		None
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 4
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_SYSTEM_Initialize
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text19
  2895   0022C6                     __ptext19:
  2896                           	callstack 0
  2897   0022C6                     _INTERRUPT_Initialize:
  2898                           	callstack 25
  2899   0022C6                     
  2900                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2901   0022C6  9ED0               	bcf	208,7,c	;volatile
  2902   0022C8  0012               	return		;funcret
  2903   0022CA                     __end_of_INTERRUPT_Initialize:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _I2C_Initialize *****************
  2907 ;; Defined at:
  2908 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 4
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_SYSTEM_Initialize
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text20
  2937   00217E                     __ptext20:
  2938                           	callstack 0
  2939   00217E                     _I2C_Initialize:
  2940                           	callstack 25
  2941   00217E                     
  2942                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  2943   00217E  0E00               	movlw	0
  2944   002180  6EC7               	movwf	199,c	;volatile
  2945                           
  2946                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2947   002182  0E08               	movlw	8
  2948   002184  6EC6               	movwf	198,c	;volatile
  2949                           
  2950                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2951   002186  0E00               	movlw	0
  2952   002188  6EC5               	movwf	197,c	;volatile
  2953                           
  2954                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  2955   00218A  0E13               	movlw	19
  2956   00218C  6EC8               	movwf	200,c	;volatile
  2957   00218E                     
  2958                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2959   00218E  9AC6               	bcf	198,5,c	;volatile
  2960   002190  0012               	return		;funcret
  2961   002192                     __end_of_I2C_Initialize:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _EUSART_Initialize *****************
  2965 ;; Defined at:
  2966 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 5
  2987 ;; This function calls:
  2988 ;;		_EUSART_SetErrorHandler
  2989 ;;		_EUSART_SetFramingErrorHandler
  2990 ;;		_EUSART_SetOverrunErrorHandler
  2991 ;;		_EUSART_SetRxInterruptHandler
  2992 ;;		_EUSART_SetTxInterruptHandler
  2993 ;; This function is called by:
  2994 ;;		_SYSTEM_Initialize
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text21
  2999   001A24                     __ptext21:
  3000                           	callstack 0
  3001   001A24                     _EUSART_Initialize:
  3002                           	callstack 24
  3003   001A24                     
  3004                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  3005   001A24  9A9D               	bcf	157,5,c	;volatile
  3006   001A26                     
  3007                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3008   001A26  0E24               	movlw	low _EUSART_Receive_ISR
  3009   001A28  6E07               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  3010   001A2A  0E16               	movlw	high _EUSART_Receive_ISR
  3011   001A2C  6E08               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  3012   001A2E  EC15  F011         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3013   001A32                     
  3014                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  3015   001A32  989D               	bcf	157,4,c	;volatile
  3016                           
  3017                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3018   001A34  0E4C               	movlw	low _EUSART_Transmit_ISR
  3019   001A36  6E07               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  3020   001A38  0E1E               	movlw	high _EUSART_Transmit_ISR
  3021   001A3A  6E08               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  3022   001A3C  EC10  F011         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3023   001A40                     
  3024                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3025   001A40  0E08               	movlw	8
  3026   001A42  6EB8               	movwf	184,c	;volatile
  3027   001A44                     
  3028                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3029   001A44  0E90               	movlw	144
  3030   001A46  6EAB               	movwf	171,c	;volatile
  3031   001A48                     
  3032                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3033   001A48  0E24               	movlw	36
  3034   001A4A  6EAC               	movwf	172,c	;volatile
  3035   001A4C                     
  3036                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  3037   001A4C  0ECF               	movlw	207
  3038   001A4E  6EAF               	movwf	175,c	;volatile
  3039   001A50                     
  3040                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3041   001A50  0E00               	movlw	0
  3042   001A52  6EB0               	movwf	176,c	;volatile
  3043   001A54                     
  3044                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3045   001A54  0E04               	movlw	low _EUSART_DefaultFramingErrorHandler
  3046   001A56  6E07               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  3047   001A58  0E23               	movlw	high _EUSART_DefaultFramingErrorHandler
  3048   001A5A  6E08               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  3049   001A5C  EC1F  F011         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3050   001A60                     
  3051                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3052   001A60  0EBA               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3053   001A62  6E07               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  3054   001A64  0E22               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3055   001A66  6E08               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3056   001A68  EC1A  F011         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3057   001A6C                     
  3058                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3059   001A6C  0EC0               	movlw	low _EUSART_DefaultErrorHandler
  3060   001A6E  6E07               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  3061   001A70  0E22               	movlw	high _EUSART_DefaultErrorHandler
  3062   001A72  6E08               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  3063   001A74  EC24  F011         	call	_EUSART_SetErrorHandler	;wreg free
  3064                           
  3065                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3066   001A78  0E00               	movlw	0
  3067   001A7A  6E34               	movwf	_eusartRxLastError^0,c	;volatile
  3068                           
  3069                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3070   001A7C  0E00               	movlw	0
  3071   001A7E  6E39               	movwf	_eusartTxHead^0,c	;volatile
  3072                           
  3073                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3074   001A80  0E00               	movlw	0
  3075   001A82  6E38               	movwf	_eusartTxTail^0,c	;volatile
  3076                           
  3077                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3078   001A84  0E08               	movlw	8
  3079   001A86  6E4B               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  3080                           
  3081                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3082   001A88  0E00               	movlw	0
  3083   001A8A  6E37               	movwf	_eusartRxHead^0,c	;volatile
  3084                           
  3085                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3086   001A8C  0E00               	movlw	0
  3087   001A8E  6E36               	movwf	_eusartRxTail^0,c	;volatile
  3088                           
  3089                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3090   001A90  0E00               	movlw	0
  3091   001A92  6E35               	movwf	_eusartRxCount^0,c	;volatile
  3092   001A94                     
  3093                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  3094   001A94  8A9D               	bsf	157,5,c	;volatile
  3095   001A96  0012               	return		;funcret
  3096   001A98                     __end_of_EUSART_Initialize:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3100 ;; Defined at:
  3101 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3104 ;;		 -> USART_TXC_vect(1), EUSART_Transmit_ISR(1), 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;Total ram usage:        2 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 4
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_EUSART_Initialize
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text22
  3132   002220                     __ptext22:
  3133                           	callstack 0
  3134   002220                     _EUSART_SetTxInterruptHandler:
  3135                           	callstack 24
  3136   002220                     
  3137                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3138   002220  C007  F047         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3139   002224  C008  F048         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3140   002228  0012               	return		;funcret
  3141   00222A                     __end_of_EUSART_SetTxInterruptHandler:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3145 ;; Defined at:
  3146 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3149 ;;		 -> USART_RXC_vect(1), EUSART_Receive_ISR(1), 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;Total ram usage:        2 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 4
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_EUSART_Initialize
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text23
  3177   00222A                     __ptext23:
  3178                           	callstack 0
  3179   00222A                     _EUSART_SetRxInterruptHandler:
  3180                           	callstack 24
  3181   00222A                     
  3182                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3183   00222A  C007  F045         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3184   00222E  C008  F046         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3185   002232  0012               	return		;funcret
  3186   002234                     __end_of_EUSART_SetRxInterruptHandler:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3190 ;; Defined at:
  3191 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3194 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        2 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 4
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_EUSART_Initialize
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text24
  3221   002234                     __ptext24:
  3222                           	callstack 0
  3223   002234                     _EUSART_SetOverrunErrorHandler:
  3224                           	callstack 24
  3225   002234                     
  3226                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3227   002234  C007  F0DF         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3228   002238  C008  F0E0         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3229   00223C  0012               	return		;funcret
  3230   00223E                     __end_of_EUSART_SetOverrunErrorHandler:
  3231                           	callstack 0
  3232                           
  3233 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3234 ;; Defined at:
  3235 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3238 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;Total ram usage:        2 bytes
  3255 ;; Hardware stack levels used: 1
  3256 ;; Hardware stack levels required when called: 4
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_EUSART_Initialize
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text25
  3265   00223E                     __ptext25:
  3266                           	callstack 0
  3267   00223E                     _EUSART_SetFramingErrorHandler:
  3268                           	callstack 24
  3269   00223E                     
  3270                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3271   00223E  C007  F043         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  3272   002242  C008  F044         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  3273   002246  0012               	return		;funcret
  3274   002248                     __end_of_EUSART_SetFramingErrorHandler:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function _EUSART_SetErrorHandler *****************
  3278 ;; Defined at:
  3279 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3282 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        2 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 4
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_EUSART_Initialize
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text26
  3309   002248                     __ptext26:
  3310                           	callstack 0
  3311   002248                     _EUSART_SetErrorHandler:
  3312                           	callstack 24
  3313   002248                     
  3314                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3315   002248  C007  F0DD         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  3316   00224C  C008  F0DE         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  3317   002250  0012               	return		;funcret
  3318   002252                     __end_of_EUSART_SetErrorHandler:
  3319                           	callstack 0
  3320                           
  3321 ;; *************** function _I2C_WriteNBytes *****************
  3322 ;; Defined at:
  3323 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  address         1    wreg     unsigned char 
  3326 ;;  data            2   23[COMRAM] PTR unsigned char 
  3327 ;;		 -> main@red(3), main@dat(3), 
  3328 ;;  len             2   25[COMRAM] unsigned int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  address         1   27[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        5 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 12
  3347 ;; This function calls:
  3348 ;;		_I2C_Close
  3349 ;;		_I2C_MasterWrite
  3350 ;;		_I2C_Open
  3351 ;;		_I2C_SetAddressNackCallback
  3352 ;;		_I2C_SetBuffer
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text27
  3359   001C4E                     __ptext27:
  3360                           	callstack 0
  3361   001C4E                     _I2C_WriteNBytes:
  3362                           	callstack 18
  3363                           
  3364                           ;incstack = 0
  3365                           ;I2C_WriteNBytes@address stored from wreg
  3366   001C4E  6E1C               	movwf	I2C_WriteNBytes@address^0,c
  3367   001C50                     l4593:
  3368   001C50  501C               	movf	I2C_WriteNBytes@address^0,w,c
  3369   001C52  EC0D  F00C         	call	_I2C_Open
  3370   001C56  0900               	iorlw	0
  3371   001C58  B4D8               	btfsc	status,2,c
  3372   001C5A  EF31  F00E         	goto	u2461
  3373   001C5E  EF33  F00E         	goto	u2460
  3374   001C62                     u2461:
  3375   001C62  EF28  F00E         	goto	l4593
  3376   001C66                     u2460:
  3377   001C66                     
  3378                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  3379   001C66  C018  F007         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  3380   001C6A  C019  F008         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  3381   001C6E  C01A  F009         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  3382   001C72  C01B  F00A         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  3383   001C76  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  3384   001C7A                     
  3385                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  3386   001C7A  0E00               	movlw	0
  3387   001C7C  6E0C               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3388   001C7E  0E00               	movlw	0
  3389   001C80  6E0D               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3390   001C82  0E00               	movlw	0
  3391   001C84  6E0E               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3392   001C86  0E00               	movlw	0
  3393   001C88  6E0F               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3394   001C8A  ECA7  F010         	call	_I2C_SetAddressNackCallback	;wreg free
  3395   001C8E                     
  3396                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  3397   001C8E  EC29  F011         	call	_I2C_MasterWrite	;wreg free
  3398   001C92                     l4601:
  3399   001C92  EC0C  F010         	call	_I2C_Close	;wreg free
  3400   001C96  06E8               	decf	wreg,f,c
  3401   001C98  B4D8               	btfsc	status,2,c
  3402   001C9A  EF51  F00E         	goto	u2471
  3403   001C9E  EF53  F00E         	goto	u2470
  3404   001CA2                     u2471:
  3405   001CA2  EF49  F00E         	goto	l4601
  3406   001CA6                     u2470:
  3407   001CA6  0012               	return		;funcret
  3408   001CA8                     __end_of_I2C_WriteNBytes:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _I2C_SetAddressNackCallback *****************
  3412 ;; Defined at:
  3413 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  cb              2   11[COMRAM] PTR FTN(PTR void ,)enum 
  3416 ;;		 -> Absolute function(1), 
  3417 ;;  ptr             2   13[COMRAM] PTR void 
  3418 ;;		 -> NULL(0), 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;Total ram usage:        4 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 5
  3437 ;; This function calls:
  3438 ;;		_I2C_SetCallback
  3439 ;; This function is called by:
  3440 ;;		_I2C_WriteNBytes
  3441 ;;		_I2C_Read1ByteRegister
  3442 ;;		_I2C_Read2ByteRegister
  3443 ;;		_I2C_Write1ByteRegister
  3444 ;;		_I2C_Write2ByteRegister
  3445 ;;		_I2C_ReadDataBlock
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text28
  3450   00214E                     __ptext28:
  3451                           	callstack 0
  3452   00214E                     _I2C_SetAddressNackCallback:
  3453                           	callstack 24
  3454   00214E                     
  3455                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  3456   00214E  C00C  F007         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  3457   002152  C00D  F008         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  3458   002156  C00E  F009         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  3459   00215A  C00F  F00A         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  3460   00215E  0E02               	movlw	2
  3461   002160  ECD5  F00C         	call	_I2C_SetCallback
  3462   002164  0012               	return		;funcret
  3463   002166                     __end_of_I2C_SetAddressNackCallback:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _I2C_MasterWrite *****************
  3467 ;; Defined at:
  3468 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      enum E355
  3475 ;; Registers used:
  3476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 11
  3489 ;; This function calls:
  3490 ;;		_I2C_MasterOperation
  3491 ;; This function is called by:
  3492 ;;		_I2C_WriteNBytes
  3493 ;;		_I2C_Read1ByteRegister
  3494 ;;		_I2C_Read2ByteRegister
  3495 ;;		_I2C_Write1ByteRegister
  3496 ;;		_I2C_Write2ByteRegister
  3497 ;;		_I2C_ReadDataBlock
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text29
  3502   002252                     __ptext29:
  3503                           	callstack 0
  3504   002252                     _I2C_MasterWrite:
  3505                           	callstack 18
  3506   002252                     
  3507                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  3508   002252  0E00               	movlw	0
  3509   002254  ECA2  F00E         	call	_I2C_MasterOperation
  3510   002258  0012               	return		;funcret
  3511   00225A                     __end_of_I2C_MasterWrite:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _I2C_ReadNBytes *****************
  3515 ;; Defined at:
  3516 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  address         1    wreg     unsigned char 
  3519 ;;  data            2   23[COMRAM] PTR unsigned char 
  3520 ;;		 -> main@red2(3), 
  3521 ;;  len             2   25[COMRAM] unsigned int 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  address         1   27[COMRAM] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3533 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;Total ram usage:        5 bytes
  3538 ;; Hardware stack levels used: 1
  3539 ;; Hardware stack levels required when called: 12
  3540 ;; This function calls:
  3541 ;;		_I2C_Close
  3542 ;;		_I2C_MasterRead
  3543 ;;		_I2C_Open
  3544 ;;		_I2C_SetBuffer
  3545 ;; This function is called by:
  3546 ;;		_main
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text30
  3551   001CFE                     __ptext30:
  3552                           	callstack 0
  3553   001CFE                     _I2C_ReadNBytes:
  3554                           	callstack 18
  3555                           
  3556                           ;incstack = 0
  3557                           ;I2C_ReadNBytes@address stored from wreg
  3558   001CFE  6E1C               	movwf	I2C_ReadNBytes@address^0,c
  3559   001D00                     l4605:
  3560   001D00  501C               	movf	I2C_ReadNBytes@address^0,w,c
  3561   001D02  EC0D  F00C         	call	_I2C_Open
  3562   001D06  0900               	iorlw	0
  3563   001D08  B4D8               	btfsc	status,2,c
  3564   001D0A  EF89  F00E         	goto	u2481
  3565   001D0E  EF8B  F00E         	goto	u2480
  3566   001D12                     u2481:
  3567   001D12  EF80  F00E         	goto	l4605
  3568   001D16                     u2480:
  3569   001D16                     
  3570                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  3571   001D16  C018  F007         	movff	I2C_ReadNBytes@data,I2C_SetBuffer@buffer
  3572   001D1A  C019  F008         	movff	I2C_ReadNBytes@data+1,I2C_SetBuffer@buffer+1
  3573   001D1E  C01A  F009         	movff	I2C_ReadNBytes@len,I2C_SetBuffer@bufferSize
  3574   001D22  C01B  F00A         	movff	I2C_ReadNBytes@len+1,I2C_SetBuffer@bufferSize+1
  3575   001D26  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  3576   001D2A                     
  3577                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  3578   001D2A  EC2D  F011         	call	_I2C_MasterRead	;wreg free
  3579   001D2E                     l4611:
  3580   001D2E  EC0C  F010         	call	_I2C_Close	;wreg free
  3581   001D32  06E8               	decf	wreg,f,c
  3582   001D34  B4D8               	btfsc	status,2,c
  3583   001D36  EF9F  F00E         	goto	u2491
  3584   001D3A  EFA1  F00E         	goto	u2490
  3585   001D3E                     u2491:
  3586   001D3E  EF97  F00E         	goto	l4611
  3587   001D42                     u2490:
  3588   001D42  0012               	return		;funcret
  3589   001D44                     __end_of_I2C_ReadNBytes:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _I2C_Open *****************
  3593 ;; Defined at:
  3594 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  address         1    wreg     unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  address         1    6[COMRAM] unsigned char 
  3599 ;;  returnValue     1    7[COMRAM] enum E355
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      enum E355
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;Total ram usage:        2 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; Hardware stack levels required when called: 5
  3616 ;; This function calls:
  3617 ;;		_I2C_MasterClearIrq
  3618 ;;		_I2C_MasterOpen
  3619 ;; This function is called by:
  3620 ;;		_I2C_WriteNBytes
  3621 ;;		_I2C_ReadNBytes
  3622 ;;		_I2C_Read1ByteRegister
  3623 ;;		_I2C_Read2ByteRegister
  3624 ;;		_I2C_Write1ByteRegister
  3625 ;;		_I2C_Write2ByteRegister
  3626 ;;		_I2C_ReadDataBlock
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text31
  3631   00181A                     __ptext31:
  3632                           	callstack 0
  3633   00181A                     _I2C_Open:
  3634                           	callstack 24
  3635                           
  3636                           ;incstack = 0
  3637                           ;I2C_Open@address stored from wreg
  3638   00181A  6E07               	movwf	I2C_Open@address^0,c
  3639   00181C                     
  3640                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  3641   00181C  0E01               	movlw	1
  3642   00181E  6E08               	movwf	I2C_Open@returnValue^0,c
  3643   001820                     
  3644                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  3645   001820  0100               	movlb	0	; () banked
  3646   001822  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  3647   001824  EF16  F00C         	goto	u2421
  3648   001828  EF18  F00C         	goto	u2420
  3649   00182C                     u2421:
  3650   00182C  EF52  F00C         	goto	l4465
  3651   001830                     u2420:
  3652   001830                     
  3653                           ; BSR set to: 0
  3654                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  3655   001830  C007  F07C         	movff	I2C_Open@address,_I2C_Status+28
  3656   001834                     
  3657                           ; BSR set to: 0
  3658                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  3659   001834  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  3660   001836                     
  3661                           ; BSR set to: 0
  3662                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  3663   001836  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  3664   001838                     
  3665                           ; BSR set to: 0
  3666                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  3667   001838  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  3668   00183A                     
  3669                           ; BSR set to: 0
  3670                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  3671   00183A  0E0E               	movlw	14
  3672   00183C  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3673   00183E                     
  3674                           ; BSR set to: 0
  3675                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  3676   00183E  0E01               	movlw	1
  3677   001840  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  3678   001842  0EF4               	movlw	244
  3679   001844  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  3680   001846                     
  3681                           ; BSR set to: 0
  3682                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  3683   001846  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  3684   001848                     
  3685                           ; BSR set to: 0
  3686                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  3687   001848  0EDA               	movlw	low _I2C_CallbackReturnStop
  3688   00184A  6F60               	movwf	_I2C_Status& (0+255),b
  3689   00184C  0E22               	movlw	high _I2C_CallbackReturnStop
  3690   00184E  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  3691   001850                     
  3692                           ; BSR set to: 0
  3693                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  3694   001850  0E00               	movlw	0
  3695   001852  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  3696   001854  0E00               	movlw	0
  3697   001856  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  3698   001858                     
  3699                           ; BSR set to: 0
  3700                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  3701   001858  0EDA               	movlw	low _I2C_CallbackReturnStop
  3702   00185A  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  3703   00185C  0E22               	movlw	high _I2C_CallbackReturnStop
  3704   00185E  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  3705   001860                     
  3706                           ; BSR set to: 0
  3707                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  3708   001860  0E00               	movlw	0
  3709   001862  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  3710   001864  0E00               	movlw	0
  3711   001866  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  3712   001868                     
  3713                           ; BSR set to: 0
  3714                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  3715   001868  0EDA               	movlw	low _I2C_CallbackReturnStop
  3716   00186A  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  3717   00186C  0E22               	movlw	high _I2C_CallbackReturnStop
  3718   00186E  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  3719   001870                     
  3720                           ; BSR set to: 0
  3721                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  3722   001870  0E00               	movlw	0
  3723   001872  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  3724   001874  0E00               	movlw	0
  3725   001876  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  3726   001878                     
  3727                           ; BSR set to: 0
  3728                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  3729   001878  0EDA               	movlw	low _I2C_CallbackReturnStop
  3730   00187A  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  3731   00187C  0E22               	movlw	high _I2C_CallbackReturnStop
  3732   00187E  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  3733   001880                     
  3734                           ; BSR set to: 0
  3735                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  3736   001880  0E00               	movlw	0
  3737   001882  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  3738   001884  0E00               	movlw	0
  3739   001886  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  3740   001888                     
  3741                           ; BSR set to: 0
  3742                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  3743   001888  0ED6               	movlw	low _I2C_CallbackReturnReset
  3744   00188A  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  3745   00188C  0E22               	movlw	high _I2C_CallbackReturnReset
  3746   00188E  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  3747   001890                     
  3748                           ; BSR set to: 0
  3749                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  3750   001890  0E00               	movlw	0
  3751   001892  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  3752   001894  0E00               	movlw	0
  3753   001896  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  3754   001898                     
  3755                           ; BSR set to: 0
  3756                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  3757   001898  EC79  F011         	call	_I2C_MasterClearIrq	;wreg free
  3758   00189C                     
  3759                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  3760   00189C  EC6D  F010         	call	_I2C_MasterOpen	;wreg free
  3761   0018A0                     
  3762                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  3763   0018A0  0E00               	movlw	0
  3764   0018A2  6E08               	movwf	I2C_Open@returnValue^0,c
  3765   0018A4                     l4465:
  3766                           
  3767                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  3768   0018A4  5008               	movf	I2C_Open@returnValue^0,w,c
  3769   0018A6  0012               	return		;funcret
  3770   0018A8                     __end_of_I2C_Open:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _I2C_MasterOpen *****************
  3774 ;; Defined at:
  3775 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      _Bool 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 4
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_I2C_Open
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text32
  3804   0020DA                     __ptext32:
  3805                           	callstack 0
  3806   0020DA                     _I2C_MasterOpen:
  3807                           	callstack 24
  3808   0020DA                     
  3809                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  3810   0020DA  BAC6               	btfsc	198,5,c	;volatile
  3811   0020DC  EF72  F010         	goto	u2241
  3812   0020E0  EF74  F010         	goto	u2240
  3813   0020E4                     u2241:
  3814   0020E4  EF7D  F010         	goto	l378
  3815   0020E8                     u2240:
  3816   0020E8                     
  3817                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  3818   0020E8  0E00               	movlw	0
  3819   0020EA  6EC7               	movwf	199,c	;volatile
  3820                           
  3821                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  3822   0020EC  0E08               	movlw	8
  3823   0020EE  6EC6               	movwf	198,c	;volatile
  3824                           
  3825                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  3826   0020F0  0E00               	movlw	0
  3827   0020F2  6EC5               	movwf	197,c	;volatile
  3828                           
  3829                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  3830   0020F4  0E13               	movlw	19
  3831   0020F6  6EC8               	movwf	200,c	;volatile
  3832   0020F8                     
  3833                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  3834   0020F8  8AC6               	bsf	198,5,c	;volatile
  3835   0020FA                     l378:
  3836   0020FA  0012               	return		;funcret
  3837   0020FC                     __end_of_I2C_MasterOpen:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _I2C_MasterRead *****************
  3841 ;; Defined at:
  3842 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      enum E355
  3849 ;; Registers used:
  3850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 11
  3863 ;; This function calls:
  3864 ;;		_I2C_MasterOperation
  3865 ;; This function is called by:
  3866 ;;		_I2C_ReadNBytes
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text33
  3871   00225A                     __ptext33:
  3872                           	callstack 0
  3873   00225A                     _I2C_MasterRead:
  3874                           	callstack 18
  3875   00225A                     
  3876                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  3877   00225A  0E01               	movlw	1
  3878   00225C  ECA2  F00E         	call	_I2C_MasterOperation
  3879   002260  0012               	return		;funcret
  3880   002262                     __end_of_I2C_MasterRead:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function _I2C_MasterOperation *****************
  3884 ;; Defined at:
  3885 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  read            1    wreg     _Bool 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  read            1   21[COMRAM] _Bool 
  3890 ;;  returnValue     1   22[COMRAM] enum E355
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      enum E355
  3893 ;; Registers used:
  3894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;Total ram usage:        2 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 10
  3907 ;; This function calls:
  3908 ;;		_I2C_MasterStart
  3909 ;;		_I2C_Poller
  3910 ;; This function is called by:
  3911 ;;		_I2C_MasterRead
  3912 ;;		_I2C_MasterWrite
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text34
  3917   001D44                     __ptext34:
  3918                           	callstack 0
  3919   001D44                     _I2C_MasterOperation:
  3920                           	callstack 18
  3921                           
  3922                           ;incstack = 0
  3923                           ;I2C_MasterOperation@read stored from wreg
  3924   001D44  6E16               	movwf	I2C_MasterOperation@read^0,c
  3925   001D46                     
  3926                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  3927   001D46  0E01               	movlw	1
  3928   001D48  6E17               	movwf	I2C_MasterOperation@returnValue^0,c
  3929   001D4A                     
  3930                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  3931   001D4A  0100               	movlb	0	; () banked
  3932   001D4C  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  3933   001D4E  EFAB  F00E         	goto	u2251
  3934   001D52  EFAD  F00E         	goto	u2250
  3935   001D56                     u2251:
  3936   001D56  EFC2  F00E         	goto	l4289
  3937   001D5A                     u2250:
  3938   001D5A                     
  3939                           ; BSR set to: 0
  3940                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  3941   001D5A  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  3942   001D5C                     
  3943                           ; BSR set to: 0
  3944                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  3945   001D5C  0E00               	movlw	0
  3946   001D5E  6E17               	movwf	I2C_MasterOperation@returnValue^0,c
  3947   001D60                     
  3948                           ; BSR set to: 0
  3949                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  3950   001D60  5016               	movf	I2C_MasterOperation@read^0,w,c
  3951   001D62  B4D8               	btfsc	status,2,c
  3952   001D64  EFB6  F00E         	goto	u2261
  3953   001D68  EFB8  F00E         	goto	u2260
  3954   001D6C                     u2261:
  3955   001D6C  EFBC  F00E         	goto	l4283
  3956   001D70                     u2260:
  3957   001D70                     
  3958                           ; BSR set to: 0
  3959                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  3960   001D70  0E01               	movlw	1
  3961   001D72  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3962                           
  3963                           ;mcc_generated_files/i2c_master.c: 235:         }
  3964   001D74  EFBE  F00E         	goto	l4285
  3965   001D78                     l4283:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  3969   001D78  0E02               	movlw	2
  3970   001D7A  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3971   001D7C                     l4285:
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  3975   001D7C  EC73  F011         	call	_I2C_MasterStart	;wreg free
  3976   001D80                     
  3977                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  3978   001D80  EC7E  F010         	call	_I2C_Poller	;wreg free
  3979   001D84                     l4289:
  3980                           
  3981                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  3982   001D84  5017               	movf	I2C_MasterOperation@returnValue^0,w,c
  3983   001D86  0012               	return		;funcret
  3984   001D88                     __end_of_I2C_MasterOperation:
  3985                           	callstack 0
  3986                           
  3987 ;; *************** function _I2C_Poller *****************
  3988 ;; Defined at:
  3989 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 9
  4010 ;; This function calls:
  4011 ;;		_I2C_MasterFsm
  4012 ;;		_I2C_MasterWaitForEvent
  4013 ;; This function is called by:
  4014 ;;		_I2C_MasterOperation
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text35
  4019   0020FC                     __ptext35:
  4020                           	callstack 0
  4021   0020FC                     _I2C_Poller:
  4022                           	callstack 18
  4023   0020FC                     
  4024                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4025   0020FC  EF84  F010         	goto	l4217
  4026   002100                     l4213:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  4030   002100  ECDC  F010         	call	_I2C_MasterWaitForEvent	;wreg free
  4031   002104                     
  4032                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  4033   002104  EC85  F00D         	call	_I2C_MasterFsm	;wreg free
  4034   002108                     l4217:
  4035                           
  4036                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4037   002108  0100               	movlb	0	; () banked
  4038   00210A  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4039   00210C  EF8A  F010         	goto	u2161
  4040   002110  EF8C  F010         	goto	u2160
  4041   002114                     u2161:
  4042   002114  EF80  F010         	goto	l4213
  4043   002118                     u2160:
  4044   002118                     
  4045                           ; BSR set to: 0
  4046   002118  0012               	return		;funcret
  4047   00211A                     __end_of_I2C_Poller:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _I2C_MasterWaitForEvent *****************
  4051 ;; Defined at:
  4052 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		None
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 4
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_I2C_Poller
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text36
  4081   0021B8                     __ptext36:
  4082                           	callstack 0
  4083   0021B8                     _I2C_MasterWaitForEvent:
  4084                           	callstack 22
  4085   0021B8                     l435:
  4086                           
  4087                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  4088   0021B8  A69E               	btfss	158,3,c	;volatile
  4089   0021BA  EFE1  F010         	goto	u2121
  4090   0021BE  EFE3  F010         	goto	u2120
  4091   0021C2                     u2121:
  4092   0021C2  EFDC  F010         	goto	l435
  4093   0021C6                     u2120:
  4094   0021C6  0012               	return		;funcret
  4095   0021C8                     __end_of_I2C_MasterWaitForEvent:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _I2C_MasterFsm *****************
  4099 ;; Defined at:
  4100 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;Total ram usage:        2 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 8
  4121 ;; This function calls:
  4122 ;;		_I2C_DO_ADDRESS_NACK
  4123 ;;		_I2C_DO_IDLE
  4124 ;;		_I2C_DO_RCEN
  4125 ;;		_I2C_DO_RESET
  4126 ;;		_I2C_DO_RX
  4127 ;;		_I2C_DO_RX_ACK
  4128 ;;		_I2C_DO_RX_NACK_RESTART
  4129 ;;		_I2C_DO_RX_NACK_STOP
  4130 ;;		_I2C_DO_SEND_ADR_READ
  4131 ;;		_I2C_DO_SEND_ADR_WRITE
  4132 ;;		_I2C_DO_SEND_RESTART
  4133 ;;		_I2C_DO_SEND_RESTART_READ
  4134 ;;		_I2C_DO_SEND_RESTART_WRITE
  4135 ;;		_I2C_DO_SEND_STOP
  4136 ;;		_I2C_DO_TX
  4137 ;;		_I2C_DO_TX_EMPTY
  4138 ;;		_I2C_MasterClearIrq
  4139 ;;		_I2C_MasterIsNack
  4140 ;; This function is called by:
  4141 ;;		_I2C_Poller
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text37
  4146   001B0A                     __ptext37:
  4147                           	callstack 0
  4148   001B0A                     _I2C_MasterFsm:
  4149                           	callstack 18
  4150   001B0A                     
  4151                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  4152   001B0A  EC79  F011         	call	_I2C_MasterClearIrq	;wreg free
  4153   001B0E                     
  4154                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4155   001B0E  0100               	movlb	0	; () banked
  4156   001B10  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  4157   001B12  EF8D  F00D         	goto	u2131
  4158   001B16  EF8F  F00D         	goto	u2130
  4159   001B1A                     u2131:
  4160   001B1A  EF9C  F00D         	goto	l4197
  4161   001B1E                     u2130:
  4162   001B1E                     
  4163                           ; BSR set to: 0
  4164   001B1E  ECC9  F010         	call	_I2C_MasterIsNack	;wreg free
  4165   001B22  0900               	iorlw	0
  4166   001B24  B4D8               	btfsc	status,2,c
  4167   001B26  EF97  F00D         	goto	u2141
  4168   001B2A  EF99  F00D         	goto	u2140
  4169   001B2E                     u2141:
  4170   001B2E  EF9C  F00D         	goto	l4197
  4171   001B32                     u2140:
  4172   001B32                     
  4173                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4174   001B32  0E0F               	movlw	15
  4175   001B34  0100               	movlb	0	; () banked
  4176   001B36  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4177   001B38                     l4197:
  4178                           
  4179                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  4180   001B38  0100               	movlb	0	; () banked
  4181   001B3A  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  4182   001B3C  0D02               	mullw	2
  4183   001B3E  0E01               	movlw	low _i2c_fsmStateTable
  4184   001B40  24F3               	addwf	243,w,c
  4185   001B42  6EF6               	movwf	tblptrl,c
  4186   001B44  0E10               	movlw	high _i2c_fsmStateTable
  4187   001B46  20F4               	addwfc	244,w,c
  4188   001B48  6EF7               	movwf	tblptrh,c
  4189   001B4A                     	if	1	;There are 3 active tblptr bytes
  4190   001B4A  6AF8               	clrf	tblptru,c
  4191   001B4C  0E00               	movlw	low (__mediumconst shr (0+16))
  4192   001B4E  22F8               	addwfc	tblptru,f,c
  4193   001B50                     	endif
  4194   001B50  0009               	tblrd		*+
  4195   001B52  CFF5 F014          	movff	tablat,??_I2C_MasterFsm
  4196   001B56  0009               	tblrd		*+
  4197   001B58  CFF5 F015          	movff	tablat,??_I2C_MasterFsm+1
  4198   001B5C  D802               	call	u2158
  4199   001B5E  EFBA  F00D         	goto	u2159
  4200   001B62                     u2158:
  4201   001B62  0005               	push	
  4202   001B64  6EFA               	movwf	pclath,c
  4203   001B66  5014               	movf	??_I2C_MasterFsm^0,w,c
  4204   001B68  6EFD               	movwf	tosl,c
  4205   001B6A  5015               	movf	(??_I2C_MasterFsm+1)^0,w,c
  4206   001B6C  6EFE               	movwf	tosh,c
  4207   001B6E  6AFF               	clrf	tosu,c
  4208   001B70  50FA               	movf	pclath,w,c
  4209   001B72  0012               	return		;indir
  4210   001B74                     u2159:
  4211   001B74  0100               	movlb	0	; () banked
  4212   001B76  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4213   001B78                     
  4214                           ; BSR set to: 0
  4215   001B78  0012               	return		;funcret
  4216   001B7A                     __end_of_I2C_MasterFsm:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4220 ;; Defined at:
  4221 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      enum E2846
  4228 ;; Registers used:
  4229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 7
  4242 ;; This function calls:
  4243 ;;		Absolute function
  4244 ;;		_I2C_CallbackReturnReset
  4245 ;;		_I2C_CallbackReturnStop
  4246 ;;		_I2C_DO_SEND_RESTART
  4247 ;;		_I2C_DO_SEND_STOP
  4248 ;;		_rd1RegCompleteHandler
  4249 ;;		_rd2RegCompleteHandler
  4250 ;;		_rdBlkRegCompleteHandler
  4251 ;;		_wr1RegCompleteHandler
  4252 ;;		_wr2RegCompleteHandler
  4253 ;; This function is called by:
  4254 ;;		_I2C_MasterFsm
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text38
  4259   001BE8                     __ptext38:
  4260                           	callstack 0
  4261   001BE8                     _I2C_DO_ADDRESS_NACK:
  4262                           	callstack 18
  4263   001BE8                     
  4264                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  4265   001BE8  0100               	movlb	0	; () banked
  4266   001BEA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4267   001BEC                     
  4268                           ; BSR set to: 0
  4269                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  4270   001BEC  0E02               	movlw	2
  4271   001BEE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4272                           
  4273                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4274   001BF0  EF02  F00E         	goto	l4159
  4275   001BF4                     l4149:
  4276                           
  4277                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  4278   001BF4  EC41  F011         	call	_I2C_DO_SEND_RESTART	;wreg free
  4279   001BF8  EF26  F00E         	goto	l357
  4280   001BFC                     l4153:
  4281                           
  4282                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  4283   001BFC  EC3D  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  4284   001C00  EF26  F00E         	goto	l357
  4285   001C04                     l4159:
  4286                           
  4287                           ; BSR set to: 0
  4288   001C04  C070  F010         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  4289   001C08  C071  F011         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  4290   001C0C  D802               	call	u2088
  4291   001C0E  EF12  F00E         	goto	u2089
  4292   001C12                     u2088:
  4293   001C12  0005               	push	
  4294   001C14  6EFA               	movwf	pclath,c
  4295   001C16  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  4296   001C18  6EFD               	movwf	tosl,c
  4297   001C1A  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  4298   001C1C  6EFE               	movwf	tosh,c
  4299   001C1E  6AFF               	clrf	tosu,c
  4300   001C20  50FA               	movf	pclath,w,c
  4301   001C22  0012               	return		;indir
  4302   001C24                     u2089:
  4303   001C24  6E12               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  4304   001C26  6A13               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  4305                           
  4306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4307                           ; Switch size 1, requested type "simple"
  4308                           ; Number of cases is 1, Range of values is 0 to 0
  4309                           ; switch strategies available:
  4310                           ; Name         Instructions Cycles
  4311                           ; simple_byte            4     3 (average)
  4312                           ;	Chosen strategy is simple_byte
  4313   001C28  5013               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  4314   001C2A  0A00               	xorlw	0	; case 0
  4315   001C2C  B4D8               	btfsc	status,2,c
  4316   001C2E  EF1B  F00E         	goto	l4899
  4317   001C32  EFFE  F00D         	goto	l4153
  4318   001C36                     l4899:
  4319                           
  4320                           ; Switch size 1, requested type "simple"
  4321                           ; Number of cases is 2, Range of values is 2 to 3
  4322                           ; switch strategies available:
  4323                           ; Name         Instructions Cycles
  4324                           ; simple_byte            7     4 (average)
  4325                           ;	Chosen strategy is simple_byte
  4326   001C36  5012               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  4327   001C38  0A02               	xorlw	2	; case 2
  4328   001C3A  B4D8               	btfsc	status,2,c
  4329   001C3C  EFFA  F00D         	goto	l4149
  4330   001C40  0A01               	xorlw	1	; case 3
  4331   001C42  B4D8               	btfsc	status,2,c
  4332   001C44  EFFA  F00D         	goto	l4149
  4333   001C48  EFFE  F00D         	goto	l4153
  4334   001C4C                     l357:
  4335   001C4C  0012               	return		;funcret
  4336   001C4E                     __end_of_I2C_DO_ADDRESS_NACK:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _I2C_DO_RESET *****************
  4340 ;; Defined at:
  4341 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      enum E2846
  4348 ;; Registers used:
  4349 ;;		wreg, status,2
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 4
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_I2C_MasterFsm
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text39
  4370   0021E8                     __ptext39:
  4371                           	callstack 0
  4372   0021E8                     _I2C_DO_RESET:
  4373                           	callstack 21
  4374   0021E8                     
  4375                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  4376   0021E8  0100               	movlb	0	; () banked
  4377   0021EA  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  4378   0021EC                     
  4379                           ; BSR set to: 0
  4380                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  4381   0021EC  0E00               	movlw	0
  4382   0021EE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4383   0021F0                     
  4384                           ; BSR set to: 0
  4385                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  4386   0021F0  0E0E               	movlw	14
  4387   0021F2                     
  4388                           ; BSR set to: 0
  4389   0021F2  0012               	return		;funcret
  4390   0021F4                     __end_of_I2C_DO_RESET:
  4391                           	callstack 0
  4392                           
  4393 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4394 ;; Defined at:
  4395 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      enum E2846
  4402 ;; Registers used:
  4403 ;;		wreg, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;Total ram usage:        0 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; Hardware stack levels required when called: 5
  4416 ;; This function calls:
  4417 ;;		_I2C_MasterSendNack
  4418 ;; This function is called by:
  4419 ;;		_I2C_DO_RX
  4420 ;;		_I2C_MasterFsm
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text40
  4425   002262                     __ptext40:
  4426                           	callstack 0
  4427   002262                     _I2C_DO_RX_NACK_RESTART:
  4428                           	callstack 20
  4429   002262                     
  4430                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  4431   002262  EC57  F011         	call	_I2C_MasterSendNack	;wreg free
  4432   002266                     
  4433                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  4434   002266  0E09               	movlw	9
  4435   002268  0012               	return		;funcret
  4436   00226A                     __end_of_I2C_DO_RX_NACK_RESTART:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4440 ;; Defined at:
  4441 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      enum E2846
  4448 ;; Registers used:
  4449 ;;		wreg, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; Hardware stack levels required when called: 5
  4462 ;; This function calls:
  4463 ;;		_I2C_MasterSendNack
  4464 ;; This function is called by:
  4465 ;;		_I2C_DO_RX
  4466 ;;		_I2C_MasterFsm
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text41
  4471   00226A                     __ptext41:
  4472                           	callstack 0
  4473   00226A                     _I2C_DO_RX_NACK_STOP:
  4474                           	callstack 20
  4475   00226A                     
  4476                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  4477   00226A  EC57  F011         	call	_I2C_MasterSendNack	;wreg free
  4478   00226E                     
  4479                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  4480   00226E  0E0A               	movlw	10
  4481   002270  0012               	return		;funcret
  4482   002272                     __end_of_I2C_DO_RX_NACK_STOP:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function _I2C_DO_RX_ACK *****************
  4486 ;; Defined at:
  4487 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      enum E2846
  4494 ;; Registers used:
  4495 ;;		wreg, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 5
  4508 ;; This function calls:
  4509 ;;		_I2C_MasterSendAck
  4510 ;; This function is called by:
  4511 ;;		_I2C_MasterFsm
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text42
  4516   002272                     __ptext42:
  4517                           	callstack 0
  4518   002272                     _I2C_DO_RX_ACK:
  4519                           	callstack 20
  4520   002272                     
  4521                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  4522   002272  EC54  F011         	call	_I2C_MasterSendAck	;wreg free
  4523   002276                     
  4524                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  4525   002276  0E05               	movlw	5
  4526   002278  0012               	return		;funcret
  4527   00227A                     __end_of_I2C_DO_RX_ACK:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function _I2C_DO_SEND_STOP *****************
  4531 ;; Defined at:
  4532 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      enum E2846
  4539 ;; Registers used:
  4540 ;;		wreg, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; Hardware stack levels required when called: 5
  4553 ;; This function calls:
  4554 ;;		_I2C_MasterStop
  4555 ;; This function is called by:
  4556 ;;		_I2C_DO_TX
  4557 ;;		_I2C_DO_TX_EMPTY
  4558 ;;		_I2C_DO_ADDRESS_NACK
  4559 ;;		_I2C_MasterFsm
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text43
  4564   00227A                     __ptext43:
  4565                           	callstack 0
  4566   00227A                     _I2C_DO_SEND_STOP:
  4567                           	callstack 19
  4568   00227A                     
  4569                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  4570   00227A  EC6F  F011         	call	_I2C_MasterStop	;wreg free
  4571   00227E                     
  4572                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  4573   00227E  0E00               	movlw	0
  4574   002280  0012               	return		;funcret
  4575   002282                     __end_of_I2C_DO_SEND_STOP:
  4576                           	callstack 0
  4577                           
  4578 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4579 ;; Defined at:
  4580 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      enum E2846
  4587 ;; Registers used:
  4588 ;;		wreg, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used: 1
  4600 ;; Hardware stack levels required when called: 5
  4601 ;; This function calls:
  4602 ;;		_I2C_MasterEnableRestart
  4603 ;; This function is called by:
  4604 ;;		_I2C_DO_TX_EMPTY
  4605 ;;		_I2C_DO_ADDRESS_NACK
  4606 ;;		_I2C_MasterFsm
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text44
  4611   002282                     __ptext44:
  4612                           	callstack 0
  4613   002282                     _I2C_DO_SEND_RESTART:
  4614                           	callstack 19
  4615   002282                     
  4616                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  4617   002282  EC71  F011         	call	_I2C_MasterEnableRestart	;wreg free
  4618   002286                     
  4619                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  4620   002286  0E01               	movlw	1
  4621   002288  0012               	return		;funcret
  4622   00228A                     __end_of_I2C_DO_SEND_RESTART:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4626 ;; Defined at:
  4627 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      enum E2846
  4634 ;; Registers used:
  4635 ;;		wreg, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used: 1
  4647 ;; Hardware stack levels required when called: 5
  4648 ;; This function calls:
  4649 ;;		_I2C_MasterEnableRestart
  4650 ;; This function is called by:
  4651 ;;		_I2C_DO_TX
  4652 ;;		_I2C_MasterFsm
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text45
  4657   00228A                     __ptext45:
  4658                           	callstack 0
  4659   00228A                     _I2C_DO_SEND_RESTART_WRITE:
  4660                           	callstack 19
  4661   00228A                     
  4662                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  4663   00228A  EC71  F011         	call	_I2C_MasterEnableRestart	;wreg free
  4664   00228E                     
  4665                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  4666   00228E  0E02               	movlw	2
  4667   002290  0012               	return		;funcret
  4668   002292                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  4672 ;; Defined at:
  4673 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      enum E2846
  4680 ;; Registers used:
  4681 ;;		wreg, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 5
  4694 ;; This function calls:
  4695 ;;		_I2C_MasterEnableRestart
  4696 ;; This function is called by:
  4697 ;;		_I2C_DO_TX
  4698 ;;		_I2C_MasterFsm
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text46
  4703   002292                     __ptext46:
  4704                           	callstack 0
  4705   002292                     _I2C_DO_SEND_RESTART_READ:
  4706                           	callstack 19
  4707   002292                     
  4708                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  4709   002292  EC71  F011         	call	_I2C_MasterEnableRestart	;wreg free
  4710   002296                     
  4711                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  4712   002296  0E01               	movlw	1
  4713   002298  0012               	return		;funcret
  4714   00229A                     __end_of_I2C_DO_SEND_RESTART_READ:
  4715                           	callstack 0
  4716                           
  4717 ;; *************** function _I2C_DO_RCEN *****************
  4718 ;; Defined at:
  4719 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;		None
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;		None
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      enum E2846
  4726 ;; Registers used:
  4727 ;;		wreg, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;Total ram usage:        0 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 5
  4740 ;; This function calls:
  4741 ;;		_I2C_MasterStartRx
  4742 ;; This function is called by:
  4743 ;;		_I2C_MasterFsm
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text47
  4748   0021F4                     __ptext47:
  4749                           	callstack 0
  4750   0021F4                     _I2C_DO_RCEN:
  4751                           	callstack 20
  4752   0021F4                     
  4753                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  4754   0021F4  0100               	movlb	0	; () banked
  4755   0021F6  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4756   0021F8                     
  4757                           ; BSR set to: 0
  4758                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  4759   0021F8  EC69  F011         	call	_I2C_MasterStartRx	;wreg free
  4760   0021FC                     
  4761                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  4762   0021FC  0E04               	movlw	4
  4763   0021FE  0012               	return		;funcret
  4764   002200                     __end_of_I2C_DO_RCEN:
  4765                           	callstack 0
  4766                           
  4767 ;; *************** function _I2C_DO_RX *****************
  4768 ;; Defined at:
  4769 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      enum E2846
  4776 ;; Registers used:
  4777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;Total ram usage:        2 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 7
  4790 ;; This function calls:
  4791 ;;		Absolute function
  4792 ;;		_I2C_CallbackReturnReset
  4793 ;;		_I2C_CallbackReturnStop
  4794 ;;		_I2C_DO_RX_NACK_RESTART
  4795 ;;		_I2C_DO_RX_NACK_STOP
  4796 ;;		_I2C_MasterGetRxData
  4797 ;;		_I2C_MasterSendAck
  4798 ;;		_rd1RegCompleteHandler
  4799 ;;		_rd2RegCompleteHandler
  4800 ;;		_rdBlkRegCompleteHandler
  4801 ;;		_wr1RegCompleteHandler
  4802 ;;		_wr2RegCompleteHandler
  4803 ;; This function is called by:
  4804 ;;		_I2C_MasterFsm
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text48
  4809   0016DE                     __ptext48:
  4810                           	callstack 0
  4811   0016DE                     _I2C_DO_RX:
  4812                           	callstack 18
  4813   0016DE                     
  4814                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  4815   0016DE  EC67  F011         	call	_I2C_MasterGetRxData	;wreg free
  4816   0016E2  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  4817   0016E6  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  4818   0016EA  6EDF               	movwf	indf2,c
  4819   0016EC  0100               	movlb	0	; () banked
  4820   0016EE  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  4821   0016F0  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  4822   0016F2                     
  4823                           ; BSR set to: 0
  4824                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  4825   0016F2  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  4826   0016F4  A0D8               	btfss	status,0,c
  4827   0016F6  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  4828   0016F8  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  4829   0016FA  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  4830   0016FC  B4D8               	btfsc	status,2,c
  4831   0016FE  EF83  F00B         	goto	u2051
  4832   001702  EF85  F00B         	goto	u2050
  4833   001706                     u2051:
  4834   001706  EF8A  F00B         	goto	l294
  4835   00170A                     u2050:
  4836   00170A                     
  4837                           ; BSR set to: 0
  4838                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  4839   00170A  EC54  F011         	call	_I2C_MasterSendAck	;wreg free
  4840   00170E                     
  4841                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  4842   00170E  0E05               	movlw	5
  4843   001710  EFC1  F00B         	goto	l295
  4844   001714                     l294:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  4848   001714  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  4849                           
  4850                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4851   001716  EF95  F00B         	goto	l4093
  4852   00171A                     l4083:
  4853                           
  4854                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  4855   00171A  EC31  F011         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  4856   00171E  EFC1  F00B         	goto	l295
  4857   001722                     l4087:
  4858                           
  4859                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  4860   001722  EC35  F011         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  4861   001726  EFC1  F00B         	goto	l295
  4862   00172A                     l4093:
  4863                           
  4864                           ; BSR set to: 0
  4865   00172A  C06C  F010         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  4866   00172E  C06D  F011         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  4867   001732  D802               	call	u2068
  4868   001734  EFA5  F00B         	goto	u2069
  4869   001738                     u2068:
  4870   001738  0005               	push	
  4871   00173A  6EFA               	movwf	pclath,c
  4872   00173C  5160               	movf	_I2C_Status& (0+255),w,b
  4873   00173E  6EFD               	movwf	tosl,c
  4874   001740  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  4875   001742  6EFE               	movwf	tosh,c
  4876   001744  6AFF               	clrf	tosu,c
  4877   001746  50FA               	movf	pclath,w,c
  4878   001748  0012               	return		;indir
  4879   00174A                     u2069:
  4880   00174A  6E12               	movwf	??_I2C_DO_RX^0,c
  4881   00174C  6A13               	clrf	(??_I2C_DO_RX+1)^0,c
  4882                           
  4883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4884                           ; Switch size 1, requested type "simple"
  4885                           ; Number of cases is 1, Range of values is 0 to 0
  4886                           ; switch strategies available:
  4887                           ; Name         Instructions Cycles
  4888                           ; simple_byte            4     3 (average)
  4889                           ;	Chosen strategy is simple_byte
  4890   00174E  5013               	movf	(??_I2C_DO_RX+1)^0,w,c
  4891   001750  0A00               	xorlw	0	; case 0
  4892   001752  B4D8               	btfsc	status,2,c
  4893   001754  EFAE  F00B         	goto	l4901
  4894   001758  EF91  F00B         	goto	l4087
  4895   00175C                     l4901:
  4896                           
  4897                           ; Switch size 1, requested type "simple"
  4898                           ; Number of cases is 4, Range of values is 1 to 4
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte           13     7 (average)
  4902                           ;	Chosen strategy is simple_byte
  4903   00175C  5012               	movf	??_I2C_DO_RX^0,w,c
  4904   00175E  0A01               	xorlw	1	; case 1
  4905   001760  B4D8               	btfsc	status,2,c
  4906   001762  EF91  F00B         	goto	l4087
  4907   001766  0A03               	xorlw	3	; case 2
  4908   001768  B4D8               	btfsc	status,2,c
  4909   00176A  EF8D  F00B         	goto	l4083
  4910   00176E  0A01               	xorlw	1	; case 3
  4911   001770  B4D8               	btfsc	status,2,c
  4912   001772  EF8D  F00B         	goto	l4083
  4913   001776  0A07               	xorlw	7	; case 4
  4914   001778  B4D8               	btfsc	status,2,c
  4915   00177A  EF91  F00B         	goto	l4087
  4916   00177E  EF91  F00B         	goto	l4087
  4917   001782                     l295:
  4918   001782  0012               	return		;funcret
  4919   001784                     __end_of_I2C_DO_RX:
  4920                           	callstack 0
  4921                           
  4922 ;; *************** function _I2C_DO_TX *****************
  4923 ;; Defined at:
  4924 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;		None
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      enum E2846
  4931 ;; Registers used:
  4932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;Total ram usage:        2 bytes
  4943 ;; Hardware stack levels used: 1
  4944 ;; Hardware stack levels required when called: 7
  4945 ;; This function calls:
  4946 ;;		Absolute function
  4947 ;;		_I2C_CallbackReturnReset
  4948 ;;		_I2C_CallbackReturnStop
  4949 ;;		_I2C_DO_SEND_RESTART_READ
  4950 ;;		_I2C_DO_SEND_RESTART_WRITE
  4951 ;;		_I2C_DO_SEND_STOP
  4952 ;;		_I2C_MasterIsNack
  4953 ;;		_I2C_MasterSendTxData
  4954 ;;		_rd1RegCompleteHandler
  4955 ;;		_rd2RegCompleteHandler
  4956 ;;		_rdBlkRegCompleteHandler
  4957 ;;		_wr1RegCompleteHandler
  4958 ;;		_wr2RegCompleteHandler
  4959 ;; This function is called by:
  4960 ;;		_I2C_MasterFsm
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text49
  4965   001560                     __ptext49:
  4966                           	callstack 0
  4967   001560                     _I2C_DO_TX:
  4968                           	callstack 18
  4969   001560                     
  4970                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  4971   001560  ECC9  F010         	call	_I2C_MasterIsNack	;wreg free
  4972   001564  0900               	iorlw	0
  4973   001566  B4D8               	btfsc	status,2,c
  4974   001568  EFB8  F00A         	goto	u2021
  4975   00156C  EFBA  F00A         	goto	u2020
  4976   001570                     u2021:
  4977   001570  EFF5  F00A         	goto	l278
  4978   001574                     u2020:
  4979   001574  EFC8  F00A         	goto	l4053
  4980   001578                     l4039:
  4981                           
  4982                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  4983   001578  EC49  F011         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  4984   00157C  EF11  F00B         	goto	l281
  4985   001580                     l4043:
  4986                           
  4987                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  4988   001580  EC45  F011         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  4989   001584  EF11  F00B         	goto	l281
  4990   001588                     l4047:
  4991                           
  4992                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  4993   001588  EC3D  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  4994   00158C  EF11  F00B         	goto	l281
  4995   001590                     l4053:
  4996   001590  C072  F010         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  4997   001594  C073  F011         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  4998   001598  D802               	call	u2038
  4999   00159A  EFD9  F00A         	goto	u2039
  5000   00159E                     u2038:
  5001   00159E  0005               	push	
  5002   0015A0  6EFA               	movwf	pclath,c
  5003   0015A2  0100               	movlb	0	; () banked
  5004   0015A4  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  5005   0015A6  6EFD               	movwf	tosl,c
  5006   0015A8  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  5007   0015AA  6EFE               	movwf	tosh,c
  5008   0015AC  6AFF               	clrf	tosu,c
  5009   0015AE  50FA               	movf	pclath,w,c
  5010   0015B0  0012               	return		;indir
  5011   0015B2                     u2039:
  5012   0015B2  6E12               	movwf	??_I2C_DO_TX^0,c
  5013   0015B4  6A13               	clrf	(??_I2C_DO_TX+1)^0,c
  5014                           
  5015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5016                           ; Switch size 1, requested type "simple"
  5017                           ; Number of cases is 1, Range of values is 0 to 0
  5018                           ; switch strategies available:
  5019                           ; Name         Instructions Cycles
  5020                           ; simple_byte            4     3 (average)
  5021                           ;	Chosen strategy is simple_byte
  5022   0015B6  5013               	movf	(??_I2C_DO_TX+1)^0,w,c
  5023   0015B8  0A00               	xorlw	0	; case 0
  5024   0015BA  B4D8               	btfsc	status,2,c
  5025   0015BC  EFE2  F00A         	goto	l4903
  5026   0015C0  EFC4  F00A         	goto	l4047
  5027   0015C4                     l4903:
  5028                           
  5029                           ; Switch size 1, requested type "simple"
  5030                           ; Number of cases is 4, Range of values is 1 to 4
  5031                           ; switch strategies available:
  5032                           ; Name         Instructions Cycles
  5033                           ; simple_byte           13     7 (average)
  5034                           ;	Chosen strategy is simple_byte
  5035   0015C4  5012               	movf	??_I2C_DO_TX^0,w,c
  5036   0015C6  0A01               	xorlw	1	; case 1
  5037   0015C8  B4D8               	btfsc	status,2,c
  5038   0015CA  EFC4  F00A         	goto	l4047
  5039   0015CE  0A03               	xorlw	3	; case 2
  5040   0015D0  B4D8               	btfsc	status,2,c
  5041   0015D2  EFBC  F00A         	goto	l4039
  5042   0015D6  0A01               	xorlw	1	; case 3
  5043   0015D8  B4D8               	btfsc	status,2,c
  5044   0015DA  EFC0  F00A         	goto	l4043
  5045   0015DE  0A07               	xorlw	7	; case 4
  5046   0015E0  B4D8               	btfsc	status,2,c
  5047   0015E2  EFC4  F00A         	goto	l4047
  5048   0015E6  EFC4  F00A         	goto	l4047
  5049   0015EA                     l278:
  5050                           
  5051                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  5052   0015EA  0100               	movlb	0	; () banked
  5053   0015EC  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5054   0015EE                     
  5055                           ; BSR set to: 0
  5056                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5057   0015EE  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5058   0015F2  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5059   0015F6  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5060   0015F8  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5061   0015FA  50DF               	movf	indf2,w,c
  5062   0015FC  EC4D  F011         	call	_I2C_MasterSendTxData
  5063   001600                     
  5064                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5065   001600  0100               	movlb	0	; () banked
  5066   001602  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5067   001604  A0D8               	btfss	status,0,c
  5068   001606  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5069   001608  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5070   00160A  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5071   00160C  A4D8               	btfss	status,2,c
  5072   00160E  EF0B  F00B         	goto	u2041
  5073   001612  EF0D  F00B         	goto	u2040
  5074   001616                     u2041:
  5075   001616  EF10  F00B         	goto	l4061
  5076   00161A                     u2040:
  5077   00161A                     
  5078                           ; BSR set to: 0
  5079   00161A  0E06               	movlw	6
  5080   00161C  EF11  F00B         	goto	l281
  5081   001620                     l4061:
  5082                           
  5083                           ; BSR set to: 0
  5084   001620  0E03               	movlw	3
  5085   001622                     l281:
  5086   001622  0012               	return		;funcret
  5087   001624                     __end_of_I2C_DO_TX:
  5088                           	callstack 0
  5089                           
  5090 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5091 ;; Defined at:
  5092 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      enum E2846
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;Total ram usage:        0 bytes
  5111 ;; Hardware stack levels used: 1
  5112 ;; Hardware stack levels required when called: 5
  5113 ;; This function calls:
  5114 ;;		_I2C_MasterSendTxData
  5115 ;; This function is called by:
  5116 ;;		_I2C_MasterFsm
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text50
  5121   0021C8                     __ptext50:
  5122                           	callstack 0
  5123   0021C8                     _I2C_DO_SEND_ADR_WRITE:
  5124                           	callstack 20
  5125   0021C8                     
  5126                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  5127   0021C8  0100               	movlb	0	; () banked
  5128   0021CA  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5129   0021CC                     
  5130                           ; BSR set to: 0
  5131                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  5132   0021CC  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  5133   0021CE  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  5134   0021D0  EC4D  F011         	call	_I2C_MasterSendTxData
  5135   0021D4                     
  5136                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  5137   0021D4  0E03               	movlw	3
  5138   0021D6  0012               	return		;funcret
  5139   0021D8                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5143 ;; Defined at:
  5144 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;		None
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;		None
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      enum E2846
  5151 ;; Registers used:
  5152 ;;		wreg, status,0, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;Total ram usage:        0 bytes
  5163 ;; Hardware stack levels used: 1
  5164 ;; Hardware stack levels required when called: 5
  5165 ;; This function calls:
  5166 ;;		_I2C_MasterSendTxData
  5167 ;; This function is called by:
  5168 ;;		_I2C_MasterFsm
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text51
  5173   0021D8                     __ptext51:
  5174                           	callstack 0
  5175   0021D8                     _I2C_DO_SEND_ADR_READ:
  5176                           	callstack 20
  5177   0021D8                     
  5178                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  5179   0021D8  0100               	movlb	0	; () banked
  5180   0021DA  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5181   0021DC                     
  5182                           ; BSR set to: 0
  5183                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  5184   0021DC  80D8               	bsf	status,0,c
  5185   0021DE  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  5186   0021E0  EC4D  F011         	call	_I2C_MasterSendTxData
  5187   0021E4                     
  5188                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  5189   0021E4  0E05               	movlw	5
  5190   0021E6  0012               	return		;funcret
  5191   0021E8                     __end_of_I2C_DO_SEND_ADR_READ:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function _I2C_DO_IDLE *****************
  5195 ;; Defined at:
  5196 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      enum E2846
  5203 ;; Registers used:
  5204 ;;		wreg, status,2
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;Total ram usage:        0 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; Hardware stack levels required when called: 4
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_I2C_MasterFsm
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text52
  5225   002200                     __ptext52:
  5226                           	callstack 0
  5227   002200                     _I2C_DO_IDLE:
  5228                           	callstack 21
  5229   002200                     
  5230                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  5231   002200  0100               	movlb	0	; () banked
  5232   002202  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5233   002204                     
  5234                           ; BSR set to: 0
  5235                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  5236   002204  0E00               	movlw	0
  5237   002206  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5238   002208                     
  5239                           ; BSR set to: 0
  5240                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  5241   002208  0E0E               	movlw	14
  5242   00220A                     
  5243                           ; BSR set to: 0
  5244   00220A  0012               	return		;funcret
  5245   00220C                     __end_of_I2C_DO_IDLE:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5249 ;; Defined at:
  5250 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      enum E2846
  5257 ;; Registers used:
  5258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;Total ram usage:        2 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 7
  5271 ;; This function calls:
  5272 ;;		Absolute function
  5273 ;;		_I2C_CallbackReturnReset
  5274 ;;		_I2C_CallbackReturnStop
  5275 ;;		_I2C_DO_SEND_RESTART
  5276 ;;		_I2C_DO_SEND_STOP
  5277 ;;		_I2C_MasterSetIrq
  5278 ;;		_rd1RegCompleteHandler
  5279 ;;		_rd2RegCompleteHandler
  5280 ;;		_rdBlkRegCompleteHandler
  5281 ;;		_wr1RegCompleteHandler
  5282 ;;		_wr2RegCompleteHandler
  5283 ;; This function is called by:
  5284 ;;		_I2C_MasterFsm
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text53
  5289   00192E                     __ptext53:
  5290                           	callstack 0
  5291   00192E                     _I2C_DO_TX_EMPTY:
  5292                           	callstack 18
  5293   00192E                     
  5294                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  5295   00192E  0100               	movlb	0	; () banked
  5296   001930  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5297                           
  5298                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5299   001932  EFA8  F00C         	goto	l4125
  5300   001936                     l4109:
  5301                           
  5302                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  5303   001936  EC41  F011         	call	_I2C_DO_SEND_RESTART	;wreg free
  5304   00193A  EFD4  F00C         	goto	l312
  5305   00193E                     l4113:
  5306                           
  5307                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  5308   00193E  EC65  F011         	call	_I2C_MasterSetIrq	;wreg free
  5309   001942                     
  5310                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  5311   001942  0E03               	movlw	3
  5312   001944  EFD4  F00C         	goto	l312
  5313   001948                     l4119:
  5314                           
  5315                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  5316   001948  EC3D  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  5317   00194C  EFD4  F00C         	goto	l312
  5318   001950                     l4125:
  5319                           
  5320                           ; BSR set to: 0
  5321   001950  C06C  F010         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5322   001954  C06D  F011         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5323   001958  D802               	call	u2078
  5324   00195A  EFB8  F00C         	goto	u2079
  5325   00195E                     u2078:
  5326   00195E  0005               	push	
  5327   001960  6EFA               	movwf	pclath,c
  5328   001962  5160               	movf	_I2C_Status& (0+255),w,b
  5329   001964  6EFD               	movwf	tosl,c
  5330   001966  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5331   001968  6EFE               	movwf	tosh,c
  5332   00196A  6AFF               	clrf	tosu,c
  5333   00196C  50FA               	movf	pclath,w,c
  5334   00196E  0012               	return		;indir
  5335   001970                     u2079:
  5336   001970  6E12               	movwf	??_I2C_DO_TX_EMPTY^0,c
  5337   001972  6A13               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  5338                           
  5339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5340                           ; Switch size 1, requested type "simple"
  5341                           ; Number of cases is 1, Range of values is 0 to 0
  5342                           ; switch strategies available:
  5343                           ; Name         Instructions Cycles
  5344                           ; simple_byte            4     3 (average)
  5345                           ;	Chosen strategy is simple_byte
  5346   001974  5013               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  5347   001976  0A00               	xorlw	0	; case 0
  5348   001978  B4D8               	btfsc	status,2,c
  5349   00197A  EFC1  F00C         	goto	l4905
  5350   00197E  EFA4  F00C         	goto	l4119
  5351   001982                     l4905:
  5352                           
  5353                           ; Switch size 1, requested type "simple"
  5354                           ; Number of cases is 4, Range of values is 1 to 4
  5355                           ; switch strategies available:
  5356                           ; Name         Instructions Cycles
  5357                           ; simple_byte           13     7 (average)
  5358                           ;	Chosen strategy is simple_byte
  5359   001982  5012               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  5360   001984  0A01               	xorlw	1	; case 1
  5361   001986  B4D8               	btfsc	status,2,c
  5362   001988  EFA4  F00C         	goto	l4119
  5363   00198C  0A03               	xorlw	3	; case 2
  5364   00198E  B4D8               	btfsc	status,2,c
  5365   001990  EF9B  F00C         	goto	l4109
  5366   001994  0A01               	xorlw	1	; case 3
  5367   001996  B4D8               	btfsc	status,2,c
  5368   001998  EF9B  F00C         	goto	l4109
  5369   00199C  0A07               	xorlw	7	; case 4
  5370   00199E  B4D8               	btfsc	status,2,c
  5371   0019A0  EF9F  F00C         	goto	l4113
  5372   0019A4  EFA4  F00C         	goto	l4119
  5373   0019A8                     l312:
  5374   0019A8  0012               	return		;funcret
  5375   0019AA                     __end_of_I2C_DO_TX_EMPTY:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function _I2C_MasterSetIrq *****************
  5379 ;; Defined at:
  5380 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		None
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; Hardware stack levels required when called: 4
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_I2C_DO_TX_EMPTY
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text54
  5409   0022CA                     __ptext54:
  5410                           	callstack 0
  5411   0022CA                     _I2C_MasterSetIrq:
  5412                           	callstack 20
  5413   0022CA                     
  5414                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  5415   0022CA  869E               	bsf	158,3,c	;volatile
  5416   0022CC  0012               	return		;funcret
  5417   0022CE                     __end_of_I2C_MasterSetIrq:
  5418                           	callstack 0
  5419                           
  5420 ;; *************** function _I2C_MasterIsNack *****************
  5421 ;; Defined at:
  5422 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      _Bool 
  5429 ;; Registers used:
  5430 ;;		wreg
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;Total ram usage:        0 bytes
  5441 ;; Hardware stack levels used: 1
  5442 ;; Hardware stack levels required when called: 4
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_I2C_MasterFsm
  5447 ;;		_I2C_DO_TX
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text55
  5452   002192                     __ptext55:
  5453                           	callstack 0
  5454   002192                     _I2C_MasterIsNack:
  5455                           	callstack 21
  5456   002192                     
  5457                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  5458   002192  BCC5               	btfsc	197,6,c	;volatile
  5459   002194  EFCE  F010         	goto	u2011
  5460   002198  EFD1  F010         	goto	u2010
  5461   00219C                     u2011:
  5462   00219C  0E01               	movlw	1
  5463   00219E  EFD2  F010         	goto	u2016
  5464   0021A2                     u2010:
  5465   0021A2  0E00               	movlw	0
  5466   0021A4                     u2016:
  5467   0021A4  0012               	return		;funcret
  5468   0021A6                     __end_of_I2C_MasterIsNack:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function _I2C_MasterSendTxData *****************
  5472 ;; Defined at:
  5473 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  data            1    wreg     unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  data            1    6[COMRAM] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;Total ram usage:        1 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 4
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_I2C_DO_SEND_ADR_READ
  5498 ;;		_I2C_DO_SEND_ADR_WRITE
  5499 ;;		_I2C_DO_TX
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text56
  5504   00229A                     __ptext56:
  5505                           	callstack 0
  5506   00229A                     _I2C_MasterSendTxData:
  5507                           	callstack 20
  5508                           
  5509                           ;incstack = 0
  5510                           ;I2C_MasterSendTxData@data stored from wreg
  5511   00229A  6E07               	movwf	I2C_MasterSendTxData@data^0,c
  5512   00229C                     
  5513                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  5514   00229C  C007  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  5515   0022A0  0012               	return		;funcret
  5516   0022A2                     __end_of_I2C_MasterSendTxData:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function _I2C_MasterSendAck *****************
  5520 ;; Defined at:
  5521 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		None
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; Hardware stack levels required when called: 4
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_I2C_DO_RX
  5546 ;;		_I2C_DO_RX_ACK
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text57
  5551   0022A8                     __ptext57:
  5552                           	callstack 0
  5553   0022A8                     _I2C_MasterSendAck:
  5554                           	callstack 20
  5555   0022A8                     
  5556                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  5557   0022A8  9AC5               	bcf	197,5,c	;volatile
  5558                           
  5559                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  5560   0022AA  88C5               	bsf	197,4,c	;volatile
  5561   0022AC  0012               	return		;funcret
  5562   0022AE                     __end_of_I2C_MasterSendAck:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function _I2C_MasterGetRxData *****************
  5566 ;; Defined at:
  5567 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      unsigned char 
  5574 ;; Registers used:
  5575 ;;		wreg, status,2
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used: 1
  5587 ;; Hardware stack levels required when called: 4
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_I2C_DO_RX
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text58
  5596   0022CE                     __ptext58:
  5597                           	callstack 0
  5598   0022CE                     _I2C_MasterGetRxData:
  5599                           	callstack 20
  5600   0022CE                     
  5601                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  5602   0022CE  50C9               	movf	201,w,c	;volatile
  5603   0022D0  0012               	return		;funcret
  5604   0022D2                     __end_of_I2C_MasterGetRxData:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _I2C_MasterSendNack *****************
  5608 ;; Defined at:
  5609 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		None
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; Hardware stack levels required when called: 4
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_I2C_DO_RX_NACK_STOP
  5634 ;;		_I2C_DO_RX_NACK_RESTART
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text59
  5639   0022AE                     __ptext59:
  5640                           	callstack 0
  5641   0022AE                     _I2C_MasterSendNack:
  5642                           	callstack 20
  5643   0022AE                     
  5644                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  5645   0022AE  8AC5               	bsf	197,5,c	;volatile
  5646                           
  5647                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  5648   0022B0  88C5               	bsf	197,4,c	;volatile
  5649   0022B2  0012               	return		;funcret
  5650   0022B4                     __end_of_I2C_MasterSendNack:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function _I2C_MasterStartRx *****************
  5654 ;; Defined at:
  5655 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		None
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 4
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_I2C_DO_RCEN
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text60
  5684   0022D2                     __ptext60:
  5685                           	callstack 0
  5686   0022D2                     _I2C_MasterStartRx:
  5687                           	callstack 20
  5688   0022D2                     
  5689                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  5690   0022D2  86C5               	bsf	197,3,c	;volatile
  5691   0022D4  0012               	return		;funcret
  5692   0022D6                     __end_of_I2C_MasterStartRx:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function _I2C_CallbackReturnReset *****************
  5696 ;; Defined at:
  5697 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  funPtr          2   15[COMRAM] PTR void 
  5700 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5701 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      enum E360
  5706 ;; Registers used:
  5707 ;;		wreg
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;Total ram usage:        2 bytes
  5718 ;; Hardware stack levels used: 1
  5719 ;; Hardware stack levels required when called: 4
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_I2C_Open
  5724 ;;		_I2C_DO_TX
  5725 ;;		_I2C_DO_RX
  5726 ;;		_I2C_DO_TX_EMPTY
  5727 ;;		_I2C_DO_ADDRESS_NACK
  5728 ;;		_I2C_DO_RX_EMPTY
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text61
  5733   0022D6                     __ptext61:
  5734                           	callstack 0
  5735   0022D6                     _I2C_CallbackReturnReset:
  5736                           	callstack 20
  5737   0022D6                     
  5738                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  5739   0022D6  0E05               	movlw	5
  5740   0022D8  0012               	return		;funcret
  5741   0022DA                     __end_of_I2C_CallbackReturnReset:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _I2C_CallbackReturnStop *****************
  5745 ;; Defined at:
  5746 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  funPtr          2   15[COMRAM] PTR void 
  5749 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5750 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      enum E360
  5755 ;; Registers used:
  5756 ;;		wreg
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;Total ram usage:        2 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 4
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_I2C_Open
  5773 ;;		_I2C_SetCallback
  5774 ;;		_I2C_DO_TX
  5775 ;;		_I2C_DO_RX
  5776 ;;		_I2C_DO_TX_EMPTY
  5777 ;;		_I2C_DO_ADDRESS_NACK
  5778 ;;		_I2C_DO_RX_EMPTY
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text62
  5783   0022DA                     __ptext62:
  5784                           	callstack 0
  5785   0022DA                     _I2C_CallbackReturnStop:
  5786                           	callstack 20
  5787   0022DA                     
  5788                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  5789   0022DA  0E01               	movlw	1
  5790   0022DC  0012               	return		;funcret
  5791   0022DE                     __end_of_I2C_CallbackReturnStop:
  5792                           	callstack 0
  5793                           
  5794 ;; *************** function _rdBlkRegCompleteHandler *****************
  5795 ;; Defined at:
  5796 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  ptr             2   15[COMRAM] PTR void 
  5799 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5800 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      enum E360
  5805 ;; Registers used:
  5806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used: 1
  5818 ;; Hardware stack levels required when called: 6
  5819 ;; This function calls:
  5820 ;;		_I2C_SetBuffer
  5821 ;;		_I2C_SetDataCompleteCallback
  5822 ;; This function is called by:
  5823 ;;		_I2C_ReadDataBlock
  5824 ;;		_I2C_DO_TX
  5825 ;;		_I2C_DO_RX
  5826 ;;		_I2C_DO_TX_EMPTY
  5827 ;;		_I2C_DO_ADDRESS_NACK
  5828 ;;		_I2C_DO_RX_EMPTY
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text63
  5833   001E0C                     __ptext63:
  5834                           	callstack 0
  5835   001E0C                     _rdBlkRegCompleteHandler:
  5836                           	callstack 18
  5837   001E0C                     
  5838                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  5839   001E0C  EE20 F002          	lfsr	2,2
  5840   001E10  5010               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  5841   001E12  26D9               	addwf	fsr2l,f,c
  5842   001E14  5011               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  5843   001E16  22DA               	addwfc	fsr2h,f,c
  5844   001E18  CFDE F007          	movff	postinc2,I2C_SetBuffer@buffer
  5845   001E1C  CFDD F008          	movff	postdec2,I2C_SetBuffer@buffer+1
  5846   001E20  C010  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  5847   001E24  C011  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  5848   001E28  CFDE F009          	movff	postinc2,I2C_SetBuffer@bufferSize
  5849   001E2C  CFDD F00A          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  5850   001E30  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  5851   001E34                     
  5852                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5853   001E34  0E00               	movlw	0
  5854   001E36  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  5855   001E38  0E00               	movlw	0
  5856   001E3A  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  5857   001E3C  0E00               	movlw	0
  5858   001E3E  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  5859   001E40  0E00               	movlw	0
  5860   001E42  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  5861   001E44  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  5862   001E48                     
  5863                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  5864   001E48  0E02               	movlw	2
  5865   001E4A  0012               	return		;funcret
  5866   001E4C                     __end_of_rdBlkRegCompleteHandler:
  5867                           	callstack 0
  5868                           
  5869 ;; *************** function _wr1RegCompleteHandler *****************
  5870 ;; Defined at:
  5871 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  ptr             2   15[COMRAM] PTR void 
  5874 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5875 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      enum E360
  5880 ;; Registers used:
  5881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:        2 bytes
  5892 ;; Hardware stack levels used: 1
  5893 ;; Hardware stack levels required when called: 6
  5894 ;; This function calls:
  5895 ;;		_I2C_SetBuffer
  5896 ;;		_I2C_SetDataCompleteCallback
  5897 ;; This function is called by:
  5898 ;;		_I2C_Write1ByteRegister
  5899 ;;		_I2C_DO_TX
  5900 ;;		_I2C_DO_RX
  5901 ;;		_I2C_DO_TX_EMPTY
  5902 ;;		_I2C_DO_ADDRESS_NACK
  5903 ;;		_I2C_DO_RX_EMPTY
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text64
  5908   001F68                     __ptext64:
  5909                           	callstack 0
  5910   001F68                     _wr1RegCompleteHandler:
  5911                           	callstack 18
  5912   001F68                     
  5913                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  5914   001F68  C010  F007         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  5915   001F6C  C011  F008         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  5916   001F70  0E00               	movlw	0
  5917   001F72  6E0A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  5918   001F74  0E01               	movlw	1
  5919   001F76  6E09               	movwf	I2C_SetBuffer@bufferSize^0,c
  5920   001F78  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  5921   001F7C                     
  5922                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5923   001F7C  0E00               	movlw	0
  5924   001F7E  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  5925   001F80  0E00               	movlw	0
  5926   001F82  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  5927   001F84  0E00               	movlw	0
  5928   001F86  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  5929   001F88  0E00               	movlw	0
  5930   001F8A  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  5931   001F8C  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  5932   001F90                     
  5933                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  5934   001F90  0E04               	movlw	4
  5935   001F92  0012               	return		;funcret
  5936   001F94                     __end_of_wr1RegCompleteHandler:
  5937                           	callstack 0
  5938                           
  5939 ;; *************** function _rd2RegCompleteHandler *****************
  5940 ;; Defined at:
  5941 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  ptr             2   15[COMRAM] PTR void 
  5944 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5945 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      enum E360
  5950 ;; Registers used:
  5951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;Total ram usage:        2 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 6
  5964 ;; This function calls:
  5965 ;;		_I2C_SetBuffer
  5966 ;;		_I2C_SetDataCompleteCallback
  5967 ;; This function is called by:
  5968 ;;		_I2C_Read2ByteRegister
  5969 ;;		_I2C_DO_TX
  5970 ;;		_I2C_DO_RX
  5971 ;;		_I2C_DO_TX_EMPTY
  5972 ;;		_I2C_DO_ADDRESS_NACK
  5973 ;;		_I2C_DO_RX_EMPTY
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text65
  5978   001F94                     __ptext65:
  5979                           	callstack 0
  5980   001F94                     _rd2RegCompleteHandler:
  5981                           	callstack 18
  5982   001F94                     
  5983                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  5984   001F94  C010  F007         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  5985   001F98  C011  F008         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  5986   001F9C  0E00               	movlw	0
  5987   001F9E  6E0A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  5988   001FA0  0E02               	movlw	2
  5989   001FA2  6E09               	movwf	I2C_SetBuffer@bufferSize^0,c
  5990   001FA4  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  5991   001FA8                     
  5992                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5993   001FA8  0E00               	movlw	0
  5994   001FAA  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  5995   001FAC  0E00               	movlw	0
  5996   001FAE  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  5997   001FB0  0E00               	movlw	0
  5998   001FB2  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  5999   001FB4  0E00               	movlw	0
  6000   001FB6  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6001   001FB8  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  6002   001FBC                     
  6003                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6004   001FBC  0E02               	movlw	2
  6005   001FBE  0012               	return		;funcret
  6006   001FC0                     __end_of_rd2RegCompleteHandler:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function _rd1RegCompleteHandler *****************
  6010 ;; Defined at:
  6011 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  ptr             2   15[COMRAM] PTR void 
  6014 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6015 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;		None
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1    wreg      enum E360
  6020 ;; Registers used:
  6021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;Total ram usage:        2 bytes
  6032 ;; Hardware stack levels used: 1
  6033 ;; Hardware stack levels required when called: 6
  6034 ;; This function calls:
  6035 ;;		_I2C_SetBuffer
  6036 ;;		_I2C_SetDataCompleteCallback
  6037 ;; This function is called by:
  6038 ;;		_I2C_Read1ByteRegister
  6039 ;;		_I2C_DO_TX
  6040 ;;		_I2C_DO_RX
  6041 ;;		_I2C_DO_TX_EMPTY
  6042 ;;		_I2C_DO_ADDRESS_NACK
  6043 ;;		_I2C_DO_RX_EMPTY
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text66
  6048   001FC0                     __ptext66:
  6049                           	callstack 0
  6050   001FC0                     _rd1RegCompleteHandler:
  6051                           	callstack 18
  6052   001FC0                     
  6053                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6054   001FC0  C010  F007         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6055   001FC4  C011  F008         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6056   001FC8  0E00               	movlw	0
  6057   001FCA  6E0A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6058   001FCC  0E01               	movlw	1
  6059   001FCE  6E09               	movwf	I2C_SetBuffer@bufferSize^0,c
  6060   001FD0  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  6061   001FD4                     
  6062                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6063   001FD4  0E00               	movlw	0
  6064   001FD6  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6065   001FD8  0E00               	movlw	0
  6066   001FDA  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6067   001FDC  0E00               	movlw	0
  6068   001FDE  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6069   001FE0  0E00               	movlw	0
  6070   001FE2  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6071   001FE4  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  6072   001FE8                     
  6073                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6074   001FE8  0E02               	movlw	2
  6075   001FEA  0012               	return		;funcret
  6076   001FEC                     __end_of_rd1RegCompleteHandler:
  6077                           	callstack 0
  6078                           
  6079 ;; *************** function _wr2RegCompleteHandler *****************
  6080 ;; Defined at:
  6081 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  ptr             2   15[COMRAM] PTR void 
  6084 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6085 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      enum E360
  6090 ;; Registers used:
  6091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;Total ram usage:        2 bytes
  6102 ;; Hardware stack levels used: 1
  6103 ;; Hardware stack levels required when called: 6
  6104 ;; This function calls:
  6105 ;;		_I2C_SetBuffer
  6106 ;;		_I2C_SetDataCompleteCallback
  6107 ;; This function is called by:
  6108 ;;		_I2C_Write2ByteRegister
  6109 ;;		_I2C_DO_TX
  6110 ;;		_I2C_DO_RX
  6111 ;;		_I2C_DO_TX_EMPTY
  6112 ;;		_I2C_DO_ADDRESS_NACK
  6113 ;;		_I2C_DO_RX_EMPTY
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text67
  6118   001FEC                     __ptext67:
  6119                           	callstack 0
  6120   001FEC                     _wr2RegCompleteHandler:
  6121                           	callstack 18
  6122   001FEC                     
  6123                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6124   001FEC  C010  F007         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6125   001FF0  C011  F008         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6126   001FF4  0E00               	movlw	0
  6127   001FF6  6E0A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6128   001FF8  0E02               	movlw	2
  6129   001FFA  6E09               	movwf	I2C_SetBuffer@bufferSize^0,c
  6130   001FFC  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  6131   002000                     
  6132                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6133   002000  0E00               	movlw	0
  6134   002002  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6135   002004  0E00               	movlw	0
  6136   002006  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6137   002008  0E00               	movlw	0
  6138   00200A  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6139   00200C  0E00               	movlw	0
  6140   00200E  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6141   002010  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  6142   002014                     
  6143                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6144   002014  0E04               	movlw	4
  6145   002016  0012               	return		;funcret
  6146   002018                     __end_of_wr2RegCompleteHandler:
  6147                           	callstack 0
  6148                           
  6149 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6150 ;; Defined at:
  6151 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  cb              2   11[COMRAM] PTR FTN(PTR void ,)enum 
  6154 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6155 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6156 ;;  ptr             2   13[COMRAM] PTR void 
  6157 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6158 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;Total ram usage:        4 bytes
  6175 ;; Hardware stack levels used: 1
  6176 ;; Hardware stack levels required when called: 5
  6177 ;; This function calls:
  6178 ;;		_I2C_SetCallback
  6179 ;; This function is called by:
  6180 ;;		_rd1RegCompleteHandler
  6181 ;;		_rd2RegCompleteHandler
  6182 ;;		_wr1RegCompleteHandler
  6183 ;;		_wr2RegCompleteHandler
  6184 ;;		_rdBlkRegCompleteHandler
  6185 ;;		_I2C_Read1ByteRegister
  6186 ;;		_I2C_Read2ByteRegister
  6187 ;;		_I2C_Write1ByteRegister
  6188 ;;		_I2C_Write2ByteRegister
  6189 ;;		_I2C_ReadDataBlock
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text68
  6194   002166                     __ptext68:
  6195                           	callstack 0
  6196   002166                     _I2C_SetDataCompleteCallback:
  6197                           	callstack 18
  6198   002166                     
  6199                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6200   002166  C00C  F007         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  6201   00216A  C00D  F008         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  6202   00216E  C00E  F009         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  6203   002172  C00F  F00A         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  6204   002176  0E00               	movlw	0
  6205   002178  ECD5  F00C         	call	_I2C_SetCallback
  6206   00217C  0012               	return		;funcret
  6207   00217E                     __end_of_I2C_SetDataCompleteCallback:
  6208                           	callstack 0
  6209                           
  6210 ;; *************** function _I2C_SetCallback *****************
  6211 ;; Defined at:
  6212 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  idx             1    wreg     enum E2864
  6215 ;;  cb              2    6[COMRAM] PTR FTN(PTR void ,)enum 
  6216 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6217 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6218 ;;  ptr             2    8[COMRAM] PTR void 
  6219 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6220 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  idx             1   10[COMRAM] enum E2864
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;Total ram usage:        5 bytes
  6237 ;; Hardware stack levels used: 1
  6238 ;; Hardware stack levels required when called: 4
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_I2C_SetDataCompleteCallback
  6243 ;;		_I2C_SetAddressNackCallback
  6244 ;;		_I2C_SetWriteCollisionCallback
  6245 ;;		_I2C_SetDataNackCallback
  6246 ;;		_I2C_SetTimeoutCallback
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text69
  6251   0019AA                     __ptext69:
  6252                           	callstack 0
  6253   0019AA                     _I2C_SetCallback:
  6254                           	callstack 24
  6255                           
  6256                           ;incstack = 0
  6257                           ;I2C_SetCallback@idx stored from wreg
  6258   0019AA  6E0B               	movwf	I2C_SetCallback@idx^0,c
  6259   0019AC                     
  6260                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  6261   0019AC  5007               	movf	I2C_SetCallback@cb^0,w,c
  6262   0019AE  1008               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  6263   0019B0  B4D8               	btfsc	status,2,c
  6264   0019B2  EFDD  F00C         	goto	u1991
  6265   0019B6  EFDF  F00C         	goto	u1990
  6266   0019BA                     u1991:
  6267   0019BA  EFF9  F00C         	goto	l3891
  6268   0019BE                     u1990:
  6269   0019BE                     
  6270                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6271   0019BE  500B               	movf	I2C_SetCallback@idx^0,w,c
  6272   0019C0  0D02               	mullw	2
  6273   0019C2  0E60               	movlw	low _I2C_Status
  6274   0019C4  24F3               	addwf	243,w,c
  6275   0019C6  6ED9               	movwf	fsr2l,c
  6276   0019C8  0E00               	movlw	high _I2C_Status
  6277   0019CA  20F4               	addwfc	prodh,w,c
  6278   0019CC  6EDA               	movwf	fsr2h,c
  6279   0019CE  C007  FFDE         	movff	I2C_SetCallback@cb,postinc2
  6280   0019D2  C008  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  6281                           
  6282                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  6283   0019D6  500B               	movf	I2C_SetCallback@idx^0,w,c
  6284   0019D8  0D02               	mullw	2
  6285   0019DA  0E6C               	movlw	low (_I2C_Status+12)
  6286   0019DC  24F3               	addwf	243,w,c
  6287   0019DE  6ED9               	movwf	fsr2l,c
  6288   0019E0  0E00               	movlw	high (_I2C_Status+12)
  6289   0019E2  20F4               	addwfc	prodh,w,c
  6290   0019E4  6EDA               	movwf	fsr2h,c
  6291   0019E6  C009  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  6292   0019EA  C00A  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  6293                           
  6294                           ;mcc_generated_files/i2c_master.c: 304:     }
  6295   0019EE  EF11  F00D         	goto	l256
  6296   0019F2                     l3891:
  6297                           
  6298                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6299   0019F2  500B               	movf	I2C_SetCallback@idx^0,w,c
  6300   0019F4  0D02               	mullw	2
  6301   0019F6  0E60               	movlw	low _I2C_Status
  6302   0019F8  24F3               	addwf	243,w,c
  6303   0019FA  6ED9               	movwf	fsr2l,c
  6304   0019FC  0E00               	movlw	high _I2C_Status
  6305   0019FE  20F4               	addwfc	prodh,w,c
  6306   001A00  6EDA               	movwf	fsr2h,c
  6307   001A02  0EDA               	movlw	low _I2C_CallbackReturnStop
  6308   001A04  6EDE               	movwf	postinc2,c
  6309   001A06  0E22               	movlw	high _I2C_CallbackReturnStop
  6310   001A08  6EDD               	movwf	postdec2,c
  6311                           
  6312                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6313   001A0A  500B               	movf	I2C_SetCallback@idx^0,w,c
  6314   001A0C  0D02               	mullw	2
  6315   001A0E  0E6C               	movlw	low (_I2C_Status+12)
  6316   001A10  24F3               	addwf	243,w,c
  6317   001A12  6ED9               	movwf	fsr2l,c
  6318   001A14  0E00               	movlw	high (_I2C_Status+12)
  6319   001A16  20F4               	addwfc	prodh,w,c
  6320   001A18  6EDA               	movwf	fsr2h,c
  6321   001A1A  0E00               	movlw	0
  6322   001A1C  6EDE               	movwf	postinc2,c
  6323   001A1E  0E00               	movlw	0
  6324   001A20  6EDD               	movwf	postdec2,c
  6325   001A22                     l256:
  6326   001A22  0012               	return		;funcret
  6327   001A24                     __end_of_I2C_SetCallback:
  6328                           	callstack 0
  6329                           
  6330 ;; *************** function _I2C_SetBuffer *****************
  6331 ;; Defined at:
  6332 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  buffer          2    6[COMRAM] PTR void 
  6335 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
  6336 ;;		 -> main@red2(3), main@red(3), main@dat(3), I2C_ReadDataBlock@reg(1), 
  6337 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@dat
      +a(2), 
  6338 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  6339 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  6340 ;;  bufferSize      2    8[COMRAM] unsigned int 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;Total ram usage:        4 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 4
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_I2C_WriteNBytes
  6363 ;;		_I2C_ReadNBytes
  6364 ;;		_rd1RegCompleteHandler
  6365 ;;		_rd2RegCompleteHandler
  6366 ;;		_wr1RegCompleteHandler
  6367 ;;		_wr2RegCompleteHandler
  6368 ;;		_rdBlkRegCompleteHandler
  6369 ;;		_I2C_Read1ByteRegister
  6370 ;;		_I2C_Read2ByteRegister
  6371 ;;		_I2C_Write1ByteRegister
  6372 ;;		_I2C_Write2ByteRegister
  6373 ;;		_I2C_ReadDataBlock
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text70
  6378   002094                     __ptext70:
  6379                           	callstack 0
  6380   002094                     _I2C_SetBuffer:
  6381                           	callstack 25
  6382   002094                     
  6383                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  6384   002094  0100               	movlb	0	; () banked
  6385   002096  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  6386   002098  EF50  F010         	goto	u2001
  6387   00209C  EF52  F010         	goto	u2000
  6388   0020A0                     u2001:
  6389   0020A0  EF5B  F010         	goto	l236
  6390   0020A4                     u2000:
  6391   0020A4                     
  6392                           ; BSR set to: 0
  6393                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  6394   0020A4  C007  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  6395   0020A8  C008  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  6396   0020AC                     
  6397                           ; BSR set to: 0
  6398                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  6399   0020AC  C009  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  6400   0020B0  C00A  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  6401   0020B4                     
  6402                           ; BSR set to: 0
  6403                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  6404   0020B4  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  6405   0020B6                     l236:
  6406                           
  6407                           ; BSR set to: 0
  6408   0020B6  0012               	return		;funcret
  6409   0020B8                     __end_of_I2C_SetBuffer:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function _I2C_MasterStop *****************
  6413 ;; Defined at:
  6414 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		None
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;Total ram usage:        0 bytes
  6433 ;; Hardware stack levels used: 1
  6434 ;; Hardware stack levels required when called: 4
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_I2C_DO_SEND_STOP
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text71
  6443   0022DE                     __ptext71:
  6444                           	callstack 0
  6445   0022DE                     _I2C_MasterStop:
  6446                           	callstack 19
  6447   0022DE                     
  6448                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  6449   0022DE  84C5               	bsf	197,2,c	;volatile
  6450   0022E0  0012               	return		;funcret
  6451   0022E2                     __end_of_I2C_MasterStop:
  6452                           	callstack 0
  6453                           
  6454 ;; *************** function _I2C_MasterEnableRestart *****************
  6455 ;; Defined at:
  6456 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		None
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used: 1
  6476 ;; Hardware stack levels required when called: 4
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_I2C_DO_SEND_RESTART_READ
  6481 ;;		_I2C_DO_SEND_RESTART_WRITE
  6482 ;;		_I2C_DO_SEND_RESTART
  6483 ;;		_I2C_DO_RX_EMPTY
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text72
  6488   0022E2                     __ptext72:
  6489                           	callstack 0
  6490   0022E2                     _I2C_MasterEnableRestart:
  6491                           	callstack 19
  6492   0022E2                     
  6493                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  6494   0022E2  82C5               	bsf	197,1,c	;volatile
  6495   0022E4  0012               	return		;funcret
  6496   0022E6                     __end_of_I2C_MasterEnableRestart:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _I2C_MasterStart *****************
  6500 ;; Defined at:
  6501 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		None
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; Hardware stack levels required when called: 4
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_I2C_MasterOperation
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text73
  6530   0022E6                     __ptext73:
  6531                           	callstack 0
  6532   0022E6                     _I2C_MasterStart:
  6533                           	callstack 23
  6534   0022E6                     
  6535                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  6536   0022E6  80C5               	bsf	197,0,c	;volatile
  6537   0022E8  0012               	return		;funcret
  6538   0022EA                     __end_of_I2C_MasterStart:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function _I2C_Close *****************
  6542 ;; Defined at:
  6543 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;		None
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  returnValue     1    6[COMRAM] enum E355
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      enum E355
  6550 ;; Registers used:
  6551 ;;		wreg, status,2, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;Total ram usage:        1 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 5
  6564 ;; This function calls:
  6565 ;;		_I2C_MasterClearIrq
  6566 ;;		_I2C_MasterClose
  6567 ;;		_I2C_MasterDisableIrq
  6568 ;; This function is called by:
  6569 ;;		_I2C_WriteNBytes
  6570 ;;		_I2C_ReadNBytes
  6571 ;;		_I2C_Read1ByteRegister
  6572 ;;		_I2C_Read2ByteRegister
  6573 ;;		_I2C_Write1ByteRegister
  6574 ;;		_I2C_Write2ByteRegister
  6575 ;;		_I2C_ReadDataBlock
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text74
  6580   002018                     __ptext74:
  6581                           	callstack 0
  6582   002018                     _I2C_Close:
  6583                           	callstack 24
  6584   002018                     
  6585                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  6586   002018  0E01               	movlw	1
  6587   00201A  6E07               	movwf	I2C_Close@returnValue^0,c
  6588   00201C                     
  6589                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  6590   00201C  0100               	movlb	0	; () banked
  6591   00201E  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  6592   002020  EF14  F010         	goto	u2431
  6593   002024  EF16  F010         	goto	u2430
  6594   002028                     u2431:
  6595   002028  EF20  F010         	goto	l4485
  6596   00202C                     u2430:
  6597   00202C                     
  6598                           ; BSR set to: 0
  6599                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  6600   00202C  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  6601                           
  6602                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  6603   00202E  697C               	setf	(_I2C_Status+28)& (0+255),b
  6604   002030                     
  6605                           ; BSR set to: 0
  6606                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  6607   002030  EC79  F011         	call	_I2C_MasterClearIrq	;wreg free
  6608                           
  6609                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  6610   002034  EC75  F011         	call	_I2C_MasterDisableIrq	;wreg free
  6611                           
  6612                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  6613   002038  EC77  F011         	call	_I2C_MasterClose	;wreg free
  6614   00203C                     
  6615                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  6616   00203C  C082  F007         	movff	_I2C_Status+34,I2C_Close@returnValue
  6617   002040                     l4485:
  6618                           
  6619                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  6620   002040  5007               	movf	I2C_Close@returnValue^0,w,c
  6621   002042  0012               	return		;funcret
  6622   002044                     __end_of_I2C_Close:
  6623                           	callstack 0
  6624                           
  6625 ;; *************** function _I2C_MasterDisableIrq *****************
  6626 ;; Defined at:
  6627 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;		None
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;		None
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  1    wreg      void 
  6634 ;; Registers used:
  6635 ;;		None
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;Total ram usage:        0 bytes
  6646 ;; Hardware stack levels used: 1
  6647 ;; Hardware stack levels required when called: 4
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_I2C_Close
  6652 ;;		_I2C_SetTimeOut
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text75
  6657   0022EA                     __ptext75:
  6658                           	callstack 0
  6659   0022EA                     _I2C_MasterDisableIrq:
  6660                           	callstack 24
  6661   0022EA                     
  6662                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  6663   0022EA  969D               	bcf	157,3,c	;volatile
  6664   0022EC  0012               	return		;funcret
  6665   0022EE                     __end_of_I2C_MasterDisableIrq:
  6666                           	callstack 0
  6667                           
  6668 ;; *************** function _I2C_MasterClose *****************
  6669 ;; Defined at:
  6670 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		None
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;Total ram usage:        0 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; Hardware stack levels required when called: 4
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_I2C_Close
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text76
  6699   0022EE                     __ptext76:
  6700                           	callstack 0
  6701   0022EE                     _I2C_MasterClose:
  6702                           	callstack 24
  6703   0022EE                     
  6704                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  6705   0022EE  9AC6               	bcf	198,5,c	;volatile
  6706   0022F0  0012               	return		;funcret
  6707   0022F2                     __end_of_I2C_MasterClose:
  6708                           	callstack 0
  6709                           
  6710 ;; *************** function _I2C_MasterClearIrq *****************
  6711 ;; Defined at:
  6712 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      void 
  6719 ;; Registers used:
  6720 ;;		None
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;Total ram usage:        0 bytes
  6731 ;; Hardware stack levels used: 1
  6732 ;; Hardware stack levels required when called: 4
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_I2C_Open
  6737 ;;		_I2C_Close
  6738 ;;		_I2C_MasterFsm
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text77
  6743   0022F2                     __ptext77:
  6744                           	callstack 0
  6745   0022F2                     _I2C_MasterClearIrq:
  6746                           	callstack 24
  6747   0022F2                     
  6748                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  6749   0022F2  969E               	bcf	158,3,c	;volatile
  6750   0022F4  0012               	return		;funcret
  6751   0022F6                     __end_of_I2C_MasterClearIrq:
  6752                           	callstack 0
  6753                           
  6754 ;; *************** function _INTERRUPT_InterruptManager *****************
  6755 ;; Defined at:
  6756 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      void 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;Total ram usage:        4 bytes
  6775 ;; Hardware stack levels used: 1
  6776 ;; Hardware stack levels required when called: 3
  6777 ;; This function calls:
  6778 ;;		Absolute function
  6779 ;;		_EUSART_Receive_ISR
  6780 ;;		_EUSART_Transmit_ISR
  6781 ;;		_TMR0_ISR
  6782 ;;		_USART_RXC_vect
  6783 ;;		_USART_TXC_vect
  6784 ;; This function is called by:
  6785 ;;		Interrupt level 2
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	intcode
  6790   000008                     __pintcode:
  6791                           	callstack 0
  6792   000008                     _INTERRUPT_InterruptManager:
  6793                           	callstack 18
  6794                           
  6795                           ;incstack = 0
  6796   000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6797   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  6798   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6799   000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6800   000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6801   00001A                     
  6802                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6803   00001A  AAF2               	btfss	242,5,c	;volatile
  6804   00001C  EF12  F000         	goto	i2u184_41
  6805   000020  EF14  F000         	goto	i2u184_40
  6806   000024                     i2u184_41:
  6807   000024  EF1F  F000         	goto	i2l723
  6808   000028                     i2u184_40:
  6809   000028  A4F2               	btfss	242,2,c	;volatile
  6810   00002A  EF19  F000         	goto	i2u185_41
  6811   00002E  EF1B  F000         	goto	i2u185_40
  6812   000032                     i2u185_41:
  6813   000032  EF1F  F000         	goto	i2l723
  6814   000036                     i2u185_40:
  6815   000036                     
  6816                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  6817   000036  EC81  F00F         	call	_TMR0_ISR	;wreg free
  6818                           
  6819                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  6820   00003A  EF5E  F000         	goto	i2l731
  6821   00003E                     i2l723:
  6822   00003E  ACF2               	btfss	242,6,c	;volatile
  6823   000040  EF24  F000         	goto	i2u186_41
  6824   000044  EF26  F000         	goto	i2u186_40
  6825   000048                     i2u186_41:
  6826   000048  EF5E  F000         	goto	i2l731
  6827   00004C                     i2u186_40:
  6828   00004C                     
  6829                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6830   00004C  A89D               	btfss	157,4,c	;volatile
  6831   00004E  EF2B  F000         	goto	i2u187_41
  6832   000052  EF2D  F000         	goto	i2u187_40
  6833   000056                     i2u187_41:
  6834   000056  EF42  F000         	goto	i2l726
  6835   00005A                     i2u187_40:
  6836   00005A  A89E               	btfss	158,4,c	;volatile
  6837   00005C  EF32  F000         	goto	i2u188_41
  6838   000060  EF34  F000         	goto	i2u188_40
  6839   000064                     i2u188_41:
  6840   000064  EF42  F000         	goto	i2l726
  6841   000068                     i2u188_40:
  6842   000068                     
  6843                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_TxDefaultInterruptHandler();
  6844   000068  D802               	call	i2u189_48
  6845   00006A  EF40  F000         	goto	i2u189_49
  6846   00006E                     i2u189_48:
  6847   00006E  0005               	push	
  6848   000070  6EFA               	movwf	pclath,c
  6849   000072  5047               	movf	_EUSART_TxDefaultInterruptHandler^0,w,c
  6850   000074  6EFD               	movwf	tosl,c
  6851   000076  5048               	movf	(_EUSART_TxDefaultInterruptHandler+1)^0,w,c
  6852   000078  6EFE               	movwf	tosh,c
  6853   00007A  6AFF               	clrf	tosu,c
  6854   00007C  50FA               	movf	pclath,w,c
  6855   00007E  0012               	return		;indir
  6856   000080                     i2u189_49:
  6857                           
  6858                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6859   000080  EF5E  F000         	goto	i2l731
  6860   000084                     i2l726:
  6861   000084  AA9D               	btfss	157,5,c	;volatile
  6862   000086  EF47  F000         	goto	i2u190_41
  6863   00008A  EF49  F000         	goto	i2u190_40
  6864   00008E                     i2u190_41:
  6865   00008E  EF5E  F000         	goto	i2l730
  6866   000092                     i2u190_40:
  6867   000092  AA9E               	btfss	158,5,c	;volatile
  6868   000094  EF4E  F000         	goto	i2u191_41
  6869   000098  EF50  F000         	goto	i2u191_40
  6870   00009C                     i2u191_41:
  6871   00009C  EF5E  F000         	goto	i2l730
  6872   0000A0                     i2u191_40:
  6873   0000A0                     
  6874                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_RxDefaultInterruptHandler();
  6875   0000A0  D802               	call	i2u192_48
  6876   0000A2  EF5C  F000         	goto	i2u192_49
  6877   0000A6                     i2u192_48:
  6878   0000A6  0005               	push	
  6879   0000A8  6EFA               	movwf	pclath,c
  6880   0000AA  5045               	movf	_EUSART_RxDefaultInterruptHandler^0,w,c
  6881   0000AC  6EFD               	movwf	tosl,c
  6882   0000AE  5046               	movf	(_EUSART_RxDefaultInterruptHandler+1)^0,w,c
  6883   0000B0  6EFE               	movwf	tosh,c
  6884   0000B2  6AFF               	clrf	tosu,c
  6885   0000B4  50FA               	movf	pclath,w,c
  6886   0000B6  0012               	return		;indir
  6887   0000B8                     i2u192_49:
  6888                           
  6889                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  6890   0000B8  EF5E  F000         	goto	i2l731
  6891   0000BC                     i2l730:
  6892   0000BC                     i2l731:
  6893   0000BC  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6894   0000C0  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6895   0000C4  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6896   0000C8  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6897   0000CC  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6898   0000CE  0011               	retfie		f
  6899   0000D0                     __end_of_INTERRUPT_InterruptManager:
  6900                           	callstack 0
  6901                           
  6902 ;; *************** function _EUSART_Transmit_ISR *****************
  6903 ;; Defined at:
  6904 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;		None
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1    wreg      void 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;Total ram usage:        0 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_EUSART_Initialize
  6928 ;;		_INTERRUPT_InterruptManager
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text79
  6933   001E4C                     __ptext79:
  6934                           	callstack 0
  6935   001E4C                     _EUSART_Transmit_ISR:
  6936                           	callstack 20
  6937   001E4C                     
  6938                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6939   001E4C  0E08               	movlw	8
  6940   001E4E  604B               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
  6941   001E50  EF2C  F00F         	goto	i2u56_41
  6942   001E54  EF2E  F00F         	goto	i2u56_40
  6943   001E58                     i2u56_41:
  6944   001E58  EF44  F00F         	goto	i2l663
  6945   001E5C                     i2u56_40:
  6946   001E5C                     
  6947                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6948   001E5C  0E2C               	movlw	low _eusartTxBuffer
  6949   001E5E  2438               	addwf	_eusartTxTail^0,w,c	;volatile
  6950   001E60  6ED9               	movwf	fsr2l,c
  6951   001E62  6ADA               	clrf	fsr2h,c
  6952   001E64  0E00               	movlw	high _eusartTxBuffer
  6953   001E66  22DA               	addwfc	fsr2h,f,c
  6954   001E68  50DF               	movf	indf2,w,c
  6955   001E6A  6EAD               	movwf	173,c	;volatile
  6956   001E6C  2A38               	incf	_eusartTxTail^0,f,c	;volatile
  6957   001E6E                     
  6958                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6959   001E6E  0E07               	movlw	7
  6960   001E70  6438               	cpfsgt	_eusartTxTail^0,c	;volatile
  6961   001E72  EF3D  F00F         	goto	i2u57_41
  6962   001E76  EF3F  F00F         	goto	i2u57_40
  6963   001E7A                     i2u57_41:
  6964   001E7A  EF41  F00F         	goto	i2l2435
  6965   001E7E                     i2u57_40:
  6966   001E7E                     
  6967                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6968   001E7E  0E00               	movlw	0
  6969   001E80  6E38               	movwf	_eusartTxTail^0,c	;volatile
  6970   001E82                     i2l2435:
  6971                           
  6972                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6973   001E82  2A4B               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
  6974                           
  6975                           ;mcc_generated_files/eusart.c: 209:     }
  6976   001E84  EF45  F00F         	goto	i2l666
  6977   001E88                     i2l663:
  6978                           
  6979                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TX1IE = 0;
  6980   001E88  989D               	bcf	157,4,c	;volatile
  6981   001E8A                     i2l666:
  6982   001E8A  0012               	return		;funcret
  6983   001E8C                     __end_of_EUSART_Transmit_ISR:
  6984                           	callstack 0
  6985                           
  6986 ;; *************** function _USART_TXC_vect *****************
  6987 ;; Defined at:
  6988 ;;		line 71 in file "Modbas_RTU.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;		None
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		None
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7006 ;;Total ram usage:        0 bytes
  7007 ;; Hardware stack levels used: 1
  7008 ;; This function calls:
  7009 ;;		Nothing
  7010 ;; This function is called by:
  7011 ;;		_main
  7012 ;;		_INTERRUPT_InterruptManager
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text80
  7017   0022F6                     __ptext80:
  7018                           	callstack 0
  7019   0022F6                     _USART_TXC_vect:
  7020                           	callstack 20
  7021   0022F6                     
  7022                           ;Modbas_RTU.c: 75:    PIE1bits.TX1IE=0;
  7023   0022F6  989D               	bcf	157,4,c	;volatile
  7024   0022F8  0012               	return		;funcret
  7025   0022FA                     __end_of_USART_TXC_vect:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function _EUSART_Receive_ISR *****************
  7029 ;; Defined at:
  7030 ;;		line 216 in file "mcc_generated_files/eusart.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;		None
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;		None
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      void 
  7037 ;; Registers used:
  7038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;Total ram usage:        0 bytes
  7049 ;; Hardware stack levels used: 1
  7050 ;; Hardware stack levels required when called: 2
  7051 ;; This function calls:
  7052 ;;		Absolute function
  7053 ;;		_EUSART_DefaultErrorHandler
  7054 ;;		_EUSART_DefaultFramingErrorHandler
  7055 ;;		_EUSART_DefaultOverrunErrorHandler
  7056 ;;		_EUSART_RxDataHandler
  7057 ;; This function is called by:
  7058 ;;		_EUSART_Initialize
  7059 ;;		_INTERRUPT_InterruptManager
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text81
  7064   001624                     __ptext81:
  7065                           	callstack 0
  7066   001624                     _EUSART_Receive_ISR:
  7067                           	callstack 18
  7068   001624                     
  7069                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7070   001624  0E24               	movlw	low _eusartRxStatusBuffer
  7071   001626  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7072   001628  6ED9               	movwf	fsr2l,c
  7073   00162A  6ADA               	clrf	fsr2h,c
  7074   00162C  0E00               	movlw	high _eusartRxStatusBuffer
  7075   00162E  22DA               	addwfc	fsr2h,f,c
  7076   001630  0E00               	movlw	0
  7077   001632  6EDF               	movwf	indf2,c
  7078   001634                     
  7079                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  7080   001634  A4AB               	btfss	171,2,c	;volatile
  7081   001636  EF1F  F00B         	goto	i2u156_41
  7082   00163A  EF21  F00B         	goto	i2u156_40
  7083   00163E                     i2u156_41:
  7084   00163E  EF34  F00B         	goto	i2l3527
  7085   001642                     i2u156_40:
  7086   001642                     
  7087                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7088   001642  0E24               	movlw	low _eusartRxStatusBuffer
  7089   001644  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7090   001646  6ED9               	movwf	fsr2l,c
  7091   001648  6ADA               	clrf	fsr2h,c
  7092   00164A  0E00               	movlw	high _eusartRxStatusBuffer
  7093   00164C  22DA               	addwfc	fsr2h,f,c
  7094   00164E  82DF               	bsf	indf2,1,c
  7095   001650                     
  7096                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  7097   001650  D802               	call	i2u157_48
  7098   001652  EF34  F00B         	goto	i2u157_49
  7099   001656                     i2u157_48:
  7100   001656  0005               	push	
  7101   001658  6EFA               	movwf	pclath,c
  7102   00165A  5043               	movf	_EUSART_FramingErrorHandler^0,w,c
  7103   00165C  6EFD               	movwf	tosl,c
  7104   00165E  5044               	movf	(_EUSART_FramingErrorHandler+1)^0,w,c
  7105   001660  6EFE               	movwf	tosh,c
  7106   001662  6AFF               	clrf	tosu,c
  7107   001664  50FA               	movf	pclath,w,c
  7108   001666  0012               	return		;indir
  7109   001668                     i2u157_49:
  7110   001668                     i2l3527:
  7111                           
  7112                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  7113   001668  A2AB               	btfss	171,1,c	;volatile
  7114   00166A  EF39  F00B         	goto	i2u158_41
  7115   00166E  EF3B  F00B         	goto	i2u158_40
  7116   001672                     i2u158_41:
  7117   001672  EF4F  F00B         	goto	i2l3533
  7118   001676                     i2u158_40:
  7119   001676                     
  7120                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7121   001676  0E24               	movlw	low _eusartRxStatusBuffer
  7122   001678  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7123   00167A  6ED9               	movwf	fsr2l,c
  7124   00167C  6ADA               	clrf	fsr2h,c
  7125   00167E  0E00               	movlw	high _eusartRxStatusBuffer
  7126   001680  22DA               	addwfc	fsr2h,f,c
  7127   001682  84DF               	bsf	indf2,2,c
  7128   001684                     
  7129                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  7130   001684  D802               	call	i2u159_48
  7131   001686  EF4F  F00B         	goto	i2u159_49
  7132   00168A                     i2u159_48:
  7133   00168A  0005               	push	
  7134   00168C  6EFA               	movwf	pclath,c
  7135   00168E  0100               	movlb	0	; () banked
  7136   001690  51DF               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  7137   001692  6EFD               	movwf	tosl,c
  7138   001694  51E0               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  7139   001696  6EFE               	movwf	tosh,c
  7140   001698  6AFF               	clrf	tosu,c
  7141   00169A  50FA               	movf	pclath,w,c
  7142   00169C  0012               	return		;indir
  7143   00169E                     i2u159_49:
  7144   00169E                     i2l3533:
  7145                           
  7146                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7147   00169E  0E24               	movlw	low _eusartRxStatusBuffer
  7148   0016A0  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7149   0016A2  6ED9               	movwf	fsr2l,c
  7150   0016A4  6ADA               	clrf	fsr2h,c
  7151   0016A6  0E00               	movlw	high _eusartRxStatusBuffer
  7152   0016A8  22DA               	addwfc	fsr2h,f,c
  7153   0016AA  50DF               	movf	indf2,w,c
  7154   0016AC  B4D8               	btfsc	status,2,c
  7155   0016AE  EF5B  F00B         	goto	i2u160_41
  7156   0016B2  EF5D  F00B         	goto	i2u160_40
  7157   0016B6                     i2u160_41:
  7158   0016B6  EF6C  F00B         	goto	i2l3537
  7159   0016BA                     i2u160_40:
  7160   0016BA                     
  7161                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  7162   0016BA  D802               	call	i2u161_48
  7163   0016BC  EF6A  F00B         	goto	i2u161_49
  7164   0016C0                     i2u161_48:
  7165   0016C0  0005               	push	
  7166   0016C2  6EFA               	movwf	pclath,c
  7167   0016C4  0100               	movlb	0	; () banked
  7168   0016C6  51DD               	movf	_EUSART_ErrorHandler& (0+255),w,b
  7169   0016C8  6EFD               	movwf	tosl,c
  7170   0016CA  51DE               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  7171   0016CC  6EFE               	movwf	tosh,c
  7172   0016CE  6AFF               	clrf	tosu,c
  7173   0016D0  50FA               	movf	pclath,w,c
  7174   0016D2  0012               	return		;indir
  7175   0016D4                     i2u161_49:
  7176                           
  7177                           ;mcc_generated_files/eusart.c: 233:     } else {
  7178   0016D4  EF6E  F00B         	goto	i2l673
  7179   0016D8                     i2l3537:
  7180                           
  7181                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  7182   0016D8  EC22  F010         	call	_EUSART_RxDataHandler	;wreg free
  7183   0016DC                     i2l673:
  7184   0016DC  0012               	return		;funcret
  7185   0016DE                     __end_of_EUSART_Receive_ISR:
  7186                           	callstack 0
  7187                           
  7188 ;; *************** function _USART_RXC_vect *****************
  7189 ;; Defined at:
  7190 ;;		line 41 in file "Modbas_RTU.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;		None
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;  TempModbas      1    1[COMRAM] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  1    wreg      void 
  7197 ;; Registers used:
  7198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7208 ;;Total ram usage:        2 bytes
  7209 ;; Hardware stack levels used: 1
  7210 ;; Hardware stack levels required when called: 1
  7211 ;; This function calls:
  7212 ;;		_TMR0_Reload
  7213 ;;		_TMR0_StartTimer
  7214 ;; This function is called by:
  7215 ;;		_main
  7216 ;;		_INTERRUPT_InterruptManager
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           	psect	text82
  7221   0018A8                     __ptext82:
  7222                           	callstack 0
  7223   0018A8                     _USART_RXC_vect:
  7224                           	callstack 19
  7225   0018A8                     
  7226                           ;Modbas_RTU.c: 43:      unsigned char TempModbas = RCREG;
  7227   0018A8  CFAE F002          	movff	4014,USART_RXC_vect@TempModbas	;volatile
  7228   0018AC                     
  7229                           ;Modbas_RTU.c: 45:  TMR0_Reload();
  7230   0018AC  EC5A  F011         	call	_TMR0_Reload	;wreg free
  7231   0018B0                     
  7232                           ;Modbas_RTU.c: 46:  if (!Bit_action_ModbasRtu.b2)
  7233   0018B0  B43C               	btfsc	_Bit_action_ModbasRtu^0,2,c
  7234   0018B2  EF5D  F00C         	goto	i2u162_41
  7235   0018B6  EF5F  F00C         	goto	i2u162_40
  7236   0018BA                     i2u162_41:
  7237   0018BA  EF96  F00C         	goto	i2l782
  7238   0018BE                     i2u162_40:
  7239   0018BE                     
  7240                           ;Modbas_RTU.c: 47:   {;Modbas_RTU.c: 48:   if (!Bit_action_ModbasRtu.b0)
  7241   0018BE  B03C               	btfsc	_Bit_action_ModbasRtu^0,0,c
  7242   0018C0  EF64  F00C         	goto	i2u163_41
  7243   0018C4  EF66  F00C         	goto	i2u163_40
  7244   0018C8                     i2u163_41:
  7245   0018C8  EF86  F00C         	goto	i2l3559
  7246   0018CC                     i2u163_40:
  7247   0018CC                     
  7248                           ;Modbas_RTU.c: 49:    {;Modbas_RTU.c: 50:    Bit_action_ModbasRtu.b0 = 1;
  7249   0018CC  803C               	bsf	_Bit_action_ModbasRtu^0,0,c
  7250   0018CE                     
  7251                           ;Modbas_RTU.c: 51:    if (TempModbas == 0x31 )
  7252   0018CE  0E31               	movlw	49
  7253   0018D0  1802               	xorwf	USART_RXC_vect@TempModbas^0,w,c
  7254   0018D2  A4D8               	btfss	status,2,c
  7255   0018D4  EF6E  F00C         	goto	i2u164_41
  7256   0018D8  EF70  F00C         	goto	i2u164_40
  7257   0018DC                     i2u164_41:
  7258   0018DC  EF82  F00C         	goto	i2l3555
  7259   0018E0                     i2u164_40:
  7260   0018E0                     
  7261                           ;Modbas_RTU.c: 52:     {;Modbas_RTU.c: 53:     Bit_action_ModbasRtu.b1 = 1;
  7262   0018E0  823C               	bsf	_Bit_action_ModbasRtu^0,1,c
  7263   0018E2  B289               	btfsc	137,1,c	;volatile
  7264   0018E4  EF76  F00C         	goto	i2u165_41
  7265   0018E8  EF79  F00C         	goto	i2u165_40
  7266   0018EC                     i2u165_41:
  7267   0018EC  0E01               	movlw	1
  7268   0018EE  EF7A  F00C         	goto	i2u165_46
  7269   0018F2                     i2u165_40:
  7270   0018F2  0E00               	movlw	0
  7271   0018F4                     i2u165_46:
  7272   0018F4  0AFF               	xorlw	255
  7273   0018F6  6E01               	movwf	??_USART_RXC_vect^0,c
  7274   0018F8  4601               	rlncf	??_USART_RXC_vect^0,f,c
  7275   0018FA  5089               	movf	137,w,c	;volatile
  7276   0018FC  1801               	xorwf	??_USART_RXC_vect^0,w,c
  7277   0018FE  0BFD               	andlw	-3
  7278   001900  1801               	xorwf	??_USART_RXC_vect^0,w,c
  7279   001902  6E89               	movwf	137,c	;volatile
  7280   001904                     i2l3555:
  7281                           
  7282                           ;Modbas_RTU.c: 57:    quantity_Data_ModbasRtu = 0;
  7283   001904  0E00               	movlw	0
  7284   001906  6E3E               	movwf	_quantity_Data_ModbasRtu^0,c
  7285   001908                     
  7286                           ;Modbas_RTU.c: 58:    TMR0_StartTimer();
  7287   001908  EC7D  F011         	call	_TMR0_StartTimer	;wreg free
  7288   00190C                     i2l3559:
  7289                           
  7290                           ;Modbas_RTU.c: 60:   if (Bit_action_ModbasRtu.b1 == 1)
  7291   00190C  A23C               	btfss	_Bit_action_ModbasRtu^0,1,c
  7292   00190E  EF8B  F00C         	goto	i2u166_41
  7293   001912  EF8D  F00C         	goto	i2u166_40
  7294   001916                     i2u166_41:
  7295   001916  EF96  F00C         	goto	i2l782
  7296   00191A                     i2u166_40:
  7297   00191A                     
  7298                           ;Modbas_RTU.c: 62:    {;Modbas_RTU.c: 63:      Danie_Rx_ModbasRtu[quantity_Data_ModbasRt
      +                          u] = TempModbas;
  7299   00191A  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  7300   00191C  243E               	addwf	_quantity_Data_ModbasRtu^0,w,c
  7301   00191E  6ED9               	movwf	fsr2l,c
  7302   001920  6ADA               	clrf	fsr2h,c
  7303   001922  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7304   001924  22DA               	addwfc	fsr2h,f,c
  7305   001926  C002  FFDF         	movff	USART_RXC_vect@TempModbas,indf2
  7306   00192A                     
  7307                           ;Modbas_RTU.c: 64:      quantity_Data_ModbasRtu ++;
  7308   00192A  2A3E               	incf	_quantity_Data_ModbasRtu^0,f,c
  7309   00192C                     i2l782:
  7310   00192C  0012               	return		;funcret
  7311   00192E                     __end_of_USART_RXC_vect:
  7312                           	callstack 0
  7313                           
  7314 ;; *************** function _TMR0_StartTimer *****************
  7315 ;; Defined at:
  7316 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;		None
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		None
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;Total ram usage:        0 bytes
  7335 ;; Hardware stack levels used: 1
  7336 ;; This function calls:
  7337 ;;		Nothing
  7338 ;; This function is called by:
  7339 ;;		_USART_RXC_vect
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           	psect	text83
  7344   0022FA                     __ptext83:
  7345                           	callstack 0
  7346   0022FA                     _TMR0_StartTimer:
  7347                           	callstack 19
  7348   0022FA                     
  7349                           ;mcc_generated_files/tmr0.c: 98:     T0CONbits.TMR0ON = 1;
  7350   0022FA  8ED5               	bsf	213,7,c	;volatile
  7351   0022FC  0012               	return		;funcret
  7352   0022FE                     __end_of_TMR0_StartTimer:
  7353                           	callstack 0
  7354                           
  7355 ;; *************** function _TMR0_Reload *****************
  7356 ;; Defined at:
  7357 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;		None
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		None
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;Total ram usage:        0 bytes
  7376 ;; Hardware stack levels used: 1
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_USART_RXC_vect
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text84
  7385   0022B4                     __ptext84:
  7386                           	callstack 0
  7387   0022B4                     _TMR0_Reload:
  7388                           	callstack 19
  7389   0022B4                     
  7390                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = timer0ReloadVal;
  7391   0022B4  C04C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  7392   0022B8  0012               	return		;funcret
  7393   0022BA                     __end_of_TMR0_Reload:
  7394                           	callstack 0
  7395                           
  7396 ;; *************** function _TMR0_ISR *****************
  7397 ;; Defined at:
  7398 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;Total ram usage:        0 bytes
  7417 ;; Hardware stack levels used: 1
  7418 ;; Hardware stack levels required when called: 2
  7419 ;; This function calls:
  7420 ;;		Absolute function
  7421 ;;		_TIMER0_COMP_vect
  7422 ;;		_TMR0_DefaultInterruptHandler
  7423 ;; This function is called by:
  7424 ;;		_INTERRUPT_InterruptManager
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text85
  7429   001F02                     __ptext85:
  7430                           	callstack 0
  7431   001F02                     _TMR0_ISR:
  7432                           	callstack 18
  7433   001F02                     
  7434                           ;mcc_generated_files/tmr0.c: 132:  TIMER0_COMP_vect () ;
  7435   001F02  EC9A  F010         	call	_TIMER0_COMP_vect	;wreg free
  7436   001F06                     
  7437                           ;mcc_generated_files/tmr0.c: 135:     INTCONbits.TMR0IF = 0;
  7438   001F06  94F2               	bcf	242,2,c	;volatile
  7439   001F08                     
  7440                           ;mcc_generated_files/tmr0.c: 138:     TMR0L = timer0ReloadVal;
  7441   001F08  C04C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  7442   001F0C                     
  7443                           ;mcc_generated_files/tmr0.c: 140:     if(TMR0_InterruptHandler)
  7444   001F0C  5049               	movf	_TMR0_InterruptHandler^0,w,c
  7445   001F0E  104A               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  7446   001F10  B4D8               	btfsc	status,2,c
  7447   001F12  EF8D  F00F         	goto	i2u54_41
  7448   001F16  EF8F  F00F         	goto	i2u54_40
  7449   001F1A                     i2u54_41:
  7450   001F1A  EF9B  F00F         	goto	i2l551
  7451   001F1E                     i2u54_40:
  7452   001F1E                     
  7453                           ;mcc_generated_files/tmr0.c: 141:     {;mcc_generated_files/tmr0.c: 142:         TMR0_In
      +                          terruptHandler();
  7454   001F1E  D802               	call	i2u55_48
  7455   001F20  EF9B  F00F         	goto	i2u55_49
  7456   001F24                     i2u55_48:
  7457   001F24  0005               	push	
  7458   001F26  6EFA               	movwf	pclath,c
  7459   001F28  5049               	movf	_TMR0_InterruptHandler^0,w,c
  7460   001F2A  6EFD               	movwf	tosl,c
  7461   001F2C  504A               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  7462   001F2E  6EFE               	movwf	tosh,c
  7463   001F30  6AFF               	clrf	tosu,c
  7464   001F32  50FA               	movf	pclath,w,c
  7465   001F34  0012               	return		;indir
  7466   001F36                     i2u55_49:
  7467   001F36                     i2l551:
  7468   001F36  0012               	return		;funcret
  7469   001F38                     __end_of_TMR0_ISR:
  7470                           	callstack 0
  7471                           
  7472 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7473 ;; Defined at:
  7474 ;;		line 153 in file "mcc_generated_files/tmr0.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;		None
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		None
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;Total ram usage:        0 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_TMR0_Initialize
  7498 ;;		_TMR0_ISR
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text86
  7503   002302                     __ptext86:
  7504                           	callstack 0
  7505   002302                     _TMR0_DefaultInterruptHandler:
  7506                           	callstack 19
  7507   002302  0012               	return		;funcret
  7508   002304                     __end_of_TMR0_DefaultInterruptHandler:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function _TIMER0_COMP_vect *****************
  7512 ;; Defined at:
  7513 ;;		line 24 in file "Modbas_RTU.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;Total ram usage:        0 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 1
  7534 ;; This function calls:
  7535 ;;		_TMR0_StopTimer
  7536 ;; This function is called by:
  7537 ;;		_TMR0_ISR
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text87
  7542   002134                     __ptext87:
  7543                           	callstack 0
  7544   002134                     _TIMER0_COMP_vect:
  7545                           	callstack 18
  7546   002134                     
  7547                           ;Modbas_RTU.c: 27:    Bit_action_ModbasRtu.b0 = 0;
  7548   002134  903C               	bcf	_Bit_action_ModbasRtu^0,0,c
  7549   002136                     
  7550                           ;Modbas_RTU.c: 28:    TMR0_StopTimer();
  7551   002136  EC7F  F011         	call	_TMR0_StopTimer	;wreg free
  7552   00213A                     
  7553                           ;Modbas_RTU.c: 29:       if ( Bit_action_ModbasRtu.b1)
  7554   00213A  A23C               	btfss	_Bit_action_ModbasRtu^0,1,c
  7555   00213C  EFA2  F010         	goto	i2u47_41
  7556   002140  EFA4  F010         	goto	i2u47_40
  7557   002144                     i2u47_41:
  7558   002144  EFA6  F010         	goto	i2l773
  7559   002148                     i2u47_40:
  7560   002148                     
  7561                           ;Modbas_RTU.c: 30:        {;Modbas_RTU.c: 31:       Bit_action_ModbasRtu.b1 = 0;
  7562   002148  923C               	bcf	_Bit_action_ModbasRtu^0,1,c
  7563                           
  7564                           ;Modbas_RTU.c: 34:    Bit_action_ModbasRtu.b2 = 1;
  7565   00214A  843C               	bsf	_Bit_action_ModbasRtu^0,2,c
  7566   00214C                     i2l773:
  7567   00214C  0012               	return		;funcret
  7568   00214E                     __end_of_TIMER0_COMP_vect:
  7569                           	callstack 0
  7570                           
  7571 ;; *************** function _TMR0_StopTimer *****************
  7572 ;; Defined at:
  7573 ;;		line 101 in file "mcc_generated_files/tmr0.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;		None
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		None
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;Total ram usage:        0 bytes
  7592 ;; Hardware stack levels used: 1
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_TIMER0_COMP_vect
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text88
  7601   0022FE                     __ptext88:
  7602                           	callstack 0
  7603   0022FE                     _TMR0_StopTimer:
  7604                           	callstack 18
  7605   0022FE                     
  7606                           ;mcc_generated_files/tmr0.c: 104:     T0CONbits.TMR0ON = 0;
  7607   0022FE  9ED5               	bcf	213,7,c	;volatile
  7608   002300  0012               	return		;funcret
  7609   002302                     __end_of_TMR0_StopTimer:
  7610                           	callstack 0
  7611                           
  7612 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7613 ;; Defined at:
  7614 ;;		line 252 in file "mcc_generated_files/eusart.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		None
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used: 1
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_EUSART_Initialize
  7638 ;;		_EUSART_Receive_ISR
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text89
  7643   0022BA                     __ptext89:
  7644                           	callstack 0
  7645   0022BA                     _EUSART_DefaultOverrunErrorHandler:
  7646                           	callstack 19
  7647   0022BA                     
  7648                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  7649   0022BA  98AB               	bcf	171,4,c	;volatile
  7650                           
  7651                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  7652   0022BC  88AB               	bsf	171,4,c	;volatile
  7653   0022BE  0012               	return		;funcret
  7654   0022C0                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7655                           	callstack 0
  7656                           
  7657 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7658 ;; Defined at:
  7659 ;;		line 250 in file "mcc_generated_files/eusart.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		None
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;Total ram usage:        0 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_EUSART_Initialize
  7683 ;;		_EUSART_Receive_ISR
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           	psect	text90
  7688   002304                     __ptext90:
  7689                           	callstack 0
  7690   002304                     _EUSART_DefaultFramingErrorHandler:
  7691                           	callstack 19
  7692   002304  0012               	return		;funcret
  7693   002306                     __end_of_EUSART_DefaultFramingErrorHandler:
  7694                           	callstack 0
  7695                           
  7696 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7697 ;; Defined at:
  7698 ;;		line 260 in file "mcc_generated_files/eusart.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;		None
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;		None
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  1    wreg      void 
  7705 ;; Registers used:
  7706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;Total ram usage:        0 bytes
  7717 ;; Hardware stack levels used: 1
  7718 ;; Hardware stack levels required when called: 1
  7719 ;; This function calls:
  7720 ;;		_EUSART_RxDataHandler
  7721 ;; This function is called by:
  7722 ;;		_EUSART_Initialize
  7723 ;;		_EUSART_Receive_ISR
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text91
  7728   0022C0                     __ptext91:
  7729                           	callstack 0
  7730   0022C0                     _EUSART_DefaultErrorHandler:
  7731                           	callstack 18
  7732   0022C0                     
  7733                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  7734   0022C0  EC22  F010         	call	_EUSART_RxDataHandler	;wreg free
  7735   0022C4  0012               	return		;funcret
  7736   0022C6                     __end_of_EUSART_DefaultErrorHandler:
  7737                           	callstack 0
  7738                           
  7739 ;; *************** function _EUSART_RxDataHandler *****************
  7740 ;; Defined at:
  7741 ;;		line 240 in file "mcc_generated_files/eusart.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_EUSART_Receive_ISR
  7765 ;;		_EUSART_DefaultErrorHandler
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text92
  7770   002044                     __ptext92:
  7771                           	callstack 0
  7772   002044                     _EUSART_RxDataHandler:
  7773                           	callstack 19
  7774   002044                     
  7775                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7776   002044  0E84               	movlw	low _eusartRxBuffer
  7777   002046  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7778   002048  6ED9               	movwf	fsr2l,c
  7779   00204A  6ADA               	clrf	fsr2h,c
  7780   00204C  0E00               	movlw	high _eusartRxBuffer
  7781   00204E  22DA               	addwfc	fsr2h,f,c
  7782   002050  CFAE FFDF          	movff	4014,indf2	;volatile
  7783   002054  2A37               	incf	_eusartRxHead^0,f,c	;volatile
  7784   002056                     
  7785                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7786   002056  0E07               	movlw	7
  7787   002058  6437               	cpfsgt	_eusartRxHead^0,c	;volatile
  7788   00205A  EF31  F010         	goto	i2u132_41
  7789   00205E  EF33  F010         	goto	i2u132_40
  7790   002062                     i2u132_41:
  7791   002062  EF35  F010         	goto	i2l3203
  7792   002066                     i2u132_40:
  7793   002066                     
  7794                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  7795   002066  0E00               	movlw	0
  7796   002068  6E37               	movwf	_eusartRxHead^0,c	;volatile
  7797   00206A                     i2l3203:
  7798                           
  7799                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  7800   00206A  2A35               	incf	_eusartRxCount^0,f,c	;volatile
  7801   00206C  0012               	return		;funcret
  7802   00206E                     __end_of_EUSART_RxDataHandler:
  7803                           	callstack 0
  7804                           
  7805                           	psect	text93
  7806   000000                     __ptext93:
  7807                           	callstack 0
  7808   000000                     
  7809                           	psect	rparam
  7810   000000                     
  7811                           	psect	temp
  7812   000053                     btemp:
  7813                           	callstack 0
  7814   000053                     	ds	1
  7815   000000                     int$flags	set	btemp
  7816   000000                     wtemp8	set	btemp+1
  7817   000000                     ttemp5	set	btemp+1
  7818   000000                     ttemp6	set	btemp+4
  7819   000000                     ttemp7	set	btemp+8
  7820                           
  7821                           	psect	idloc
  7822                           
  7823                           ;Config register IDLOC0 @ 0x200000
  7824                           ;	unspecified, using default values
  7825   200000                     	org	2097152
  7826   200000  FF                 	db	255
  7827                           
  7828                           ;Config register IDLOC1 @ 0x200001
  7829                           ;	unspecified, using default values
  7830   200001                     	org	2097153
  7831   200001  FF                 	db	255
  7832                           
  7833                           ;Config register IDLOC2 @ 0x200002
  7834                           ;	unspecified, using default values
  7835   200002                     	org	2097154
  7836   200002  FF                 	db	255
  7837                           
  7838                           ;Config register IDLOC3 @ 0x200003
  7839                           ;	unspecified, using default values
  7840   200003                     	org	2097155
  7841   200003  FF                 	db	255
  7842                           
  7843                           ;Config register IDLOC4 @ 0x200004
  7844                           ;	unspecified, using default values
  7845   200004                     	org	2097156
  7846   200004  FF                 	db	255
  7847                           
  7848                           ;Config register IDLOC5 @ 0x200005
  7849                           ;	unspecified, using default values
  7850   200005                     	org	2097157
  7851   200005  FF                 	db	255
  7852                           
  7853                           ;Config register IDLOC6 @ 0x200006
  7854                           ;	unspecified, using default values
  7855   200006                     	org	2097158
  7856   200006  FF                 	db	255
  7857                           
  7858                           ;Config register IDLOC7 @ 0x200007
  7859                           ;	unspecified, using default values
  7860   200007                     	org	2097159
  7861   200007  FF                 	db	255
  7862                           
  7863                           	psect	config
  7864                           
  7865                           ; Padding undefined space
  7866   300000                     	org	3145728
  7867   300000  FF                 	db	255
  7868                           
  7869                           ;Config register CONFIG1H @ 0x300001
  7870                           ;	Oscillator Selection bits
  7871                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7872                           ;	Fail-Safe Clock Monitor Enable bit
  7873                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7874                           ;	Internal/External Oscillator Switchover bit
  7875                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7876   300001                     	org	3145729
  7877   300001  08                 	db	8
  7878                           
  7879                           ;Config register CONFIG2L @ 0x300002
  7880                           ;	Power-up Timer Enable bit
  7881                           ;	PWRT = OFF, PWRT disabled
  7882                           ;	Brown-out Reset Enable bits
  7883                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7884                           ;	Brown Out Reset Voltage bits
  7885                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7886   300002                     	org	3145730
  7887   300002  1F                 	db	31
  7888                           
  7889                           ;Config register CONFIG2H @ 0x300003
  7890                           ;	Watchdog Timer Enable bit
  7891                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7892                           ;	Watchdog Timer Postscale Select bits
  7893                           ;	WDTPS = 32768, 1:32768
  7894   300003                     	org	3145731
  7895   300003  1E                 	db	30
  7896                           
  7897                           ; Padding undefined space
  7898   300004                     	org	3145732
  7899   300004  FF                 	db	255
  7900                           
  7901                           ;Config register CONFIG3H @ 0x300005
  7902                           ;	CCP2 MUX bit
  7903                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7904                           ;	PORTB A/D Enable bit
  7905                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7906                           ;	Low-Power Timer1 Oscillator Enable bit
  7907                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7908                           ;	HFINTOSC Fast Start-up
  7909                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7910                           ;	MCLR Pin Enable bit
  7911                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7912   300005                     	org	3145733
  7913   300005  8B                 	db	139
  7914                           
  7915                           ;Config register CONFIG4L @ 0x300006
  7916                           ;	Stack Full/Underflow Reset Enable bit
  7917                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7918                           ;	Single-Supply ICSP Enable bit
  7919                           ;	LVP = OFF, Single-Supply ICSP disabled
  7920                           ;	Extended Instruction Set Enable bit
  7921                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7922                           ;	Background Debugger Enable bit
  7923                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7924   300006                     	org	3145734
  7925   300006  81                 	db	129
  7926                           
  7927                           ; Padding undefined space
  7928   300007                     	org	3145735
  7929   300007  FF                 	db	255
  7930                           
  7931                           ;Config register CONFIG5L @ 0x300008
  7932                           ;	Code Protection Block 0
  7933                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7934                           ;	Code Protection Block 1
  7935                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7936                           ;	Code Protection Block 2
  7937                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7938                           ;	Code Protection Block 3
  7939                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7940   300008                     	org	3145736
  7941   300008  0F                 	db	15
  7942                           
  7943                           ;Config register CONFIG5H @ 0x300009
  7944                           ;	Boot Block Code Protection bit
  7945                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7946                           ;	Data EEPROM Code Protection bit
  7947                           ;	CPD = OFF, Data EEPROM not code-protected
  7948   300009                     	org	3145737
  7949   300009  C0                 	db	192
  7950                           
  7951                           ;Config register CONFIG6L @ 0x30000A
  7952                           ;	Write Protection Block 0
  7953                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7954                           ;	Write Protection Block 1
  7955                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7956                           ;	Write Protection Block 2
  7957                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7958                           ;	Write Protection Block 3
  7959                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7960   30000A                     	org	3145738
  7961   30000A  0F                 	db	15
  7962                           
  7963                           ;Config register CONFIG6H @ 0x30000B
  7964                           ;	Configuration Register Write Protection bit
  7965                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7966                           ;	Boot Block Write Protection bit
  7967                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7968                           ;	Data EEPROM Write Protection bit
  7969                           ;	WRTD = OFF, Data EEPROM not write-protected
  7970   30000B                     	org	3145739
  7971   30000B  E0                 	db	224
  7972                           
  7973                           ;Config register CONFIG7L @ 0x30000C
  7974                           ;	Table Read Protection Block 0
  7975                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7976                           ;	Table Read Protection Block 1
  7977                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7978                           ;	Table Read Protection Block 2
  7979                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7980                           ;	Table Read Protection Block 3
  7981                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7982   30000C                     	org	3145740
  7983   30000C  0F                 	db	15
  7984                           
  7985                           ;Config register CONFIG7H @ 0x30000D
  7986                           ;	Boot Block Table Read Protection bit
  7987                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7988   30000D                     	org	3145741
  7989   30000D  40                 	db	64
  7990                           tosu	equ	0xFFF
  7991                           tosh	equ	0xFFE
  7992                           tosl	equ	0xFFD
  7993                           stkptr	equ	0xFFC
  7994                           pclatu	equ	0xFFB
  7995                           pclath	equ	0xFFA
  7996                           pcl	equ	0xFF9
  7997                           tblptru	equ	0xFF8
  7998                           tblptrh	equ	0xFF7
  7999                           tblptrl	equ	0xFF6
  8000                           tablat	equ	0xFF5
  8001                           prodh	equ	0xFF4
  8002                           prodl	equ	0xFF3
  8003                           indf0	equ	0xFEF
  8004                           postinc0	equ	0xFEE
  8005                           postdec0	equ	0xFED
  8006                           preinc0	equ	0xFEC
  8007                           plusw0	equ	0xFEB
  8008                           fsr0h	equ	0xFEA
  8009                           fsr0l	equ	0xFE9
  8010                           wreg	equ	0xFE8
  8011                           indf1	equ	0xFE7
  8012                           postinc1	equ	0xFE6
  8013                           postdec1	equ	0xFE5
  8014                           preinc1	equ	0xFE4
  8015                           plusw1	equ	0xFE3
  8016                           fsr1h	equ	0xFE2
  8017                           fsr1l	equ	0xFE1
  8018                           bsr	equ	0xFE0
  8019                           indf2	equ	0xFDF
  8020                           postinc2	equ	0xFDE
  8021                           postdec2	equ	0xFDD
  8022                           preinc2	equ	0xFDC
  8023                           plusw2	equ	0xFDB
  8024                           fsr2h	equ	0xFDA
  8025                           fsr2l	equ	0xFD9
  8026                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        6
    BSS         145
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      82
    BANK0           160     11     129
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2756$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2762$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2768$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2774$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2773	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2768	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2767	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2762	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2761	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2756	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2755	const PTR FTN()enum E2846 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Read_analog_input@Massiv	PTR unsigned char  size(2) Largest target is 20
		 -> Danie_ModbasRtu_analog_Output(BANK0[20]), Danie_ModbasRtu_analog_input(BANK0[20]), Read_analog_input@Danie(COMRAM[2]), 

    Reading_Discrete_Output@Massiv	PTR unsigned char  size(2) Largest target is 2
		 -> Danie_ModbasRtu_Binary_input(COMRAM[2]), Danie_ModbasRtu_Binary_Output(COMRAM[2]), 

    _Bin_input_Output@Masiv	PTR volatile unsigned char  size(2) Largest target is 2
		 -> Danie_ModbasRtu_Binary_input(COMRAM[2]), Danie_ModbasRtu_Binary_Output(COMRAM[2]), 

    crc_chk@data	PTR unsigned char  size(2) Largest target is 30
		 -> Danie_Rx_ModbasRtu(BANK0[30]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_RXC_vect(), EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_RXC_vect(), EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_TXC_vect(), EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_TXC_vect(), EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> main@red2(BANK0[3]), main@red(BANK0[3]), main@dat(BANK0[3]), I2C_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@red2(BANK0[3]), main@red(BANK0[3]), main@dat(BANK0[3]), I2C_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> main@red2(BANK0[3]), main@red(BANK0[3]), main@dat(BANK0[3]), I2C_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E2846[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(2) Largest target is 3
		 -> main@red2(BANK0[3]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 3
		 -> main@red(BANK0[3]), main@dat(BANK0[3]), 


Critical Paths under _main in COMRAM

    _modbasRtu_Slave->_modbasRtu_Answer
    _modbasRtu_Answer->_Reading_Discrete_Output
    _analog_output_recording->_Error_modbasRtu
    _Reading_Discrete_Output->_Error_modbasRtu
    _Read_analog_input->_Error_modbasRtu
    _Changing_Discrete_Output->_Error_modbasRtu
    _Error_modbasRtu->_check_sum
    _check_sum->_crc_chk
    _Data_integrity->_crc_chk
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USART_RXC_vect

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  233877
                                              0 BANK0     11    11      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                  _SYSTEM_Initialize
                    _USART_UDRE_vect
                    _modbasRtu_Slave
 ---------------------------------------------------------------------------------
 (1) _modbasRtu_Slave                                      0     0      0   12229
                     _Data_integrity
                    _Error_modbasRtu
                   _modbasRtu_Answer
 ---------------------------------------------------------------------------------
 (2) _modbasRtu_Answer                                     2     2      0   10615
                                             33 COMRAM     2     2      0
           _Changing_Discrete_Output
                    _Error_modbasRtu
                  _Read_analog_input
            _Reading_Discrete_Output
            _analog_output_recording
 ---------------------------------------------------------------------------------
 (3) _analog_output_recording                              2     2      0    1013
                                             19 COMRAM     2     2      0
                    _Error_modbasRtu
         _ModbasRtu_Register_address
 ---------------------------------------------------------------------------------
 (3) _Reading_Discrete_Output                             14    11      3    2843
                                             19 COMRAM    14    11      3
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                          _check_sum
 ---------------------------------------------------------------------------------
 (3) _Read_analog_input                                   13     9      4    2782
                                             19 COMRAM    13     9      4
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                          _check_sum
 ---------------------------------------------------------------------------------
 (3) _Changing_Discrete_Output                             2     2      0    3125
                                             19 COMRAM     2     2      0
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                  __Bin_input_Output
 ---------------------------------------------------------------------------------
 (4) __Bin_input_Output                                    9     5      4    2081
                                              6 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) _ModbasRtu_Register_address                           8     6      2      96
                                              6 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Error_modbasRtu                                      1     1      0     852
                                             18 COMRAM     1     1      0
                          _check_sum
 ---------------------------------------------------------------------------------
 (5) _check_sum                                            3     3      0     821
                                             15 COMRAM     3     3      0
                            _crc_chk
 ---------------------------------------------------------------------------------
 (2) _Data_integrity                                       4     4      0     762
                                             15 COMRAM     4     4      0
                            _crc_chk
 ---------------------------------------------------------------------------------
 (6) _crc_chk                                              9     6      3     629
                                              6 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (1) _USART_UDRE_vect                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     906
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     785
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     211
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     211
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_WriteNBytes                                      5     1      4  111264
                                             23 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_SetAddressNackCallback                           4     0      4    2259
                                             11 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWrite                                      0     0      0  106225
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (1) _I2C_ReadNBytes                                       5     1      4  108825
                                             23 COMRAM     5     1      4
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Open                                             2     2      0      68
                                              6 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterRead                                       0     0      0  106225
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOperation                                  2     2      0  106225
                                             21 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (4) _I2C_Poller                                           0     0      0  106157
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterFsm                                        2     2      0  106157
                                             19 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX_EMPTY                                      2     2      0   26516
                                             17 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX                                            2     2      0   26547
                                             17 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendTxData                                 1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX                                            2     2      0   26516
                                             17 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_ADDRESS_NACK                                  2     2      0   26516
                                             17 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    5232
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    5232
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    5263
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    5232
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    5232
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _I2C_SetDataCompleteCallback                          4     0      4    2979
                                             11 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetCallback                                      5     1      4    1117
                                              6 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _I2C_SetBuffer                                        4     0      4    2222
                                              6 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnStop                               2     0      2       0
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnReset                              2     0      2     325
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Close                                            1     1      0      37
                                              6 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0      45
                                              2 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                     _USART_RXC_vect *
                     _USART_TXC_vect *
 ---------------------------------------------------------------------------------
 (11) _USART_TXC_vect                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USART_RXC_vect                                      2     2      0      45
                                              0 COMRAM     2     2      0
                        _TMR0_Reload
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_Reload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                   _TIMER0_COMP_vect
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TIMER0_COMP_vect                                    0     0      0       0
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (13) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_SetRxInterruptHandler
   _EUSART_SetTxInterruptHandler
   _I2C_ReadNBytes
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterRead
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
             _I2C_DO_RX_NACK_STOP *
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
               _I2C_DO_SEND_RESTART_WRITE *
               _I2C_DO_SEND_STOP *
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_STOP *
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetBuffer
   _I2C_WriteNBytes
     _I2C_Close
     _I2C_MasterWrite
       _I2C_MasterOperation
     _I2C_Open
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _USART_UDRE_vect
   _modbasRtu_Slave
     _Data_integrity
       _crc_chk
     _Error_modbasRtu
       _check_sum
         _crc_chk
     _modbasRtu_Answer
       _Changing_Discrete_Output
         _Error_modbasRtu
         _ModbasRtu_Register_address
         __Bin_input_Output
       _Error_modbasRtu
       _Read_analog_input
         _Error_modbasRtu
         _ModbasRtu_Register_address
         _check_sum
       _Reading_Discrete_Output
         _Error_modbasRtu
         _ModbasRtu_Register_address
         _check_sum
       _analog_output_recording
         _Error_modbasRtu
         _ModbasRtu_Register_address

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TIMER0_COMP_vect *
       _TMR0_StopTimer
     _TMR0_DefaultInterruptHandler *
   _USART_RXC_vect *
     _TMR0_Reload
     _TMR0_StartTimer
   _USART_TXC_vect *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      81       5       80.6%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      52       1       87.2%
BITBIGSFRllllll     1C      0       0      51        0.0%
BITBIGSFRhlhh       19      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhh         C      0       0      42        0.0%
BITBIGSFRlhll        9      0       0      44        0.0%
BITBIGSFRllllh       8      0       0      49        0.0%
BITBIGSFRlhlhh       7      0       0      43        0.0%
BITBIGSFRlllhhl      6      0       0      47        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRhlll        6      0       0      41        0.0%
BITBIGSFRhllh        2      0       0      40        0.0%
BITBIGSFRllh         2      0       0      45        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      39        0.0%
BITBIGSFRlllllh      1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      28        0.0%
DATA                 0      0      D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 22 10:10:19 2022

                ?_EUSART_SetRxInterruptHandler 0007                         ??_I2C_DO_SEND_ADR_READ 0007  
                                            _D 003B                    ?_ModbasRtu_Register_address 0007  
                      ??_I2C_DO_SEND_ADR_WRITE 0008                                    _SSPSTATbits 000FC7  
                                           l90 1FEA                                             l93 1FBE  
                                           l69 1CA6                                             l78 1D42  
                                           l96 1F92                                             l99 2016  
                  Reading_Discrete_Output@Temp 001A                                _timer0ReloadVal 004C  
                        ??_I2C_DO_SEND_RESTART 0007                                            l102 1E4A  
                                          l213 18A6                                            l223 1D86  
                                          l312 19A8                                            l217 2042  
                                          l209 2190                                            l402 22E0  
                                          l306 21FE                                            l330 2298  
                                          l226 2260                                            l411 22B2  
                                          l236 20B6                                            l405 21A4  
                                          l333 2290                                            l229 2258  
                                          l245 2164                                            l342 2278  
                                          l262 2118                                            l239 217C  
                                          l351 21F2                                            l256 1A22  
                                          l408 22AC                                            l432 22CC  
                                          l272 21E6                                            l336 2288  
                                          l281 1622                                            l345 2270  
                                          l426 22EC                                            l266 1B78  
                                          l275 21D6                                            l339 2280  
                                          l435 21B8                                            l348 2268  
                                          l532 20D8                                            l429 22F4  
                                          l381 22F0                                            l365 22DC  
                                          l269 220A                                            l357 1C4C  
                                          l701 2232                                            l390 22E4  
                                          l278 15EA                                            l294 1714  
                                          l295 1782                                            l439 21C6  
                                          l368 22D8                                            l384 22D0  
                                          l632 1A96                                            l464 2092  
                                          l800 1818                                            l378 20FA  
                                          l554 2214                                            l387 22A0  
                                          l803 1F00                                            l396 22D4  
                                          l820 147C                                            l718 22C8  
                                          l486 2132                                            l399 22E8  
                                          l808 1BE6                                            l489 221E  
                                          l817 147A                                            l842 1196  
                                          l827 1B08                                            l907 1EC6  
                                          l692 223C                                            l860 21B6  
                                          l852 129E                                            l790 1F66  
                                          l695 2250                                            l863 1E0A  
                                          l689 2246                                            l857 1CFC  
                                          l698 2228                                            l874 14EE  
                                          l795 17A8                                            l875 14F0  
                                          l963 1348                                            l964 12FC  
                                          l877 155E                                            l966 136A  
                                          l799 1810                                            l968 1366  
                                          l969 1368                         ??_EUSART_RxDataHandler 0001  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 21B8  
               ?_EUSART_SetFramingErrorHandler 0007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                  main@address 00DB                   ??_I2C_SetAddressNackCallback 0010  
                     ??_I2C_CallbackReturnStop 0012                                   _I2C_DO_RESET 21E8  
                      ??_rd2RegCompleteHandler 0012                                           l4001 22DA  
                                         l4011 2200                                           l4005 22D6  
                                         l4013 2204                                           l4021 21DC  
                                         l4101 21F8                                           l4015 2208  
                                         l4023 21E4                                           l4031 21D4  
                                         l4103 21FC                                           l4009 22F2  
                                         l4113 193E                                           l4201 1DE4  
                                         l4115 1942                                           l4107 192E  
                                         l4019 21D8                                           l4027 21C8  
                                         l4043 1580                                           l4035 1560  
                                         l4131 2272                                           l4211 20FC  
                                         l4203 1DF4                                           l4109 1936  
                                         l4125 1950                                           l4029 21CC  
                                         l4061 1620                                           l4053 1590  
                                         l4133 2276                                           l4141 21F0  
                                         l4213 2100                                           l4301 2234  
                                         l4205 1DF6                                           l4221 1ECE  
                                         l4119 1948                                           l4055 15EE  
                                         l4047 1588                                           l4039 1578  
                                         l4071 16EC                                           l4215 2104  
                                         l4303 2248                                           l4207 1E06  
                                         l4231 13AE                                           l4311 1AC6  
                                         l4209 22E6                                           l4057 1600  
                                         l4073 16F2                                           l4137 21E8  
                                         l4153 1BFC                                           l4145 1BE8  
                                         l4217 2108                                           l4241 1410  
                                         l4233 13BE                                           l4225 139A  
                                         l4313 1AD8                                           l4305 1A98  
                                         l4401 125E                                           l4321 1040  
                                         l4059 161A                                           l4083 171A  
                                         l4075 170A                                           l4139 21EC  
                                         l4147 1BEC                                           l4171 17A0  
                                         l4219 1ECA                                           l4243 142E  
                                         l4235 13CE                                           l4227 13A6  
                                         l4315 1AF2                                           l4307 1AA6  
                                         l4411 1298                                           l4403 1260  
                                         l4331 1086                                           l4323 105C  
                                         l4093 172A                                           l4077 170E  
                                         l4069 16DE                                           l4149 1BF4  
                                         l4261 20E8                                           l4421 181C  
                                         l4501 2090                                           l4181 17DE  
                                         l4165 1784                                           l4253 21A8  
                                         l4237 13E0                                           l4245 1442  
                                         l4229 13AC                                           l4309 1ABC  
                                         l4405 1278                                           l4341 10FE  
                                         l4333 109C                                           l4325 1066  
                                         l4317 1022                                           l4413 1CA8  
                                         l4087 1722                                           l4159 1C04  
                                         l4191 1B0E                                           l4271 1D46  
                                         l4263 20F8                                           l4431 1838  
                                         l4423 1820                                           l4503 22C6  
                                         l4511 20C6                                           l4183 17E2  
                                         l4167 178C                                           l4255 21AC  
                                         l4247 146E                                           l4239 13F0  
                                         l4407 127A                                           l4351 112C  
                                         l4343 1100                                           l4335 10B0  
                                         l4327 1078                                           l4319 1032  
                                         l4415 1CB6                                           l4193 1B1E  
                                         l4281 1D70                                           l4273 1D4A  
                                         l4441 1850                                           l4433 183A  
                                         l4425 1830                                           l4601 1C92  
                                         l4521 1A32                                           l4505 2216  
                                         l4513 20C8                                           l4177 17B6  
                                         l4169 179C                                           l4185 17FE  
                                         l4257 21B0                                           l4249 1476  
                                         l4409 1286                                           l4345 1116  
                                         l4353 1130                                           l4337 10B6  
                                         l4361 1152                                           l4329 1084  
                                         l4417 1CD2                                           l4267 22EA  
                                         l4099 21F4                                           l4195 1B32  
                                         l4283 1D78                                           l4275 1D5A  
                                         l4259 20DA                                           l4451 1878  
                                         l4443 1858                                           l4435 183E  
                                         l4427 1834                                           l4611 1D2E  
                                         l4603 1D00                                           l4531 1A50  
                                         l4523 1A40                                           l4515 20D4  
                                         l4507 20B8                                           l4179 17D0  
                                         l4371 118E                                           l4363 1164  
                                         l4355 1144                                           l4347 111A  
                                         l4339 10E2                                           l4419 1CDC  
                                         l4269 22EE                                           l3901 20B4  
                                         l4197 1B38                                           l4189 1B0A  
                                         l4285 1D7C                                           l4277 1D5C  
                                         l4461 189C                                           l4453 1880  
                                         l4445 1860                                           l4437 1846  
                                         l4429 1836                                           l4605 1D00  
                                         l4533 1A54                                           l4525 1A44  
                                         l4517 1A24                                           l4293 220C  
                                         l4509 20C4                                           l4621 212A  
                                         l4613 211A                                           l4541 1B7A  
                                         l4381 11C6                                           l4373 1190  
                                         l4365 1174                                           l4357 114C  
                                         l4349 111C                                           l3903 22E2  
                                         l3911 1FD4                                           l4287 1D80  
                                         l4279 1D60                                           l4463 18A0  
                                         l4455 1888                                           l4447 1868  
                                         l4439 1848                                           l4607 1D16  
                                         l4471 2252                                           l4295 222A  
                                         l4535 1A60                                           l4527 1A48  
                                         l4519 1A26                                           l4623 212E  
                                         l4615 211E                                           l4631 1F60  
                                         l4551 1BBC                                           l4543 1B80  
                                         l4199 1DCC                                           l4391 11FE  
                                         l4383 11D0                                           l4375 1198  
                                         l4367 1176                                           l4481 2030  
                                         l3905 22DE                                           l3913 1FE8  
                                         l3921 1FBC                                           l4289 1D84  
                                         l4457 1890                                           l4449 1870  
                                         l4465 18A4                                           l4609 1D2A  
                                         l4297 2220                                           l4537 1A6C  
                                         l4529 1A4C                                           l4617 2122  
                                         l4633 1F64                                           l4625 1F38  
                                         l4553 1BC0                                           l4545 1B98  
                                         l4393 121C                                           l4385 11DE  
                                         l4377 119C                                           l4369 1186  
                                         l4641 1EB4                                           l4483 203C  
                                         l4475 2018                                           l3907 22AE  
                                         l4459 1898                                           l4299 223E  
                                         l4539 1A94                                           l4619 2126  
                                         l4627 1F4A                                           l4555 1BDE  
                                         l4547 1B9C                                           l4395 1236  
                                         l4387 11E6                                           l4379 11AA  
                                         l4571 14C6                                           l4563 147E  
                                         l4643 1EB8                                           l4635 1E8C  
                                         l4485 2040                                           l4477 201C  
                                         l3933 1FEC                                           l3909 1FC0  
                                         l3917 1F94                                           l3925 1F68  
                                         l3941 1E0C                                           l4901 175C  
                                         l4469 214E                                           l4493 217E  
                                         l4629 1F5A                                           l4549 1BBA  
                                         l4397 123A                                           l4389 11EE  
                                         l4573 14DE                                           l4565 1486  
                                         l4581 14FC                                           l4645 1EBC  
                                         l4637 1E9A                                           l4479 202C  
                                         l3935 2000                                           l3919 1FA8  
                                         l3927 1F7C                                           l3943 1E34  
                                         l4903 15C4                                           l4591 1C50  
                                         l4495 218E                                           l4559 1BE4  
                                         l4399 1242                                           l4575 14E6  
                                         l4567 149A                                           l4583 1558  
                                         l4639 1EAE                                           l4647 1EC2  
                                         l3937 2014                                           l3929 1F90  
                                         l3945 1E48                                           l3953 229C  
                                         l4905 1982                                           l3961 228A  
                                         l4489 225A                                           l4593 1C50  
                                         l4497 206E                                           l4585 155C  
                                         l4577 14F2                                           l4569 14AE  
                                         l3891 19F2                                           l3955 2292  
                                         l3963 228E                                           l4595 1C66  
                                         l4499 207E                                           l4771 12BE  
                                         l3893 2166                                           l3973 22CE  
                                         l3949 2192                                           l3957 2296  
                                         l3981 2266                                           l4597 1C7A  
                                         l4781 12DE                                           l4773 12C0  
                                         l3895 2094                                           l3887 19AC  
                                         l3991 22D2                                           l3967 227A  
                                         l4599 1C8E                                           l4791 1378  
                                         l4783 12EC                                           l4775 12C0  
                                         l4767 12A0                                           l3897 20A4  
                                         l3889 19BE                                           l3977 22A8  
                                         l3993 2282                                           l3969 227E  
                                         l3985 226A                                           l4793 1388  
                                         l4785 12FE                                           l4777 12C6  
                                         l4769 12BC                                           l3899 20AC  
                                         l3995 2286                                           l3987 226E  
                                         l3979 2262                                           l4795 138C  
                                         l4787 1340                                           l4779 12D2  
                                         l4789 1356                                           l3999 22CA  
                                         l4897 1512                                           l4899 1C36  
                              ?_USART_RXC_vect 0001                                           u2000 20A4  
                                         u2001 20A0                                           u2010 21A2  
                                         u2011 219C                                           u2020 1574  
                                         u2100 17FE                                           u2021 1570  
                                         u2101 17FA                                           u2110 1810  
                                         u2111 180C                                           u2016 21A4  
                                         u2040 161A                                           u2120 21C6  
                                         u2041 1616                                           u2121 21C2  
                                         u2050 170A                                           u2130 1B1E  
                                         u2051 1706                                           u2131 1B1A  
                                         u2140 1B32                                           u2204 1402  
                                         u2300 109C                                           u2141 1B2E  
                                         u2205 13FE                                           u2301 1098  
                                         _LATA 000F89                                           u2038 159E  
                                         u2230 146E                                           u2214 1422  
                                         _LATB 000F8A                                           u2039 15B2  
                                         u2231 146A                                           u2215 141E  
                                         _LATC 000F8B                                           u2160 2118  
                                         u2240 20E8                                           u2224 1454  
                                         u2400 1298                                           u2320 10E2  
                                         u2161 2114                                           u2241 20E4  
                                         u2225 1450                                           u2401 1294  
                                         u2321 10DE                                           u2250 1D5A  
                                         u2090 17B6                                           u2170 13BE  
                                         u2314 10C8                                           u2410 1CD2  
                                         u2251 1D56                                           u2091 17B2  
                                         u2171 13BA                                           u2315 10C4  
                                         u2411 1CCE                                           u2068 1738  
                                         u2260 1D70                                           u2420 1830  
                                         u2500 1F4A                                           u2180 13E0  
                                         u2340 1116                                           u2069 174A  
                                         u2261 1D6C                                           u2421 182C  
                                         u2501 1F46                                           u2181 13DC  
                                         u2341 1112                                           u2430 202C  
                                         u2078 195E                                           u2158 1B62  
                                         u2190 13F0                                           u2270 1ABC  
                                         u2350 1144                                           u2334 10F4  
                                         u2510 1E9A                                           u2431 2028  
                                         u2079 1970                                           u2159 1B74  
                                         u2191 13EC                                           u2271 1AB8  
                                         u2351 1140                                           u2335 10F0  
                                         u2511 1E96                                           u2088 1C12  
                                         u2440 1BBA                                           u2280 1AD8  
                                         u2360 1164                                           u2520 1EAE  
                                         u2089 1C24                                           u2441 1BB6  
                                         u2281 1AD4                                           u2361 1160  
                                         u2521 1EAA                                           u2450 1BDE  
                                         u2370 1174                                           u2290 105C  
                                         u2451 1BDA                                           u2371 1170  
                                         u2291 1058                                           u2460 1C66  
                                         u2380 11C6                                           u2700 1388  
                                         u2461 1C62                                           u2381 11C2  
                                         u2701 1384                                           u2470 1CA6  
                                         u2390 11FE                                           u2471 1CA2  
                                         u2391 11FA                                           u2480 1D16  
                                         u2481 1D12                                           u2490 1D42  
                                         u2650 12EC                                           u2491 1D3E  
                                         u2651 12E8                                           u2660 12FC  
                                         u2661 12F8                                           u2670 1356  
                                         u2671 1352                                           u2680 1366  
                                         u2681 1362                                           u2690 1378  
                                         u2691 1374                                           u1990 19BE  
                                         u1991 19BA                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0012                                ?_USART_TXC_vect 0001  
               Reading_Discrete_Output@Number_ 0016                                           _main 12A0  
                     ?_I2C_CallbackReturnReset 0010                                _TMR0_StartTimer 22FA  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                               __end_of_I2C_Open 18A8  
                                         btemp 0053                               ?_USART_UDRE_vect 0001  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00D0                               _modbasRtu_Answer 147E  
               Reading_Discrete_Output@address 0020                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 ___param_bank 000000                               ?_I2C_MasterClose 0001  
                      __end_of_TMR0_Initialize 20DA                                _I2C_WriteNBytes 1C4E  
               ??_TMR0_DefaultInterruptHandler 0001                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 2272                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 2220                                          ?_main 0001  
                    ??_analog_output_recording 0014                                          _ANSEL 000F7E  
                                        _T0CON 000FD5                                          i2l551 1F36  
                                        i2l535 22FC                                          i2l538 2300  
                                        i2l730 00BC                                          i2l547 22B8  
                                        i2l731 00BC                                          i2l723 003E  
                                        i2l557 2302                                          i2l726 0084  
                                        i2l663 1E88                                          i2l680 2304  
                                        i2l673 16DC                                          i2l666 1E8A  
                                        i2l683 22BE                                          i2l677 206C  
                                        i2l773 214C                                          i2l686 22C4  
                                        i2l782 192C                                          i2l785 22F8  
                                        _RCREG 000FAE                                          _RCSTA 000FAB  
                                        _TMR0H 000FD7                                          _TMR0L 000FD6  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0012  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                      ?_TMR0_SetInterruptHandler 0007  
                              __end_of_crc_chk 181A                               __end_of_TMR0_ISR 1F38  
                            __end_of_I2C_DO_RX 1784                              __end_of_I2C_DO_TX 1624  
                               _Temp_ModbasRtu 003D                       ?_Reading_Discrete_Output 0014  
                            __end_of_I2C_Close 2044                 I2C_MasterOperation@returnValue 0017  
                      _I2C_MasterEnableRestart 22E2                                          pclath 000FFA  
                                        pclatu 000FFB             Reading_Discrete_Output@Number_bits 001E  
                                        tablat 000FF5                               ?_I2C_SetCallback 0007  
                 I2C_SetAddressNackCallback@cb 000C                                          ttemp5 0054  
                                        ttemp6 0057                                          ttemp7 005B  
                                        status 000FD8                                          wtemp8 0054  
                            ?_I2C_DO_SEND_STOP 0001                 analog_output_recording@address 0014  
                           ??_I2C_DO_SEND_STOP 0007                       fp__rd1RegCompleteHandler 0000  
                              __initialization 1D88                                   __end_of_main 1398  
                     fp__wr1RegCompleteHandler 0000                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0009                                         ??_main 0024  
             __end_of_Changing_Discrete_Output 1B0A                              ?_I2C_MasterIsNack 0001  
                                __activetblptr 000003                              ?_I2C_MasterSetIrq 0001  
                           ??_I2C_MasterIsNack 0007                               ??_Data_integrity 0010  
                           ??_I2C_MasterSetIrq 0007           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 2306            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 2304  
                      __end_of_TMR0_StartTimer 22FE                     _EUSART_OverrunErrorHandler 00DF  
              __end_of_I2C_CallbackReturnReset 22DA                  I2C_SetDataCompleteCallback@cb 000C  
                                       _ANSELH 000F7F                                   ??_I2C_Poller 0016  
                                       i2l3201 2066                                         i2l2057 22FE  
                                       i2l2321 2136                                         i2l3203 206A  
                                       i2l2323 213A                                         i2l2325 2148  
                                       i2l2421 1F0C                                         i2l2319 2134  
                                       i2l2423 1F1E                                         i2l2415 1F02  
                                       i2l2431 1E6E                                         i2l2417 1F06  
                                       i2l2433 1E7E                                         i2l2425 1E4C  
                                       i2l2419 1F08                                         i2l2435 1E82  
                                       i2l2427 1E5C                                         i2l2429 1E6C  
                                       i2l3431 22BA                                         i2l3433 22C0  
                                       i2l3521 1634                                         i2l3195 2044  
                                       i2l3427 22FA                                         i2l3531 1684  
                                       i2l3523 1642                                         i2l2483 22F6  
                                       i2l3197 2054                                         i2l3429 22B4  
                                       i2l3541 18AC                                         i2l3533 169E  
                                       i2l3525 1650                                         i2l3199 2056  
                                       i2l3551 18E0                                         i2l3543 18B0  
                                       i2l3535 16BA                                         i2l3527 1668  
                                       i2l3519 1624                                         i2l3561 191A  
                                       i2l3553 18E2                                         i2l3545 18BE  
                                       i2l3537 16D8                                         i2l3529 1676  
                                       i2l3563 192A                                         i2l3555 1904  
                                       i2l3547 18CC                                         i2l3539 18A8  
                                       i2l3731 004C                                         i2l3557 1908  
                                       i2l3549 18CE                                         i2l3733 005A  
                                       i2l3725 001A                                         i2l3559 190C  
                                       i2l3735 0068                                         i2l3727 0028  
                                       i2l3737 0092                                         i2l3729 0036  
                                       i2l3739 00A0                                         _OSCCON 000FD3  
              __end_of_analog_output_recording 1CFE                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                          _I2C_MasterGetRxData 22CE                        __end_of_I2C_WriteNBytes 1CA8  
                                 ?_TMR0_Reload 0001                                  _I2C_MasterFsm 1B0A  
                          _EUSART_Transmit_ISR 1E4C                               ?_TMR0_Initialize 0001  
                                       clear_0 1DAE                                         clear_1 1DBA  
                            I2C_SetCallback@cb 0007                        fp__I2C_DO_SEND_ADR_READ 0000  
                                       isa$std 000001                                      ??_crc_chk 000A  
                                _I2C_SetBuffer 2094                             __end_of_I2C_Poller 211A  
                 __end_of_I2C_MasterDisableIrq 22EE                  Reading_Discrete_Output@Massiv 0014  
                          _I2C_DO_ADDRESS_NACK 1BE8                                   __pdataCOMRAM 004D  
              __end_of_Reading_Discrete_Output 1198                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 2166  
                   _I2C_SetAddressNackCallback 214E                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                      ??_I2C_MasterEnableRestart 0007  
     TMR0_SetInterruptHandler@InterruptHandler 0007                           ?_EUSART_Transmit_ISR 0001  
                            _SYSTEM_Initialize 211A                                     __accesstop 0060  
                      __end_of__initialization 1DC0                            _I2C_MasterOperation 1D44  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                check_sum@Adress 0012  
         __end_of_EUSART_SetTxInterruptHandler 222A                   _EUSART_SetTxInterruptHandler 2220  
                      _rdBlkRegCompleteHandler 1E0C                     fp__rdBlkRegCompleteHandler 0000  
                               __pcstackCOMRAM 0001                                 ?_I2C_MasterFsm 0001  
                              ??_I2C_DO_RX_ACK 0007                         _I2C_CallbackReturnStop 22DA  
                          ??_SYSTEM_Initialize 0009                                      ?_TMR0_ISR 0001  
                 Read_analog_input@Number_bits 001E                                 ?_I2C_SetBuffer 0007  
                      ?_I2C_MasterWaitForEvent 0001                  __end_of_I2C_DO_SEND_ADR_WRITE 21D8  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                            ??_modbasRtu_Slave 0024                          ??_I2C_MasterGetRxData 0007  
                        I2C_ReadNBytes@address 001C                                     ??_I2C_Open 0007  
                     __end_of_modbasRtu_Answer 1560                           _eusartRxStatusBuffer 0024  
                             ??_USART_RXC_vect 0001                     __end_of_I2C_MasterClearIrq 22F6  
                     _Changing_Discrete_Output 1A98                               ??_USART_TXC_vect 0001  
              ??_EUSART_SetOverrunErrorHandler 0009                               ?_TMR0_StartTimer 0001  
                    __end_of_SYSTEM_Initialize 2134                          ??_EUSART_Transmit_ISR 0001  
                            _I2C_MasterSendAck 22A8                                     __pbssBANK0 0060  
                             _TIMER0_COMP_vect 2134                                  ??_I2C_DO_IDLE 0007  
                                ??_I2C_DO_RCEN 0007                  __end_of_rd2RegCompleteHandler 1FC0  
                 __end_of_I2C_MasterSendTxData 22A2                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 22D2                                     __pnvCOMRAM 0043  
                        ??_I2C_DO_ADDRESS_NACK 0012                  __end_of_wr2RegCompleteHandler 2018  
                          _I2C_DO_RX_NACK_STOP 226A                          _rd1RegCompleteHandler 1FC0  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 22B4  
                             ?_I2C_WriteNBytes 0018                         I2C_WriteNBytes@address 001C  
                        _wr1RegCompleteHandler 1F68                            ??_I2C_MasterSendAck 0007  
                     rd1RegCompleteHandler@ptr 0010                            Read_analog_input@Vt 0017  
                ?_EUSART_SetTxInterruptHandler 0007               _EUSART_TxDefaultInterruptHandler 0047  
                  __end_of_I2C_DO_SEND_RESTART 228A                                _I2C_DO_TX_EMPTY 192E  
             __end_of_TMR0_SetInterruptHandler 2216                            I2C_SetBuffer@buffer 0007  
                                   ??_TMR0_ISR 0001                 __end_of_I2C_MasterWaitForEvent 21C8  
                          ??_I2C_MasterStartRx 0007                                        _BAUDCON 000FB8  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0016  
               I2C_SetDataCompleteCallback@ptr 000E                       ??_I2C_DO_RX_NACK_RESTART 0007  
            __end_of_I2C_DO_SEND_RESTART_WRITE 2292                           ?_I2C_DO_RX_NACK_STOP 0001  
                                _eusartRxCount 0035                        Read_analog_input@Adress 0020  
                      Read_analog_input@Massiv 0014                      __end_of_I2C_MasterSendAck 22AE  
                                      i2u54_40 1F1E                                        i2u54_41 1F1A  
                                      _OSCTUNE 000F9B                                        i2u47_40 2148  
                                      i2u47_41 2144                                        i2u55_48 1F24  
                                      i2u56_40 1E5C                                        i2u55_49 1F36  
                                      i2u56_41 1E58                                        i2u57_40 1E7E  
                                      i2u57_41 1E7A                       ??_EUSART_SetErrorHandler 0009  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                           _Bit_action_ModbasRtu 003C  
                    __end_of_I2C_MasterStartRx 22D6                              __end_of_check_sum 1E0C  
                         I2C_Close@returnValue 0007                   ?_I2C_SetDataCompleteCallback 000C  
                                    _I2C_DO_RX 16DE                                      _I2C_DO_TX 1560  
             __end_of_I2C_DO_SEND_RESTART_READ 229A                                      _I2C_Close 2018  
                    ??_rdBlkRegCompleteHandler 0012                           _I2C_MasterDisableIrq 22EA  
                              ??_I2C_MasterFsm 0014                                        __Hparam 0000  
                                      __Lparam 0000                                 _I2C_ReadNBytes 1CFE  
                          __end_of_I2C_DO_IDLE 220C                            __end_of_I2C_DO_RCEN 2200  
                              ??_I2C_SetBuffer 000B                        I2C_SetBuffer@bufferSize 0009  
                                 __psmallconst 1000                             I2C_ReadNBytes@data 0018  
                               _I2C_MasterRead 225A                                 _I2C_MasterOpen 20DA  
                                      __pcinit 1D88                                 _I2C_MasterStop 22DE  
                               _I2C_Initialize 217E                                        __ramtop 1000  
                                      _crc_chk 1784                                        __ptext0 12A0  
                                      __ptext1 1E8C                                        __ptext2 147E  
                                      __ptext3 1CA8                                        __ptext4 1022  
                                      __ptext5 1198                                        __ptext6 1A98  
                                      __ptext7 1398                                        __ptext8 1EC8  
                                      __ptext9 21A6                          ??_I2C_DO_RX_NACK_STOP 0007  
                                    _T0CONbits 000FD5                          _OSCILLATOR_Initialize 2216  
                           I2C_SetCallback@idx 000B                       ??_PIN_MANAGER_Initialize 0007  
                I2C_CallbackReturnReset@funPtr 0010                             I2C_SetCallback@ptr 0009  
                     wr1RegCompleteHandler@ptr 0010                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                                      main@dat 00D5                                        main@red 00D8  
                         end_of_initialization 1DC0                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 223E  
                _EUSART_SetOverrunErrorHandler 2234                                     ?_I2C_Close 0001  
                       ?_rd1RegCompleteHandler 0010                        __end_of_I2C_DO_TX_EMPTY 19AA  
                        ?_I2C_MasterDisableIrq 0001                         __end_of_I2C_ReadNBytes 1D44  
                            _EUSART_Initialize 1A24                         ?_wr1RegCompleteHandler 0010  
                            ??_Error_modbasRtu 0013                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                                      _RCSTAbits 000FAB  
                                      postdec1 000FE5                                        postdec2 000FDD  
                       __end_of_I2C_MasterRead 2262                         __end_of_I2C_MasterOpen 20FC  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 000FEE  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 22E2  
                       __end_of_I2C_Initialize 2192                       ?_analog_output_recording 0001  
                      __Bin_input_Output@Masiv 0008                        __Bin_input_Output@Temp1 000F  
                    fp__I2C_CallbackReturnStop 0000                            ??_EUSART_Initialize 0009  
               ??_EUSART_SetTxInterruptHandler 0009                       _TMR0_SetInterruptHandler 220C  
                                    _PORTAbits 000F80                __end_of_rdBlkRegCompleteHandler 1E4C  
                      __Bin_input_Output@state 0007                           _I2C_MasterSendTxData 229A  
                              fp__I2C_DO_RESET 0000                    ?_I2C_SetAddressNackCallback 000C  
                            _Read_analog_input 1198                             ?_Read_analog_input 0014  
                    __end_of_EUSART_Initialize 1A98                                    _I2C_DO_IDLE 2200  
                                  _I2C_DO_RCEN 21F4                     rdBlkRegCompleteHandler@ptr 0010  
                                    _TXSTAbits 000FAC                                ?_I2C_ReadNBytes 0018  
                      ?_I2C_CallbackReturnStop 0010                       _I2C_DO_SEND_RESTART_READ 2292  
                      _quantity_Data_ModbasRtu 003E                            ??_Read_analog_input 0018  
                  fp__I2C_DO_SEND_RESTART_READ 0000                                _modbasRtu_Slave 1E8C  
                               _TMR0_StopTimer 22FE                   I2C_CallbackReturnStop@funPtr 0010  
                              ?_I2C_MasterRead 0001                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 22CA                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 22D6  
                               crc_chk@reg_crc 000E                     fp__I2C_CallbackReturnReset 0000  
           __end_of_EUSART_DefaultErrorHandler 22C6                   ??_ModbasRtu_Register_address 0009  
                   _EUSART_DefaultErrorHandler 22C0                     ??_Changing_Discrete_Output 0014  
                     __end_of_TIMER0_COMP_vect 214E                                  __pidataCOMRAM 22A2  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                  ??_I2C_DO_SEND_RESTART_WRITE 0007                              ??_USART_UDRE_vect 0007  
                          start_initialization 1D88                      __end_of_Read_analog_input 12A0  
                            ?_modbasRtu_Answer 0001                                  ?_I2C_DO_RESET 0001  
              Changing_Discrete_Output@address 0014                             ??_modbasRtu_Answer 0022  
 EUSART_SetRxInterruptHandler@interruptHandler 0007   EUSART_SetTxInterruptHandler@interruptHandler 0007  
                                  ??_I2C_DO_RX 0012                                    ??_I2C_DO_TX 0012  
                            ??_I2C_MasterClose 0007                         ??_I2C_MasterDisableIrq 0007  
                                  ??_I2C_Close 0007                              ??_I2C_MasterStart 0007  
                            __Bin_input_Output 1398                              ??_I2C_MasterWrite 0018  
               __end_of_I2C_CallbackReturnStop 22DE                         _I2C_DO_RX_NACK_RESTART 2262  
                             ?_I2C_DO_TX_EMPTY 0001                             _I2C_MasterClearIrq 22F2  
                       __end_of_TMR0_StopTimer 2302                             ?__Bin_input_Output 0007  
                      _Reading_Discrete_Output 1022                 ?_EUSART_SetOverrunErrorHandler 0007  
                         Data_integrity@Temp22 0011                           Data_integrity@Temp33 0013  
                   _EUSART_FramingErrorHandler 0043                         _EUSART_SetErrorHandler 2248  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 22D2  
                 Reading_Discrete_Output@Danie 0019                            ??__Bin_input_Output 000B  
                        __end_of_I2C_DO_RX_ACK 227A                   Reading_Discrete_Output@Temp2 001B  
                 Reading_Discrete_Output@Temp3 001D                               _I2C_DO_SEND_STOP 227A  
                            ??_I2C_SetCallback 000B                             _Danie_Rx_ModbasRtu 008C  
                          I2C_Open@returnValue 0008                             _I2C_MasterSendNack 22AE  
                     ?_I2C_MasterEnableRestart 0001                              _i2c_fsmStateTable 1001  
                       fp__I2C_DO_SEND_RESTART 0000                    __end_of_EUSART_Transmit_ISR 1E8C  
                        _I2C_DO_SEND_ADR_WRITE 21C8                                    __pbssCOMRAM 0024  
                                __pcstackBANK0 00D2                                 ??_I2C_DO_RESET 0007  
                          ?_I2C_MasterSendNack 0001                       USART_RXC_vect@TempModbas 0002  
                 __end_of_I2C_DO_SEND_ADR_READ 21E8                           ??_I2C_MasterClearIrq 0007  
                  __end_of_I2C_DO_ADDRESS_NACK 1C4E                  _Danie_ModbasRtu_Binary_Output 003F  
                    __end_of__Bin_input_Output 147E                     __end_of_EUSART_Receive_ISR 16DE  
                             _I2C_MasterIsNack 2192                        __end_of_modbasRtu_Slave 1EC8  
                    _I2C_DO_SEND_RESTART_WRITE 228A               _EUSART_RxDefaultInterruptHandler 0045  
                             _I2C_MasterSetIrq 22CA                          _TMR0_InterruptHandler 0049  
                                    __pnvBANK0 00DD                                      _check_sum 1DCA  
                        _rd2RegCompleteHandler 1F94                                ?_TMR0_StopTimer 0001  
                 __end_of_EUSART_RxDataHandler 206E                         _PIN_MANAGER_Initialize 206E  
                        _wr2RegCompleteHandler 1FEC                      ??_I2C_CallbackReturnReset 0012  
                  __end_of_I2C_MasterOperation 1D88                           ??_I2C_MasterSendNack 0007  
                     rd2RegCompleteHandler@ptr 0010                                      __pintcode 0008  
                                 _eusartRxHead 0037                                   _eusartTxHead 0039  
                       Read_analog_input@Danie 001A                                   _eusartRxTail 0036  
                       ??_I2C_MasterSendTxData 0007                                   _eusartTxTail 0038  
                    __end_of_i2c_fsmStateTable 1021                   ??_INTERRUPT_InterruptManager 0003  
                         __Bin_input_Output@Sd 000A                                       ?_crc_chk 0007  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 004B                                    __smallconst 1000  
                      I2C_MasterOperation@read 0016                                       _I2C_Open 181A  
                              _Error_modbasRtu 21A6                              I2C_ReadNBytes@len 001A  
                      ??_rd1RegCompleteHandler 0012                Reading_Discrete_Output@address2 001C  
                         _INTERRUPT_Initialize 22C6                                 _eusartRxBuffer 0084  
                      ??_wr1RegCompleteHandler 0012                              ??_TMR0_Initialize 0009  
                               _eusartTxBuffer 002C                      ??_Reading_Discrete_Output 0017  
                                     _LATAbits 000F89         EUSART_SetErrorHandler@interruptHandler 0007  
                            fp__USART_RXC_vect 0000                                     ?_check_sum 0001  
                                     _PIE1bits 000F9D                              fp__USART_TXC_vect 0000  
                            _eusartRxLastError 0034                                       i2u132_40 2066  
                                     i2u132_41 2062                                       i2u160_40 16BA  
                                     i2u160_41 16B6                                       i2u162_40 18BE  
                                     i2u161_48 16C0                                       i2u162_41 18BA  
                                     i2u161_49 16D4                                       i2u163_40 18CC  
                                     i2u163_41 18C8                                       i2u164_40 18E0  
                                     i2u156_40 1642                                       i2u164_41 18DC  
                                     i2u156_41 163E                                       i2u165_40 18F2  
                   ??_TMR0_SetInterruptHandler 0009                                       i2u165_41 18EC  
                                     i2u165_46 18F4                                       i2u166_40 191A  
                                     i2u158_40 1676                                       i2u157_48 1656  
                                     i2u190_40 0092                                       i2u166_41 1916  
                                     i2u158_41 1672                                       i2u157_49 1668  
                                     i2u190_41 008E                                       i2u191_40 00A0  
                                     i2u191_41 009C                                       i2u159_48 168A  
                                     i2u184_40 0028                                       i2u159_49 169E  
                                     i2u184_41 0024                                       i2u192_48 00A6  
                                     i2u185_40 0036                                       i2u192_49 00B8  
                                     i2u185_41 0032                                       _PIR1bits 000F9E  
                                     i2u186_40 004C                                       i2u186_41 0048  
              ??_EUSART_SetFramingErrorHandler 0009                                       i2u187_40 005A  
                                     i2u187_41 0056                                       _PIR2bits 000FA1  
                                     i2u188_40 0068                                       i2u188_41 0064  
                _Danie_ModbasRtu_analog_Output 00AA                                       i2u189_48 006E  
                                     i2u189_49 0080                                  ??_TMR0_Reload 0001  
                        __end_of_I2C_MasterFsm 1B7A                                       _RCONbits 000FD0  
                     Read_analog_input@Number_ 0016                                      main@F3020 004D  
                                    main@F3018 0050                         __Bin_input_Output@Temp 000E  
                  __end_of_I2C_DO_RX_NACK_STOP 2272             __end_of_ModbasRtu_Register_address 1F02  
                   _ModbasRtu_Register_address 1EC8                                       _TMR0_ISR 1F02  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 22C0  
          ??_EUSART_DefaultOverrunErrorHandler 0001             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 22BA                __end_of_I2C_MasterEnableRestart 22E6  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
                     Read_analog_input@address 001C                          __end_of_I2C_SetBuffer 20B8  
                       ?_I2C_DO_SEND_ADR_WRITE 0001                       I2C_MasterSendTxData@data 0007  
                     wr2RegCompleteHandler@ptr 0010                                  crc_chk@length 0009  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0007  
                                    copy_data0 1D9C                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 0010                               ??_I2C_ReadNBytes 001C  
                                   _I2C_Poller 20FC                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                             ?_modbasRtu_Slave 0001                         ?_rd2RegCompleteHandler 0010  
                               _Data_integrity 1B7A                               ??_I2C_MasterRead 0018  
                        fp__EUSART_Receive_ISR 0000                            I2C_WriteNBytes@data 0018  
                             ??_I2C_MasterOpen 0007                         ?_wr2RegCompleteHandler 0010  
                             ??_I2C_MasterStop 0007                       ??_I2C_MasterWaitForEvent 0007  
                             ??_I2C_Initialize 0007                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                       __Lrparam 0000  
                         __end_of_I2C_DO_RESET 21F4                                _USART_UDRE_vect 1F38  
                      ??_OSCILLATOR_Initialize 0007                            _EUSART_ErrorHandler 00DD  
                            ??_TMR0_StartTimer 0001                           _I2C_DO_SEND_ADR_READ 21D8  
                  ?_EUSART_DefaultErrorHandler 0001                              ?_TIMER0_COMP_vect 0001  
                          __end_of_TMR0_Reload 22BA                        __end_of_Error_modbasRtu 21B8  
                           ??_TIMER0_COMP_vect 0001                                _I2C_MasterClose 22EE  
                I2C_SetAddressNackCallback@ptr 000E                   _Danie_ModbasRtu_Binary_input 0041  
                              I2C_Open@address 0007                                    check_sum@RC 0010  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 22E6  
                              _I2C_MasterWrite 2252                           _EUSART_RxDataHandler 2044  
                            ??_I2C_WriteNBytes 001C                                       __ptext10 1DCA  
                                     __ptext11 1B7A                                       __ptext20 217E  
                                     __ptext12 1784                                       __ptext21 1A24  
                                     __ptext13 1F38                                       __ptext30 1CFE  
                                     __ptext22 2220                                       __ptext14 211A  
                                     __ptext31 181A                                       __ptext23 222A  
                                     __ptext15 20B8                                       __ptext40 2262  
                                     __ptext32 20DA                                       __ptext24 2234  
                                     __ptext16 220C                                       __ptext41 226A  
                                     __ptext33 225A                                       __ptext25 223E  
                                     __ptext17 206E                                       __ptext50 21C8  
                                     __ptext42 2272                                       __ptext34 1D44  
                                     __ptext26 2248                                       __ptext18 2216  
                                     __ptext51 21D8                                       __ptext43 227A  
                                     __ptext35 20FC                                       __ptext27 1C4E  
                                     __ptext19 22C6                                       __ptext60 22D2  
                                     __ptext52 2200                                       __ptext44 2282  
                                     __ptext36 21B8                                       __ptext28 214E  
                                     __ptext61 22D6                                       __ptext53 192E  
                                     __ptext45 228A                                       __ptext37 1B0A  
                                     __ptext29 2252                                       __ptext70 2094  
                                     __ptext62 22DA                                       __ptext54 22CA  
                                     __ptext46 2292                                       __ptext38 1BE8  
                                     __ptext71 22DE                                       __ptext63 1E0C  
                                     __ptext55 2192                                       __ptext47 21F4  
                                     __ptext39 21E8                                       __ptext80 22F6  
                                     __ptext72 22E2                                       __ptext64 1F68  
                                     __ptext56 229A                                       __ptext48 16DE  
                                     __ptext81 1624                                       __ptext73 22E6  
                                     __ptext65 1F94                                       __ptext57 22A8  
                                     __ptext49 1560                                       __ptext90 2304  
                                     __ptext82 18A8                                       __ptext74 2018  
                                     __ptext66 1FC0                                       __ptext58 22CE  
                                     __ptext91 22C0                                       __ptext83 22FA  
                                     __ptext75 22EA                                       __ptext67 1FEC  
                                     __ptext59 22AE                                       __ptext92 2044  
                                     __ptext84 22B4                                       __ptext76 22EE  
                                     __ptext68 2166                                       __ptext93 0000  
                                     __ptext85 1F02                                       __ptext77 22F2  
                                     __ptext69 19AA                                       __ptext86 2302  
                                     __ptext87 2134                                       __ptext79 1E4C  
                                     __ptext88 22FE                                       __ptext89 22BA  
          __end_of_I2C_SetDataCompleteCallback 217E                    _I2C_SetDataCompleteCallback 2166  
                      ?_I2C_DO_RX_NACK_RESTART 0001                         __end_of_Data_integrity 1BE8  
                     __end_of_I2C_DO_SEND_STOP 2282                                    ??_check_sum 0010  
         __end_of_TMR0_DefaultInterruptHandler 2304                   _TMR0_DefaultInterruptHandler 2302  
                      ?_EUSART_SetErrorHandler 0007                                _I2C_SetCallback 19AA  
                ??_I2C_SetDataCompleteCallback 0010                                       crc_chk@j 000C  
EUSART_SetOverrunErrorHandler@interruptHandler 0007                                       isa$xinst 000000  
                 _Danie_ModbasRtu_analog_input 00BE                                       int$flags 0053  
                        ?_I2C_DO_SEND_ADR_READ 0001             __end_of_INTERRUPT_InterruptManager 00D0  
                   _INTERRUPT_InterruptManager 0008          __end_of_EUSART_SetFramingErrorHandler 2248  
                _EUSART_SetFramingErrorHandler 223E                                       main@bitt 00DC  
                                     main@red2 00D2                       __end_of_I2C_MasterIsNack 21A6  
                     __end_of_I2C_MasterSetIrq 22CE                                     _INTCONbits 000FF2  
                           I2C_WriteNBytes@len 001A                          ?_EUSART_RxDataHandler 0001  
                       ??_INTERRUPT_Initialize 0007                 __end_of_I2C_DO_RX_NACK_RESTART 226A  
                               _USART_UDR_vect 003A                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                      ?_Changing_Discrete_Output 0001  
                             ??_TMR0_StopTimer 0001                         fp__EUSART_Transmit_ISR 0000  
                              ?_Data_integrity 0001                                 _USART_RXC_vect 18A8  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 2252  
                      __end_of_USART_UDRE_vect 1F68                                 _USART_TXC_vect 22F6  
                          _I2C_DO_SEND_RESTART 2282                         fp__I2C_DO_ADDRESS_NACK 0000  
         __end_of_EUSART_SetRxInterruptHandler 2234                   _EUSART_SetRxInterruptHandler 222A  
              fp__TMR0_DefaultInterruptHandler 0000                  ?_TMR0_DefaultInterruptHandler 0001  
                                  _TMR0_Reload 22B4                       __Bin_input_Output@NUMBER 000D  
                           _EUSART_Receive_ISR 1624                                    crc_chk@data 0007  
EUSART_SetFramingErrorHandler@interruptHandler 0007                        __end_of_I2C_MasterClose 22F2  
                           fp__I2C_DO_TX_EMPTY 0000                        __end_of_I2C_MasterStart 22EA  
                      __end_of_I2C_MasterWrite 225A                           ?_I2C_DO_SEND_RESTART 0001  
                             ?_Error_modbasRtu 0001                            ?_EUSART_Receive_ISR 0001  
                fp__EUSART_DefaultErrorHandler 0000                                _TMR0_Initialize 20B8  
                      _analog_output_recording 1CA8                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                   ModbasRtu_Register_address@Hi 000D  
                 ModbasRtu_Register_address@Li 000E                         __end_of_USART_RXC_vect 192E  
                      __end_of_I2C_SetCallback 1A24                 __end_of_PIN_MANAGER_Initialize 2094  
                       __end_of_USART_TXC_vect 22FA                      Error_modbasRtu@Temp_Error 0013  
                __end_of_rd1RegCompleteHandler 1FEC                               fp__I2C_DO_RX_ACK 0000  
                         ??_EUSART_Receive_ISR 0001                  __end_of_wr1RegCompleteHandler 1F94  
