

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jan 31 13:46:22 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   113                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   114   000000                     
   115                           ; Version 2.35
   116                           ; Generated 05/05/2021 GMT
   117                           ; 
   118                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution. Publication is not required when
   132                           ;        this file is used in an embedded application.
   133                           ; 
   134                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   135                           ;        software without specific prior written permission.
   136                           ; 
   137                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   138                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   139                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   140                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   141                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   142                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   143                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   144                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   145                           ; 
   146                           ; 
   147                           ; Code-generator required, PIC18F26K20 Definitions
   148                           ; 
   149                           ; SFR Addresses
   150   000000                     
   151                           	psect	idataCOMRAM
   152   0022A2                     __pidataCOMRAM:
   153                           	callstack 0
   154                           
   155                           ;initializer for main@F3020
   156   0022A2  1C                 	db	28
   157   0022A3  00                 	db	0
   158   0022A4  00                 	db	0
   159                           
   160                           ;initializer for main@F3018
   161   0022A5  30                 	db	48
   162   0022A6  64                 	db	100
   163   0022A7  C0                 	db	192
   164                           
   165                           	psect	smallconst
   166   001000                     __psmallconst:
   167                           	callstack 0
   168   001000  00                 	db	0
   169   001001                     _i2c_fsmStateTable:
   170                           	callstack 0
   171   001001  00                 	db	low _I2C_DO_IDLE
   172   001002  22                 	db	high _I2C_DO_IDLE
   173   001003  D8                 	db	low _I2C_DO_SEND_ADR_READ
   174   001004  21                 	db	high _I2C_DO_SEND_ADR_READ
   175   001005  C8                 	db	low _I2C_DO_SEND_ADR_WRITE
   176   001006  21                 	db	high _I2C_DO_SEND_ADR_WRITE
   177   001007  60                 	db	low _I2C_DO_TX
   178   001008  15                 	db	high _I2C_DO_TX
   179   001009  DE                 	db	low _I2C_DO_RX
   180   00100A  16                 	db	high _I2C_DO_RX
   181   00100B  F4                 	db	low _I2C_DO_RCEN
   182   00100C  21                 	db	high _I2C_DO_RCEN
   183   00100D  2E                 	db	low _I2C_DO_TX_EMPTY
   184   00100E  19                 	db	high _I2C_DO_TX_EMPTY
   185   00100F  92                 	db	low _I2C_DO_SEND_RESTART_READ
   186   001010  22                 	db	high _I2C_DO_SEND_RESTART_READ
   187   001011  8A                 	db	low _I2C_DO_SEND_RESTART_WRITE
   188   001012  22                 	db	high _I2C_DO_SEND_RESTART_WRITE
   189   001013  82                 	db	low _I2C_DO_SEND_RESTART
   190   001014  22                 	db	high _I2C_DO_SEND_RESTART
   191   001015  7A                 	db	low _I2C_DO_SEND_STOP
   192   001016  22                 	db	high _I2C_DO_SEND_STOP
   193   001017  72                 	db	low _I2C_DO_RX_ACK
   194   001018  22                 	db	high _I2C_DO_RX_ACK
   195   001019  6A                 	db	low _I2C_DO_RX_NACK_STOP
   196   00101A  22                 	db	high _I2C_DO_RX_NACK_STOP
   197   00101B  62                 	db	low _I2C_DO_RX_NACK_RESTART
   198   00101C  22                 	db	high _I2C_DO_RX_NACK_RESTART
   199   00101D  E8                 	db	low _I2C_DO_RESET
   200   00101E  21                 	db	high _I2C_DO_RESET
   201   00101F  E8                 	db	low _I2C_DO_ADDRESS_NACK
   202   001020  1B                 	db	high _I2C_DO_ADDRESS_NACK
   203   001021                     __end_of_i2c_fsmStateTable:
   204                           	callstack 0
   205   000000                     _RCREG	set	4014
   206   000000                     _TXREG	set	4013
   207   000000                     _SPBRG	set	4015
   208   000000                     _TXSTA	set	4012
   209   001021  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           	psect	nvCOMRAM
   212   000043                     __pnvCOMRAM:
   213                           	callstack 0
   214   000043                     _EUSART_FramingErrorHandler:
   215                           	callstack 0
   216   000043                     	ds	2
   217   000045                     _EUSART_RxDefaultInterruptHandler:
   218                           	callstack 0
   219   000045                     	ds	2
   220   000047                     _EUSART_TxDefaultInterruptHandler:
   221                           	callstack 0
   222   000047                     	ds	2
   223   000049                     _TMR0_InterruptHandler:
   224                           	callstack 0
   225   000049                     	ds	2
   226   00004B                     _eusartTxBufferRemaining:
   227                           	callstack 0
   228   00004B                     	ds	1
   229   00004C                     _timer0ReloadVal:
   230                           	callstack 0
   231   00004C                     	ds	1
   232                           
   233                           	psect	nvBANK0
   234   0000DD                     __pnvBANK0:
   235                           	callstack 0
   236   0000DD                     _EUSART_ErrorHandler:
   237                           	callstack 0
   238   0000DD                     	ds	2
   239   0000DF                     _EUSART_OverrunErrorHandler:
   240                           	callstack 0
   241   0000DF                     	ds	2
   242   000000                     _LATAbits	set	3977
   243   000000                     _RCSTAbits	set	4011
   244   000000                     _TXSTAbits	set	4012
   245   000000                     _T0CONbits	set	4053
   246   000000                     _SSPSTATbits	set	4039
   247   000000                     _SSPCON2bits	set	4037
   248   000000                     _SSPCON1bits	set	4038
   249   000000                     _WPUB	set	3964
   250   000000                     _ANSEL	set	3966
   251   000000                     _LATA	set	3977
   252   000000                     _PIE1bits	set	3997
   253   000000                     _PIR2bits	set	4001
   254   000000                     _SSPCON2	set	4037
   255   000000                     _SSPCON1	set	4038
   256   000000                     _SSPSTAT	set	4039
   257   000000                     _RCONbits	set	4048
   258   000000                     _OSCCON	set	4051
   259   000000                     _INTCON2bits	set	4081
   260   000000                     _SSPBUF	set	4041
   261   000000                     _SSPADD	set	4040
   262   000000                     _RCSTA	set	4011
   263   000000                     _BAUDCON	set	4024
   264   000000                     _PIR1bits	set	3998
   265   000000                     _TRISA	set	3986
   266   000000                     _LATC	set	3979
   267   000000                     _LATB	set	3978
   268   000000                     _OSCTUNE	set	3995
   269   000000                     _TRISC	set	3988
   270   000000                     _TRISB	set	3987
   271   000000                     _PORTAbits	set	3968
   272   000000                     _ANSELH	set	3967
   273   000000                     _INTCONbits	set	4082
   274   000000                     _T0CON	set	4053
   275   000000                     _TMR0L	set	4054
   276   000000                     _TMR0H	set	4055
   277   000000                     _SPBRGH	set	4016
   278                           
   279                           ; #config settings
   280                           
   281                           	psect	cinit
   282   001D88                     __pcinit:
   283                           	callstack 0
   284   001D88                     start_initialization:
   285                           	callstack 0
   286   001D88                     __initialization:
   287                           	callstack 0
   288                           
   289                           ; Initialize objects allocated to COMRAM (6 bytes)
   290                           ; load TBLPTR registers with __pidataCOMRAM
   291   001D88  0EA2               	movlw	low __pidataCOMRAM
   292   001D8A  6EF6               	movwf	tblptrl,c
   293   001D8C  0E22               	movlw	high __pidataCOMRAM
   294   001D8E  6EF7               	movwf	tblptrh,c
   295   001D90  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   296   001D92  6EF8               	movwf	tblptru,c
   297   001D94  EE00  F04D         	lfsr	0,__pdataCOMRAM
   298   001D98  EE10 F006          	lfsr	1,6
   299   001D9C                     copy_data0:
   300   001D9C  0009               	tblrd		*+
   301   001D9E  CFF5 FFEE          	movff	tablat,postinc0
   302   001DA2  50E5               	movf	postdec1,w,c
   303   001DA4  50E1               	movf	fsr1l,w,c
   304   001DA6  E1FA               	bnz	copy_data0
   305                           
   306                           ; Clear objects allocated to BANK0 (114 bytes)
   307   001DA8  EE00  F060         	lfsr	0,__pbssBANK0
   308   001DAC  0E72               	movlw	114
   309   001DAE                     clear_0:
   310   001DAE  6AEE               	clrf	postinc0,c
   311   001DB0  06E8               	decf	wreg,f,c
   312   001DB2  E1FD               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to COMRAM (31 bytes)
   315   001DB4  EE00  F024         	lfsr	0,__pbssCOMRAM
   316   001DB8  0E1F               	movlw	31
   317   001DBA                     clear_1:
   318   001DBA  6AEE               	clrf	postinc0,c
   319   001DBC  06E8               	decf	wreg,f,c
   320   001DBE  E1FD               	bnz	clear_1
   321   001DC0                     end_of_initialization:
   322                           	callstack 0
   323   001DC0                     __end_of__initialization:
   324                           	callstack 0
   325   001DC0  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326   001DC2  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327   001DC4  0100               	movlb	0
   328   001DC6  EF50  F009         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331   000024                     __pbssCOMRAM:
   332                           	callstack 0
   333   000024                     _eusartRxStatusBuffer:
   334                           	callstack 0
   335   000024                     	ds	8
   336   00002C                     _eusartTxBuffer:
   337                           	callstack 0
   338   00002C                     	ds	8
   339   000034                     _eusartRxLastError:
   340                           	callstack 0
   341   000034                     	ds	1
   342   000035                     _eusartRxCount:
   343                           	callstack 0
   344   000035                     	ds	1
   345   000036                     _eusartRxTail:
   346                           	callstack 0
   347   000036                     	ds	1
   348   000037                     _eusartRxHead:
   349                           	callstack 0
   350   000037                     	ds	1
   351   000038                     _eusartTxTail:
   352                           	callstack 0
   353   000038                     	ds	1
   354   000039                     _eusartTxHead:
   355                           	callstack 0
   356   000039                     	ds	1
   357   00003A                     _USART_UDR_vect:
   358                           	callstack 0
   359   00003A                     	ds	1
   360   00003B                     _D:
   361                           	callstack 0
   362   00003B                     	ds	1
   363   00003C                     _Bit_action_ModbasRtu:
   364                           	callstack 0
   365   00003C                     	ds	1
   366   00003D                     _Temp_ModbasRtu:
   367                           	callstack 0
   368   00003D                     	ds	1
   369   00003E                     _quantity_Data_ModbasRtu:
   370                           	callstack 0
   371   00003E                     	ds	1
   372   00003F                     _Danie_ModbasRtu_Binary_Output:
   373                           	callstack 0
   374   00003F                     	ds	2
   375   000041                     _Danie_ModbasRtu_Binary_input:
   376                           	callstack 0
   377   000041                     	ds	2
   378                           
   379                           	psect	dataCOMRAM
   380   00004D                     __pdataCOMRAM:
   381                           	callstack 0
   382   00004D                     main@F3020:
   383                           	callstack 0
   384   00004D                     	ds	3
   385   000050                     main@F3018:
   386                           	callstack 0
   387   000050                     	ds	3
   388                           
   389                           	psect	bssBANK0
   390   000060                     __pbssBANK0:
   391                           	callstack 0
   392   000060                     _I2C_Status:
   393                           	callstack 0
   394   000060                     	ds	36
   395   000084                     _eusartRxBuffer:
   396                           	callstack 0
   397   000084                     	ds	8
   398   00008C                     _Danie_Rx_ModbasRtu:
   399                           	callstack 0
   400   00008C                     	ds	30
   401   0000AA                     _Danie_ModbasRtu_analog_Output:
   402                           	callstack 0
   403   0000AA                     	ds	20
   404   0000BE                     _Danie_ModbasRtu_analog_input:
   405                           	callstack 0
   406   0000BE                     	ds	20
   407                           
   408                           	psect	cstackBANK0
   409   0000D2                     __pcstackBANK0:
   410                           	callstack 0
   411   0000D2                     main@red2:
   412                           	callstack 0
   413                           
   414                           ; 3 bytes @ 0x0
   415   0000D2                     	ds	3
   416   0000D5                     main@dat:
   417                           	callstack 0
   418                           
   419                           ; 3 bytes @ 0x3
   420   0000D5                     	ds	3
   421   0000D8                     main@red:
   422                           	callstack 0
   423                           
   424                           ; 3 bytes @ 0x6
   425   0000D8                     	ds	3
   426   0000DB                     main@address:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x9
   430   0000DB                     	ds	1
   431   0000DC                     main@bitt:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0xA
   435   0000DC                     	ds	1
   436                           
   437                           	psect	cstackCOMRAM
   438   000001                     __pcstackCOMRAM:
   439                           	callstack 0
   440   000001                     ??_USART_RXC_vect:
   441   000001                     
   442                           ; 1 bytes @ 0x0
   443   000001                     	ds	1
   444   000002                     USART_RXC_vect@TempModbas:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x1
   448   000002                     	ds	1
   449   000003                     ??_INTERRUPT_InterruptManager:
   450                           
   451                           ; 1 bytes @ 0x2
   452   000003                     	ds	4
   453   000007                     ?_crc_chk:
   454                           	callstack 0
   455   000007                     ?_ModbasRtu_Register_address:
   456                           	callstack 0
   457   000007                     I2C_Open@address:
   458                           	callstack 0
   459   000007                     I2C_Close@returnValue:
   460                           	callstack 0
   461   000007                     I2C_MasterSendTxData@data:
   462                           	callstack 0
   463   000007                     __Bin_input_Output@state:
   464                           	callstack 0
   465   000007                     I2C_SetBuffer@buffer:
   466                           	callstack 0
   467   000007                     I2C_SetCallback@cb:
   468                           	callstack 0
   469   000007                     TMR0_SetInterruptHandler@InterruptHandler:
   470                           	callstack 0
   471   000007                     EUSART_SetFramingErrorHandler@interruptHandler:
   472                           	callstack 0
   473   000007                     EUSART_SetOverrunErrorHandler@interruptHandler:
   474                           	callstack 0
   475   000007                     EUSART_SetErrorHandler@interruptHandler:
   476                           	callstack 0
   477   000007                     EUSART_SetTxInterruptHandler@interruptHandler:
   478                           	callstack 0
   479   000007                     EUSART_SetRxInterruptHandler@interruptHandler:
   480                           	callstack 0
   481   000007                     crc_chk@data:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x6
   485   000007                     	ds	1
   486   000008                     I2C_Open@returnValue:
   487                           	callstack 0
   488   000008                     __Bin_input_Output@Masiv:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x7
   492   000008                     	ds	1
   493   000009                     ??_ModbasRtu_Register_address:
   494   000009                     crc_chk@length:
   495                           	callstack 0
   496   000009                     I2C_SetBuffer@bufferSize:
   497                           	callstack 0
   498   000009                     I2C_SetCallback@ptr:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x8
   502   000009                     	ds	1
   503   00000A                     ??_crc_chk:
   504   00000A                     __Bin_input_Output@Sd:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x9
   508   00000A                     	ds	1
   509   00000B                     ??__Bin_input_Output:
   510   00000B                     I2C_SetCallback@idx:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0xA
   514   00000B                     	ds	1
   515   00000C                     I2C_SetDataCompleteCallback@cb:
   516                           	callstack 0
   517   00000C                     I2C_SetAddressNackCallback@cb:
   518                           	callstack 0
   519   00000C                     crc_chk@j:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xB
   523   00000C                     	ds	1
   524   00000D                     ModbasRtu_Register_address@Hi:
   525                           	callstack 0
   526   00000D                     __Bin_input_Output@NUMBER:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0xC
   530   00000D                     	ds	1
   531   00000E                     ModbasRtu_Register_address@Li:
   532                           	callstack 0
   533   00000E                     __Bin_input_Output@Temp:
   534                           	callstack 0
   535   00000E                     I2C_SetDataCompleteCallback@ptr:
   536                           	callstack 0
   537   00000E                     I2C_SetAddressNackCallback@ptr:
   538                           	callstack 0
   539   00000E                     crc_chk@reg_crc:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xD
   543   00000E                     	ds	1
   544   00000F                     __Bin_input_Output@Temp1:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0xE
   548   00000F                     	ds	1
   549   000010                     rd1RegCompleteHandler@ptr:
   550                           	callstack 0
   551   000010                     rd2RegCompleteHandler@ptr:
   552                           	callstack 0
   553   000010                     wr1RegCompleteHandler@ptr:
   554                           	callstack 0
   555   000010                     wr2RegCompleteHandler@ptr:
   556                           	callstack 0
   557   000010                     rdBlkRegCompleteHandler@ptr:
   558                           	callstack 0
   559   000010                     I2C_CallbackReturnReset@funPtr:
   560                           	callstack 0
   561   000010                     check_sum@RC:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0xF
   565   000010                     	ds	1
   566   000011                     Data_integrity@Temp22:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x10
   570   000011                     	ds	1
   571   000012                     ??_I2C_DO_TX:
   572   000012                     ??_I2C_DO_RX:
   573   000012                     ??_I2C_DO_TX_EMPTY:
   574   000012                     ??_I2C_DO_ADDRESS_NACK:
   575   000012                     check_sum@Adress:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x11
   579   000012                     	ds	1
   580   000013                     Data_integrity@Temp33:
   581                           	callstack 0
   582   000013                     Error_modbasRtu@Temp_Error:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x12
   586   000013                     	ds	1
   587   000014                     ??_I2C_MasterFsm:
   588   000014                     Changing_Discrete_Output@address:
   589                           	callstack 0
   590   000014                     Reading_Discrete_Output@Massiv:
   591                           	callstack 0
   592   000014                     Read_analog_input@Massiv:
   593                           	callstack 0
   594   000014                     analog_output_recording@address:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x13
   598   000014                     	ds	2
   599   000016                     I2C_MasterOperation@read:
   600                           	callstack 0
   601   000016                     Reading_Discrete_Output@Number_:
   602                           	callstack 0
   603   000016                     Read_analog_input@Number_:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x15
   607   000016                     	ds	1
   608   000017                     ??_Reading_Discrete_Output:
   609   000017                     I2C_MasterOperation@returnValue:
   610                           	callstack 0
   611   000017                     Read_analog_input@Vt:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x16
   615   000017                     	ds	1
   616   000018                     ??_Read_analog_input:
   617   000018                     I2C_WriteNBytes@data:
   618                           	callstack 0
   619   000018                     I2C_ReadNBytes@data:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x17
   623   000018                     	ds	1
   624   000019                     Reading_Discrete_Output@Danie:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x18
   628   000019                     	ds	1
   629   00001A                     Reading_Discrete_Output@Temp:
   630                           	callstack 0
   631   00001A                     I2C_WriteNBytes@len:
   632                           	callstack 0
   633   00001A                     I2C_ReadNBytes@len:
   634                           	callstack 0
   635   00001A                     Read_analog_input@Danie:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x19
   639   00001A                     	ds	1
   640   00001B                     Reading_Discrete_Output@Temp2:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x1A
   644   00001B                     	ds	1
   645   00001C                     I2C_WriteNBytes@address:
   646                           	callstack 0
   647   00001C                     I2C_ReadNBytes@address:
   648                           	callstack 0
   649   00001C                     Reading_Discrete_Output@address2:
   650                           	callstack 0
   651   00001C                     Read_analog_input@address:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1B
   655   00001C                     	ds	1
   656   00001D                     Reading_Discrete_Output@Temp3:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x1C
   660   00001D                     	ds	1
   661   00001E                     Reading_Discrete_Output@Number_bits:
   662                           	callstack 0
   663   00001E                     Read_analog_input@Number_bits:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x1D
   667   00001E                     	ds	2
   668   000020                     Read_analog_input@Adress:
   669                           	callstack 0
   670   000020                     Reading_Discrete_Output@address:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x1F
   674   000020                     	ds	2
   675   000022                     ??_modbasRtu_Answer:
   676                           
   677                           ; 1 bytes @ 0x21
   678   000022                     	ds	2
   679   000024                     
   680                           ; 1 bytes @ 0x23
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 59 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  red             3    6[BANK0 ] unsigned char [3]
   691 ;;  dat             3    3[BANK0 ] unsigned char [3]
   692 ;;  red2            3    0[BANK0 ] unsigned char [3]
   693 ;;  bitt            1   10[BANK0 ] struct .
   694 ;;  address         1    9[BANK0 ] unsigned char 
   695 ;;  toggle          1    0        unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;Total ram usage:       11 bytes
   710 ;; Hardware stack levels required when called: 13
   711 ;; This function calls:
   712 ;;		_EUSART_SetRxInterruptHandler
   713 ;;		_EUSART_SetTxInterruptHandler
   714 ;;		_I2C_ReadNBytes
   715 ;;		_I2C_WriteNBytes
   716 ;;		_SYSTEM_Initialize
   717 ;;		_USART_UDRE_vect
   718 ;;		_modbasRtu_Slave
   719 ;; This function is called by:
   720 ;;		Startup code after reset
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text0
   725   0012A0                     __ptext0:
   726                           	callstack 0
   727   0012A0                     _main:
   728                           	callstack 18
   729   0012A0                     
   730                           ;main.c: 62:     SYSTEM_Initialize();
   731   0012A0  EC8D  F010         	call	_SYSTEM_Initialize	;wreg free
   732                           
   733                           ;main.c: 64:    EUSART_SetRxInterruptHandler(USART_RXC_vect);
   734   0012A4  0EA8               	movlw	low _USART_RXC_vect
   735   0012A6  6E07               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
   736   0012A8  0E18               	movlw	high _USART_RXC_vect
   737   0012AA  6E08               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
   738   0012AC  EC15  F011         	call	_EUSART_SetRxInterruptHandler	;wreg free
   739                           
   740                           ;main.c: 65:    EUSART_SetTxInterruptHandler(USART_TXC_vect);
   741   0012B0  0EF6               	movlw	low _USART_TXC_vect
   742   0012B2  6E07               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
   743   0012B4  0E22               	movlw	high _USART_TXC_vect
   744   0012B6  6E08               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
   745   0012B8  EC10  F011         	call	_EUSART_SetTxInterruptHandler	;wreg free
   746   0012BC                     
   747                           ;main.c: 71:    (INTCONbits.GIE = 1);
   748   0012BC  8EF2               	bsf	242,7,c	;volatile
   749   0012BE                     
   750                           ;main.c: 77:    (INTCONbits.PEIE = 1);
   751   0012BE  8CF2               	bsf	242,6,c	;volatile
   752   0012C0                     
   753                           ;main.c: 85:    uint8_t address = (0XE6)>>1;
   754   0012C0  0E73               	movlw	115
   755   0012C2  0100               	movlb	0	; () banked
   756   0012C4  6FDB               	movwf	main@address& (0+255),b
   757   0012C6                     
   758                           ; BSR set to: 0
   759                           ;main.c: 86:    uint8_t dat[3]={0X30,0X64,0XC0};
   760   0012C6  C050  F0D5         	movff	main@F3018,main@dat
   761   0012CA  C051  F0D6         	movff	main@F3018+1,main@dat+1
   762   0012CE  C052  F0D7         	movff	main@F3018+2,main@dat+2
   763   0012D2                     
   764                           ; BSR set to: 0
   765                           ;main.c: 87:    uint8_t red[3]={0x1C};
   766   0012D2  C04D  F0D8         	movff	main@F3020,main@red
   767   0012D6  C04E  F0D9         	movff	main@F3020+1,main@red+1
   768   0012DA  C04F  F0DA         	movff	main@F3020+2,main@red+2
   769   0012DE                     l4781:
   770                           
   771                           ;main.c: 92:     {;main.c: 95:          if(PORTAbits.RA2 && !bitt.b0 )
   772   0012DE  A480               	btfss	128,2,c	;volatile
   773   0012E0  EF74  F009         	goto	u2651
   774   0012E4  EF76  F009         	goto	u2650
   775   0012E8                     u2651:
   776   0012E8  EFA4  F009         	goto	l963
   777   0012EC                     u2650:
   778   0012EC  0100               	movlb	0	; () banked
   779   0012EE  B1DC               	btfsc	main@bitt& (0+255),0,b
   780   0012F0  EF7C  F009         	goto	u2661
   781   0012F4  EF7E  F009         	goto	u2660
   782   0012F8                     u2661:
   783   0012F8  EFA4  F009         	goto	l963
   784   0012FC                     u2660:
   785   0012FC                     
   786                           ; BSR set to: 0
   787   0012FC  8089               	bsf	137,0,c	;volatile
   788   0012FE                     
   789                           ; BSR set to: 0
   790                           ;main.c: 101:               I2C_WriteNBytes(address,dat,3);
   791   0012FE  0ED5               	movlw	low main@dat
   792   001300  6E18               	movwf	I2C_WriteNBytes@data^0,c
   793   001302  0E00               	movlw	high main@dat
   794   001304  6E19               	movwf	(I2C_WriteNBytes@data+1)^0,c
   795   001306  0E00               	movlw	0
   796   001308  6E1B               	movwf	(I2C_WriteNBytes@len+1)^0,c
   797   00130A  0E03               	movlw	3
   798   00130C  6E1A               	movwf	I2C_WriteNBytes@len^0,c
   799   00130E  51DB               	movf	main@address& (0+255),w,b
   800   001310  EC27  F00E         	call	_I2C_WriteNBytes
   801                           
   802                           ;main.c: 103:               I2C_WriteNBytes((0xD0)>>1,red,1);
   803   001314  0ED8               	movlw	low main@red
   804   001316  6E18               	movwf	I2C_WriteNBytes@data^0,c
   805   001318  0E00               	movlw	high main@red
   806   00131A  6E19               	movwf	(I2C_WriteNBytes@data+1)^0,c
   807   00131C  0E00               	movlw	0
   808   00131E  6E1B               	movwf	(I2C_WriteNBytes@len+1)^0,c
   809   001320  0E01               	movlw	1
   810   001322  6E1A               	movwf	I2C_WriteNBytes@len^0,c
   811   001324  0E68               	movlw	104
   812   001326  EC27  F00E         	call	_I2C_WriteNBytes
   813                           
   814                           ;main.c: 105:               I2C_ReadNBytes((0xD1)>>1, red2 , 3);
   815   00132A  0ED2               	movlw	low main@red2
   816   00132C  6E18               	movwf	I2C_ReadNBytes@data^0,c
   817   00132E  0E00               	movlw	high main@red2
   818   001330  6E19               	movwf	(I2C_ReadNBytes@data+1)^0,c
   819   001332  0E00               	movlw	0
   820   001334  6E1B               	movwf	(I2C_ReadNBytes@len+1)^0,c
   821   001336  0E03               	movlw	3
   822   001338  6E1A               	movwf	I2C_ReadNBytes@len^0,c
   823   00133A  0E68               	movlw	104
   824   00133C  EC7F  F00E         	call	_I2C_ReadNBytes
   825   001340                     
   826                           ;main.c: 107:               bitt.b0=1;
   827   001340  0100               	movlb	0	; () banked
   828   001342  81DC               	bsf	main@bitt& (0+255),0,b
   829                           
   830                           ;main.c: 109:          }
   831   001344  EFB5  F009         	goto	l966
   832   001348                     l963:
   833   001348  B480               	btfsc	128,2,c	;volatile
   834   00134A  EFA9  F009         	goto	u2671
   835   00134E  EFAB  F009         	goto	u2670
   836   001352                     u2671:
   837   001352  EFB5  F009         	goto	l966
   838   001356                     u2670:
   839   001356  0100               	movlb	0	; () banked
   840   001358  A1DC               	btfss	main@bitt& (0+255),0,b
   841   00135A  EFB1  F009         	goto	u2681
   842   00135E  EFB3  F009         	goto	u2680
   843   001362                     u2681:
   844   001362  EFB5  F009         	goto	l966
   845   001366                     u2680:
   846   001366                     
   847                           ; BSR set to: 0
   848   001366  9089               	bcf	137,0,c	;volatile
   849   001368                     
   850                           ; BSR set to: 0
   851                           ;main.c: 113:              bitt.b0=0;
   852   001368  91DC               	bcf	main@bitt& (0+255),0,b
   853   00136A                     l966:
   854                           
   855                           ;main.c: 115:          if(TXSTAbits.TRMT && USART_UDR_vect)
   856   00136A  A2AC               	btfss	172,1,c	;volatile
   857   00136C  EFBA  F009         	goto	u2691
   858   001370  EFBC  F009         	goto	u2690
   859   001374                     u2691:
   860   001374  EFC6  F009         	goto	l4795
   861   001378                     u2690:
   862   001378  503A               	movf	_USART_UDR_vect^0,w,c
   863   00137A  B4D8               	btfsc	status,2,c
   864   00137C  EFC2  F009         	goto	u2701
   865   001380  EFC4  F009         	goto	u2700
   866   001384                     u2701:
   867   001384  EFC6  F009         	goto	l4795
   868   001388                     u2700:
   869   001388                     
   870                           ;main.c: 116:          {;main.c: 117:              USART_UDRE_vect ();
   871   001388  EC9C  F00F         	call	_USART_UDRE_vect	;wreg free
   872   00138C                     l4795:
   873                           
   874                           ;main.c: 120:            modbasRtu_Slave();
   875   00138C  EC46  F00F         	call	_modbasRtu_Slave	;wreg free
   876   001390  EF6F  F009         	goto	l4781
   877   001394  EF68  F000         	goto	start
   878   001398                     __end_of_main:
   879                           	callstack 0
   880                           
   881 ;; *************** function _modbasRtu_Slave *****************
   882 ;; Defined at:
   883 ;;		line 428 in file "Modbas_RTU.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; Hardware stack levels required when called: 9
   904 ;; This function calls:
   905 ;;		_Data_integrity
   906 ;;		_Error_modbasRtu
   907 ;;		_modbasRtu_Answer
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text1
   914   001E8C                     __ptext1:
   915                           	callstack 0
   916   001E8C                     _modbasRtu_Slave:
   917                           	callstack 21
   918   001E8C                     
   919                           ;Modbas_RTU.c: 430:     if (Bit_action_ModbasRtu.b2)
   920   001E8C  A43C               	btfss	_Bit_action_ModbasRtu^0,2,c
   921   001E8E  EF4B  F00F         	goto	u2511
   922   001E92  EF4D  F00F         	goto	u2510
   923   001E96                     u2511:
   924   001E96  EF63  F00F         	goto	l907
   925   001E9A                     u2510:
   926   001E9A                     
   927                           ;Modbas_RTU.c: 431:     {;Modbas_RTU.c: 432:      if ( Data_integrity() == 0 )
   928   001E9A  ECBD  F00D         	call	_Data_integrity	;wreg free
   929   001E9E  0900               	iorlw	0
   930   001EA0  A4D8               	btfss	status,2,c
   931   001EA2  EF55  F00F         	goto	u2521
   932   001EA6  EF57  F00F         	goto	u2520
   933   001EAA                     u2521:
   934   001EAA  EF61  F00F         	goto	l4647
   935   001EAE                     u2520:
   936   001EAE                     
   937                           ;Modbas_RTU.c: 433:      {;Modbas_RTU.c: 436:       Error_modbasRtu (0x04);
   938   001EAE  0E04               	movlw	4
   939   001EB0  ECD3  F010         	call	_Error_modbasRtu
   940   001EB4                     
   941                           ;Modbas_RTU.c: 437:       USART_UDR_vect=1;
   942   001EB4  0E01               	movlw	1
   943   001EB6  6E3A               	movwf	_USART_UDR_vect^0,c
   944   001EB8                     
   945                           ;Modbas_RTU.c: 438:             Temp_ModbasRtu = 0;
   946   001EB8  0E00               	movlw	0
   947   001EBA  6E3D               	movwf	_Temp_ModbasRtu^0,c
   948   001EBC                     
   949                           ;Modbas_RTU.c: 439:             Bit_action_ModbasRtu.b2 = 0;
   950   001EBC  943C               	bcf	_Bit_action_ModbasRtu^0,2,c
   951                           
   952                           ;Modbas_RTU.c: 441:      }
   953   001EBE  EF63  F00F         	goto	l907
   954   001EC2                     l4647:
   955                           
   956                           ;Modbas_RTU.c: 443:      {;Modbas_RTU.c: 444:       modbasRtu_Answer( );
   957   001EC2  EC3F  F00A         	call	_modbasRtu_Answer	;wreg free
   958   001EC6                     l907:
   959   001EC6  0012               	return		;funcret
   960   001EC8                     __end_of_modbasRtu_Slave:
   961                           	callstack 0
   962                           
   963 ;; *************** function _modbasRtu_Answer *****************
   964 ;; Defined at:
   965 ;;		line 351 in file "Modbas_RTU.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;Total ram usage:        2 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 8
   986 ;; This function calls:
   987 ;;		_Changing_Discrete_Output
   988 ;;		_Error_modbasRtu
   989 ;;		_Read_analog_input
   990 ;;		_Reading_Discrete_Output
   991 ;;		_analog_output_recording
   992 ;; This function is called by:
   993 ;;		_modbasRtu_Slave
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text2
   998   00147E                     __ptext2:
   999                           	callstack 0
  1000   00147E                     _modbasRtu_Answer:
  1001                           	callstack 21
  1002   00147E                     
  1003                           ;Modbas_RTU.c: 353:    Temp_ModbasRtu = 0;
  1004   00147E  0E00               	movlw	0
  1005   001480  6E3D               	movwf	_Temp_ModbasRtu^0,c
  1006                           
  1007                           ;Modbas_RTU.c: 354:    switch (Danie_Rx_ModbasRtu[1])
  1008   001482  EF7E  F00A         	goto	l4581
  1009   001486                     l4565:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;Modbas_RTU.c: 357:            Reading_Discrete_Output(Danie_ModbasRtu_Binary_Output,10)
      +                          ;
  1013   001486  0E3F               	movlw	low _Danie_ModbasRtu_Binary_Output
  1014   001488  6E14               	movwf	Reading_Discrete_Output@Massiv^0,c
  1015   00148A  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  1016   00148C  6E15               	movwf	(Reading_Discrete_Output@Massiv+1)^0,c
  1017   00148E  0E0A               	movlw	10
  1018   001490  6E16               	movwf	Reading_Discrete_Output@Number_^0,c
  1019   001492  EC11  F008         	call	_Reading_Discrete_Output	;wreg free
  1020                           
  1021                           ;Modbas_RTU.c: 358:            break;
  1022   001496  EFAC  F00A         	goto	l4583
  1023   00149A                     l4567:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;Modbas_RTU.c: 360:            Reading_Discrete_Output(Danie_ModbasRtu_Binary_input,10);
  1027   00149A  0E41               	movlw	low _Danie_ModbasRtu_Binary_input
  1028   00149C  6E14               	movwf	Reading_Discrete_Output@Massiv^0,c
  1029   00149E  0E00               	movlw	high _Danie_ModbasRtu_Binary_input
  1030   0014A0  6E15               	movwf	(Reading_Discrete_Output@Massiv+1)^0,c
  1031   0014A2  0E0A               	movlw	10
  1032   0014A4  6E16               	movwf	Reading_Discrete_Output@Number_^0,c
  1033   0014A6  EC11  F008         	call	_Reading_Discrete_Output	;wreg free
  1034                           
  1035                           ;Modbas_RTU.c: 361:            break;
  1036   0014AA  EFAC  F00A         	goto	l4583
  1037   0014AE                     l4569:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;Modbas_RTU.c: 363:            Read_analog_input( Danie_ModbasRtu_analog_Output,10,0);
  1041   0014AE  0EAA               	movlw	low _Danie_ModbasRtu_analog_Output
  1042   0014B0  6E14               	movwf	Read_analog_input@Massiv^0,c
  1043   0014B2  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  1044   0014B4  6E15               	movwf	(Read_analog_input@Massiv+1)^0,c
  1045   0014B6  0E0A               	movlw	10
  1046   0014B8  6E16               	movwf	Read_analog_input@Number_^0,c
  1047   0014BA  0E00               	movlw	0
  1048   0014BC  6E17               	movwf	Read_analog_input@Vt^0,c
  1049   0014BE  ECCC  F008         	call	_Read_analog_input	;wreg free
  1050                           
  1051                           ;Modbas_RTU.c: 364:     break;
  1052   0014C2  EFAC  F00A         	goto	l4583
  1053   0014C6                     l4571:
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;Modbas_RTU.c: 366:            Read_analog_input(Danie_ModbasRtu_analog_input,10,1);
  1057   0014C6  0EBE               	movlw	low _Danie_ModbasRtu_analog_input
  1058   0014C8  6E14               	movwf	Read_analog_input@Massiv^0,c
  1059   0014CA  0E00               	movlw	high _Danie_ModbasRtu_analog_input
  1060   0014CC  6E15               	movwf	(Read_analog_input@Massiv+1)^0,c
  1061   0014CE  0E0A               	movlw	10
  1062   0014D0  6E16               	movwf	Read_analog_input@Number_^0,c
  1063   0014D2  0E01               	movlw	1
  1064   0014D4  6E17               	movwf	Read_analog_input@Vt^0,c
  1065   0014D6  ECCC  F008         	call	_Read_analog_input	;wreg free
  1066                           
  1067                           ;Modbas_RTU.c: 367:            break;
  1068   0014DA  EFAC  F00A         	goto	l4583
  1069   0014DE                     l4573:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;Modbas_RTU.c: 369:            Changing_Discrete_Output();
  1073   0014DE  EC4C  F00D         	call	_Changing_Discrete_Output	;wreg free
  1074                           
  1075                           ;Modbas_RTU.c: 370:            break;
  1076   0014E2  EFAC  F00A         	goto	l4583
  1077   0014E6                     l4575:
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;Modbas_RTU.c: 372:            analog_output_recording();
  1081   0014E6  EC54  F00E         	call	_analog_output_recording	;wreg free
  1082                           
  1083                           ;Modbas_RTU.c: 373:            break;
  1084   0014EA  EFAC  F00A         	goto	l4583
  1085   0014EE                     l874:
  1086                           
  1087                           ; BSR set to: 0
  1088   0014EE  F000               	nop		;# 
  1089   0014F0                     l875:
  1090   0014F0  F000               	nop		;# 
  1091   0014F2                     l4577:
  1092                           
  1093                           ;Modbas_RTU.c: 382:           Error_modbasRtu (0x01);
  1094   0014F2  0E01               	movlw	1
  1095   0014F4  ECD3  F010         	call	_Error_modbasRtu
  1096                           
  1097                           ;Modbas_RTU.c: 383:     break;
  1098   0014F8  EFAC  F00A         	goto	l4583
  1099   0014FC                     l4581:
  1100   0014FC  0100               	movlb	0	; () banked
  1101   0014FE  518D               	movf	(_Danie_Rx_ModbasRtu+1)& (0+255),w,b
  1102   001500  6E22               	movwf	??_modbasRtu_Answer^0,c
  1103   001502  6A23               	clrf	(??_modbasRtu_Answer+1)^0,c
  1104                           
  1105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 1, Range of values is 0 to 0
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte            4     3 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112   001504  5023               	movf	(??_modbasRtu_Answer+1)^0,w,c
  1113   001506  0A00               	xorlw	0	; case 0
  1114   001508  B4D8               	btfsc	status,2,c
  1115   00150A  EF89  F00A         	goto	l4897
  1116   00150E  EF79  F00A         	goto	l4577
  1117   001512                     l4897:
  1118                           
  1119                           ; BSR set to: 0
  1120                           ; Switch size 1, requested type "simple"
  1121                           ; Number of cases is 8, Range of values is 1 to 16
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte           25    13 (average)
  1125                           ;	Chosen strategy is simple_byte
  1126   001512  5022               	movf	??_modbasRtu_Answer^0,w,c
  1127   001514  0A01               	xorlw	1	; case 1
  1128   001516  B4D8               	btfsc	status,2,c
  1129   001518  EF43  F00A         	goto	l4565
  1130   00151C  0A03               	xorlw	3	; case 2
  1131   00151E  B4D8               	btfsc	status,2,c
  1132   001520  EF4D  F00A         	goto	l4567
  1133   001524  0A01               	xorlw	1	; case 3
  1134   001526  B4D8               	btfsc	status,2,c
  1135   001528  EF57  F00A         	goto	l4569
  1136   00152C  0A07               	xorlw	7	; case 4
  1137   00152E  B4D8               	btfsc	status,2,c
  1138   001530  EF63  F00A         	goto	l4571
  1139   001534  0A01               	xorlw	1	; case 5
  1140   001536  B4D8               	btfsc	status,2,c
  1141   001538  EF6F  F00A         	goto	l4573
  1142   00153C  0A03               	xorlw	3	; case 6
  1143   00153E  B4D8               	btfsc	status,2,c
  1144   001540  EF73  F00A         	goto	l4575
  1145   001544  0A09               	xorlw	9	; case 15
  1146   001546  B4D8               	btfsc	status,2,c
  1147   001548  EF77  F00A         	goto	l874
  1148   00154C  0A1F               	xorlw	31	; case 16
  1149   00154E  B4D8               	btfsc	status,2,c
  1150   001550  EF78  F00A         	goto	l875
  1151   001554  EF79  F00A         	goto	l4577
  1152   001558                     l4583:
  1153                           
  1154                           ;Modbas_RTU.c: 386:      USART_UDR_vect=1;
  1155   001558  0E01               	movlw	1
  1156   00155A  6E3A               	movwf	_USART_UDR_vect^0,c
  1157   00155C                     
  1158                           ;Modbas_RTU.c: 388:   Bit_action_ModbasRtu.b2 = 0;
  1159   00155C  943C               	bcf	_Bit_action_ModbasRtu^0,2,c
  1160   00155E  0012               	return		;funcret
  1161   001560                     __end_of_modbasRtu_Answer:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _analog_output_recording *****************
  1165 ;; Defined at:
  1166 ;;		line 310 in file "Modbas_RTU.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  address         2   19[COMRAM] int 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;Total ram usage:        2 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 7
  1187 ;; This function calls:
  1188 ;;		_Error_modbasRtu
  1189 ;;		_ModbasRtu_Register_address
  1190 ;; This function is called by:
  1191 ;;		_modbasRtu_Answer
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text3
  1196   001CA8                     __ptext3:
  1197                           	callstack 0
  1198   001CA8                     _analog_output_recording:
  1199                           	callstack 21
  1200   001CA8                     
  1201                           ;Modbas_RTU.c: 312:  register int address;;Modbas_RTU.c: 313:  address = ModbasRtu_Regis
      +                          ter_address(3);
  1202   001CA8  0E03               	movlw	3
  1203   001CAA  EC64  F00F         	call	_ModbasRtu_Register_address
  1204   001CAE  C007  F014         	movff	?_ModbasRtu_Register_address,analog_output_recording@address
  1205   001CB2  C008  F015         	movff	?_ModbasRtu_Register_address+1,analog_output_recording@address+1
  1206   001CB6                     
  1207                           ;Modbas_RTU.c: 314:  if ( address > 10 )
  1208   001CB6  BE15               	btfsc	(analog_output_recording@address+1)^0,7,c
  1209   001CB8  EF67  F00E         	goto	u2411
  1210   001CBC  5015               	movf	(analog_output_recording@address+1)^0,w,c
  1211   001CBE  E109               	bnz	u2410
  1212   001CC0  0E0B               	movlw	11
  1213   001CC2  5C14               	subwf	analog_output_recording@address^0,w,c
  1214   001CC4  A0D8               	btfss	status,0,c
  1215   001CC6  EF67  F00E         	goto	u2411
  1216   001CCA  EF69  F00E         	goto	u2410
  1217   001CCE                     u2411:
  1218   001CCE  EF6E  F00E         	goto	l4419
  1219   001CD2                     u2410:
  1220   001CD2                     
  1221                           ;Modbas_RTU.c: 315:   {;Modbas_RTU.c: 316:   Error_modbasRtu (0x02);
  1222   001CD2  0E02               	movlw	2
  1223   001CD4  ECD3  F010         	call	_Error_modbasRtu
  1224                           
  1225                           ;Modbas_RTU.c: 317:   }
  1226   001CD8  EF7E  F00E         	goto	l857
  1227   001CDC                     l4419:
  1228                           
  1229                           ;Modbas_RTU.c: 319:   {;Modbas_RTU.c: 320:     Danie_ModbasRtu_analog_Output [address] =
      +                           ModbasRtu_Register_address(5);
  1230   001CDC  0E05               	movlw	5
  1231   001CDE  EC64  F00F         	call	_ModbasRtu_Register_address
  1232   001CE2  90D8               	bcf	status,0,c
  1233   001CE4  3414               	rlcf	analog_output_recording@address^0,w,c
  1234   001CE6  6ED9               	movwf	fsr2l,c
  1235   001CE8  3415               	rlcf	(analog_output_recording@address+1)^0,w,c
  1236   001CEA  6EDA               	movwf	fsr2h,c
  1237   001CEC  0EAA               	movlw	low _Danie_ModbasRtu_analog_Output
  1238   001CEE  26D9               	addwf	fsr2l,f,c
  1239   001CF0  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  1240   001CF2  22DA               	addwfc	fsr2h,f,c
  1241   001CF4  C007  FFDE         	movff	?_ModbasRtu_Register_address,postinc2
  1242   001CF8  C008  FFDD         	movff	?_ModbasRtu_Register_address+1,postdec2
  1243   001CFC                     l857:
  1244   001CFC  0012               	return		;funcret
  1245   001CFE                     __end_of_analog_output_recording:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _Reading_Discrete_Output *****************
  1249 ;; Defined at:
  1250 ;;		line 211 in file "Modbas_RTU.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  Massiv          2   19[COMRAM] PTR unsigned char 
  1253 ;;		 -> Danie_ModbasRtu_Binary_input(2), Danie_ModbasRtu_Binary_Output(2), 
  1254 ;;  Number_         1   21[COMRAM] unsigned char 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  address         2   31[COMRAM] volatile unsigned int 
  1257 ;;  Number_bits     2   29[COMRAM] volatile unsigned int 
  1258 ;;  Temp3           1   28[COMRAM] unsigned char 
  1259 ;;  address2        1   27[COMRAM] unsigned char 
  1260 ;;  Temp2           1   26[COMRAM] unsigned char 
  1261 ;;  Temp            1   25[COMRAM] unsigned char 
  1262 ;;  Danie           1   24[COMRAM] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1272 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;Total ram usage:       14 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 7
  1279 ;; This function calls:
  1280 ;;		_Error_modbasRtu
  1281 ;;		_ModbasRtu_Register_address
  1282 ;;		_check_sum
  1283 ;; This function is called by:
  1284 ;;		_modbasRtu_Answer
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text4
  1289   001022                     __ptext4:
  1290                           	callstack 0
  1291   001022                     _Reading_Discrete_Output:
  1292                           	callstack 21
  1293   001022                     
  1294                           ;Modbas_RTU.c: 211:  void Reading_Discrete_Output(unsigned char* Massiv, register unsign
      +                          ed char Number_);Modbas_RTU.c: 212:   {;Modbas_RTU.c: 213:  volatile unsigned int addres
      +                          s,Number_bits;;Modbas_RTU.c: 214:  register unsigned char Temp = 0,Danie,Temp2 = 0,addre
      +                          ss2 = 0,Temp3 = 2;
  1295   001022  0E00               	movlw	0
  1296   001024  6E1A               	movwf	Reading_Discrete_Output@Temp^0,c
  1297   001026  0E00               	movlw	0
  1298   001028  6E1B               	movwf	Reading_Discrete_Output@Temp2^0,c
  1299   00102A  0E00               	movlw	0
  1300   00102C  6E1C               	movwf	Reading_Discrete_Output@address2^0,c
  1301   00102E  0E02               	movlw	2
  1302   001030  6E1D               	movwf	Reading_Discrete_Output@Temp3^0,c
  1303   001032                     
  1304                           ;Modbas_RTU.c: 215:  address = ModbasRtu_Register_address(3);
  1305   001032  0E03               	movlw	3
  1306   001034  EC64  F00F         	call	_ModbasRtu_Register_address
  1307   001038  C007  F020         	movff	?_ModbasRtu_Register_address,Reading_Discrete_Output@address	;volatile
  1308   00103C  C008  F021         	movff	?_ModbasRtu_Register_address+1,Reading_Discrete_Output@address+1	;volatile
  1309   001040                     
  1310                           ;Modbas_RTU.c: 216:  if ( address > Number_ )
  1311   001040  5016               	movf	Reading_Discrete_Output@Number_^0,w,c
  1312   001042  6E17               	movwf	??_Reading_Discrete_Output^0,c
  1313   001044  6A18               	clrf	(??_Reading_Discrete_Output+1)^0,c
  1314   001046  5020               	movf	Reading_Discrete_Output@address^0,w,c	;volatile
  1315   001048  5C17               	subwf	??_Reading_Discrete_Output^0,w,c
  1316   00104A  5021               	movf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  1317   00104C  5818               	subwfb	(??_Reading_Discrete_Output+1)^0,w,c
  1318   00104E  B0D8               	btfsc	status,0,c
  1319   001050  EF2C  F008         	goto	u2291
  1320   001054  EF2E  F008         	goto	u2290
  1321   001058                     u2291:
  1322   001058  EF33  F008         	goto	l4325
  1323   00105C                     u2290:
  1324   00105C                     
  1325                           ;Modbas_RTU.c: 217:         {;Modbas_RTU.c: 218:            Error_modbasRtu (0x02);
  1326   00105C  0E02               	movlw	2
  1327   00105E  ECD3  F010         	call	_Error_modbasRtu
  1328                           
  1329                           ;Modbas_RTU.c: 219:         }
  1330   001062  EFCB  F008         	goto	l842
  1331   001066                     l4325:
  1332                           
  1333                           ;Modbas_RTU.c: 221:         {;Modbas_RTU.c: 222:            Number_bits = ModbasRtu_Regi
      +                          ster_address(5);
  1334   001066  0E05               	movlw	5
  1335   001068  EC64  F00F         	call	_ModbasRtu_Register_address
  1336   00106C  C007  F01E         	movff	?_ModbasRtu_Register_address,Reading_Discrete_Output@Number_bits	;volatile
  1337   001070  C008  F01F         	movff	?_ModbasRtu_Register_address+1,Reading_Discrete_Output@Number_bits+1	;volatile
  1338                           
  1339                           ;Modbas_RTU.c: 223:            while (address >= 8)
  1340   001074  EF43  F008         	goto	l4331
  1341   001078                     l4327:
  1342                           
  1343                           ;Modbas_RTU.c: 224:                {;Modbas_RTU.c: 225:                  address = addre
      +                          ss - 8;
  1344   001078  0EF8               	movlw	248
  1345   00107A  2420               	addwf	Reading_Discrete_Output@address^0,w,c	;volatile
  1346   00107C  6E20               	movwf	Reading_Discrete_Output@address^0,c	;volatile
  1347   00107E  0EFF               	movlw	255
  1348   001080  2021               	addwfc	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  1349   001082  6E21               	movwf	(Reading_Discrete_Output@address+1)^0,c	;volatile
  1350   001084                     
  1351                           ;Modbas_RTU.c: 226:                  Temp ++;
  1352   001084  2A1A               	incf	Reading_Discrete_Output@Temp^0,f,c
  1353   001086                     l4331:
  1354                           
  1355                           ;Modbas_RTU.c: 223:            while (address >= 8)
  1356   001086  5021               	movf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  1357   001088  E107               	bnz	u2301
  1358   00108A  0E08               	movlw	8
  1359   00108C  5C20               	subwf	Reading_Discrete_Output@address^0,w,c	;volatile
  1360   00108E  B0D8               	btfsc	status,0,c
  1361   001090  EF4C  F008         	goto	u2301
  1362   001094  EF4E  F008         	goto	u2300
  1363   001098                     u2301:
  1364   001098  EF3C  F008         	goto	l4327
  1365   00109C                     u2300:
  1366   00109C                     l4333:
  1367                           
  1368                           ;Modbas_RTU.c: 228:            Danie = Massiv [ Temp ];
  1369   00109C  501A               	movf	Reading_Discrete_Output@Temp^0,w,c
  1370   00109E  2414               	addwf	Reading_Discrete_Output@Massiv^0,w,c
  1371   0010A0  6ED9               	movwf	fsr2l,c
  1372   0010A2  0E00               	movlw	0
  1373   0010A4  2015               	addwfc	(Reading_Discrete_Output@Massiv+1)^0,w,c
  1374   0010A6  6EDA               	movwf	fsr2h,c
  1375   0010A8  50DF               	movf	indf2,w,c
  1376   0010AA  6E19               	movwf	Reading_Discrete_Output@Danie^0,c
  1377                           
  1378                           ;Modbas_RTU.c: 232:            while ( Number_bits > 0)
  1379   0010AC  EFA9  F008         	goto	l4361
  1380   0010B0                     l4335:
  1381                           
  1382                           ;Modbas_RTU.c: 233:              {;Modbas_RTU.c: 234:                    Number_bits --;
  1383   0010B0  061E               	decf	Reading_Discrete_Output@Number_bits^0,f,c	;volatile
  1384   0010B2  A0D8               	btfss	status,0,c
  1385   0010B4  061F               	decf	(Reading_Discrete_Output@Number_bits+1)^0,f,c	;volatile
  1386   0010B6                     
  1387                           ;Modbas_RTU.c: 235:                    if ( Danie & (1 << address) )
  1388   0010B6  C020  F017         	movff	Reading_Discrete_Output@address,??_Reading_Discrete_Output	;volatile
  1389   0010BA  0E01               	movlw	1
  1390   0010BC  6E18               	movwf	(??_Reading_Discrete_Output+1)^0,c
  1391   0010BE  2A17               	incf	??_Reading_Discrete_Output^0,f,c
  1392   0010C0  EF64  F008         	goto	u2314
  1393   0010C4                     u2315:
  1394   0010C4  90D8               	bcf	status,0,c
  1395   0010C6  3618               	rlcf	(??_Reading_Discrete_Output+1)^0,f,c
  1396   0010C8                     u2314:
  1397   0010C8  2E17               	decfsz	??_Reading_Discrete_Output^0,f,c
  1398   0010CA  EF62  F008         	goto	u2315
  1399   0010CE  5018               	movf	(??_Reading_Discrete_Output+1)^0,w,c
  1400   0010D0  1419               	andwf	Reading_Discrete_Output@Danie^0,w,c
  1401   0010D2  0900               	iorlw	0
  1402   0010D4  B4D8               	btfsc	status,2,c
  1403   0010D6  EF6F  F008         	goto	u2321
  1404   0010DA  EF71  F008         	goto	u2320
  1405   0010DE                     u2321:
  1406   0010DE  EF7F  F008         	goto	l4341
  1407   0010E2                     u2320:
  1408   0010E2                     
  1409                           ;Modbas_RTU.c: 236:                        {;Modbas_RTU.c: 237:                         
      +                           Temp2 |=(1<<address2);
  1410   0010E2  C01C  F017         	movff	Reading_Discrete_Output@address2,??_Reading_Discrete_Output
  1411   0010E6  0E01               	movlw	1
  1412   0010E8  6E18               	movwf	(??_Reading_Discrete_Output+1)^0,c
  1413   0010EA  2A17               	incf	??_Reading_Discrete_Output^0,f,c
  1414   0010EC  EF7A  F008         	goto	u2334
  1415   0010F0                     u2335:
  1416   0010F0  90D8               	bcf	status,0,c
  1417   0010F2  3618               	rlcf	(??_Reading_Discrete_Output+1)^0,f,c
  1418   0010F4                     u2334:
  1419   0010F4  2E17               	decfsz	??_Reading_Discrete_Output^0,f,c
  1420   0010F6  EF78  F008         	goto	u2335
  1421   0010FA  5018               	movf	(??_Reading_Discrete_Output+1)^0,w,c
  1422   0010FC  121B               	iorwf	Reading_Discrete_Output@Temp2^0,f,c
  1423   0010FE                     l4341:
  1424                           
  1425                           ;Modbas_RTU.c: 239:                    address2 ++;
  1426   0010FE  2A1C               	incf	Reading_Discrete_Output@address2^0,f,c
  1427   001100                     
  1428                           ;Modbas_RTU.c: 240:                    address ++;
  1429   001100  4A20               	infsnz	Reading_Discrete_Output@address^0,f,c	;volatile
  1430   001102  2A21               	incf	(Reading_Discrete_Output@address+1)^0,f,c	;volatile
  1431                           
  1432                           ;Modbas_RTU.c: 241:                    if (address2 == 8 )
  1433   001104  0E08               	movlw	8
  1434   001106  181C               	xorwf	Reading_Discrete_Output@address2^0,w,c
  1435   001108  A4D8               	btfss	status,2,c
  1436   00110A  EF89  F008         	goto	u2341
  1437   00110E  EF8B  F008         	goto	u2340
  1438   001112                     u2341:
  1439   001112  EF98  F008         	goto	l4353
  1440   001116                     u2340:
  1441   001116                     
  1442                           ;Modbas_RTU.c: 242:                        {;Modbas_RTU.c: 243:                         
      +                           address2 = 0;
  1443   001116  0E00               	movlw	0
  1444   001118  6E1C               	movwf	Reading_Discrete_Output@address2^0,c
  1445   00111A                     
  1446                           ;Modbas_RTU.c: 244:                          Temp3 ++;
  1447   00111A  2A1D               	incf	Reading_Discrete_Output@Temp3^0,f,c
  1448   00111C                     
  1449                           ;Modbas_RTU.c: 245:                          Danie_Rx_ModbasRtu[Temp3] = Temp2;
  1450   00111C  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  1451   00111E  241D               	addwf	Reading_Discrete_Output@Temp3^0,w,c
  1452   001120  6ED9               	movwf	fsr2l,c
  1453   001122  6ADA               	clrf	fsr2h,c
  1454   001124  0E00               	movlw	high _Danie_Rx_ModbasRtu
  1455   001126  22DA               	addwfc	fsr2h,f,c
  1456   001128  C01B  FFDF         	movff	Reading_Discrete_Output@Temp2,indf2
  1457   00112C                     
  1458                           ;Modbas_RTU.c: 246:                          Temp2 = 0;
  1459   00112C  0E00               	movlw	0
  1460   00112E  6E1B               	movwf	Reading_Discrete_Output@Temp2^0,c
  1461   001130                     l4353:
  1462                           
  1463                           ;Modbas_RTU.c: 248:                    if ( address == 8)
  1464   001130  0E08               	movlw	8
  1465   001132  1820               	xorwf	Reading_Discrete_Output@address^0,w,c	;volatile
  1466   001134  1021               	iorwf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  1467   001136  A4D8               	btfss	status,2,c
  1468   001138  EFA0  F008         	goto	u2351
  1469   00113C  EFA2  F008         	goto	u2350
  1470   001140                     u2351:
  1471   001140  EFA9  F008         	goto	l4361
  1472   001144                     u2350:
  1473   001144                     
  1474                           ;Modbas_RTU.c: 249:                        {;Modbas_RTU.c: 250:                         
      +                            address = 0;
  1475   001144  0E00               	movlw	0
  1476   001146  6E21               	movwf	(Reading_Discrete_Output@address+1)^0,c	;volatile
  1477   001148  0E00               	movlw	0
  1478   00114A  6E20               	movwf	Reading_Discrete_Output@address^0,c	;volatile
  1479   00114C                     
  1480                           ;Modbas_RTU.c: 251:                           Temp++;
  1481   00114C  2A1A               	incf	Reading_Discrete_Output@Temp^0,f,c
  1482   00114E  EF4E  F008         	goto	l4333
  1483   001152                     l4361:
  1484                           
  1485                           ;Modbas_RTU.c: 232:            while ( Number_bits > 0)
  1486   001152  501E               	movf	Reading_Discrete_Output@Number_bits^0,w,c	;volatile
  1487   001154  101F               	iorwf	(Reading_Discrete_Output@Number_bits+1)^0,w,c	;volatile
  1488   001156  A4D8               	btfss	status,2,c
  1489   001158  EFB0  F008         	goto	u2361
  1490   00115C  EFB2  F008         	goto	u2360
  1491   001160                     u2361:
  1492   001160  EF58  F008         	goto	l4335
  1493   001164                     u2360:
  1494   001164                     
  1495                           ;Modbas_RTU.c: 255:            if ( address2 > 0 )
  1496   001164  501C               	movf	Reading_Discrete_Output@address2^0,w,c
  1497   001166  B4D8               	btfsc	status,2,c
  1498   001168  EFB8  F008         	goto	u2371
  1499   00116C  EFBA  F008         	goto	u2370
  1500   001170                     u2371:
  1501   001170  EFC3  F008         	goto	l4369
  1502   001174                     u2370:
  1503   001174                     
  1504                           ;Modbas_RTU.c: 256:             {;Modbas_RTU.c: 257:               Temp3 ++;
  1505   001174  2A1D               	incf	Reading_Discrete_Output@Temp3^0,f,c
  1506   001176                     
  1507                           ;Modbas_RTU.c: 258:               Danie_Rx_ModbasRtu[Temp3] = Temp2;
  1508   001176  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  1509   001178  241D               	addwf	Reading_Discrete_Output@Temp3^0,w,c
  1510   00117A  6ED9               	movwf	fsr2l,c
  1511   00117C  6ADA               	clrf	fsr2h,c
  1512   00117E  0E00               	movlw	high _Danie_Rx_ModbasRtu
  1513   001180  22DA               	addwfc	fsr2h,f,c
  1514   001182  C01B  FFDF         	movff	Reading_Discrete_Output@Temp2,indf2
  1515   001186                     l4369:
  1516                           
  1517                           ;Modbas_RTU.c: 262:            Danie_Rx_ModbasRtu[2] = Temp3 - 2;
  1518   001186  501D               	movf	Reading_Discrete_Output@Temp3^0,w,c
  1519   001188  0FFE               	addlw	254
  1520   00118A  0100               	movlb	0	; () banked
  1521   00118C  6F8E               	movwf	(_Danie_Rx_ModbasRtu+2)& (0+255),b
  1522   00118E                     
  1523                           ; BSR set to: 0
  1524                           ;Modbas_RTU.c: 263:            Temp3 ++;
  1525   00118E  2A1D               	incf	Reading_Discrete_Output@Temp3^0,f,c
  1526   001190                     
  1527                           ; BSR set to: 0
  1528                           ;Modbas_RTU.c: 264:            check_sum ( Temp3);
  1529   001190  501D               	movf	Reading_Discrete_Output@Temp3^0,w,c
  1530   001192  ECE5  F00E         	call	_check_sum
  1531   001196                     l842:
  1532   001196  0012               	return		;funcret
  1533   001198                     __end_of_Reading_Discrete_Output:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _Read_analog_input *****************
  1537 ;; Defined at:
  1538 ;;		line 272 in file "Modbas_RTU.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  Massiv          2   19[COMRAM] PTR unsigned char 
  1541 ;;		 -> Danie_ModbasRtu_analog_Output(20), Danie_ModbasRtu_analog_input(20), Read_analog_input@Danie(2), 
  1542 ;;  Number_         1   21[COMRAM] unsigned char 
  1543 ;;  Vt              1   22[COMRAM] unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  Number_bits     2   29[COMRAM] volatile unsigned int 
  1546 ;;  address         2   27[COMRAM] volatile unsigned int 
  1547 ;;  Danie           2   25[COMRAM] volatile unsigned int 
  1548 ;;  Adress          1   31[COMRAM] volatile unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:       13 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 7
  1565 ;; This function calls:
  1566 ;;		_Error_modbasRtu
  1567 ;;		_ModbasRtu_Register_address
  1568 ;;		_check_sum
  1569 ;; This function is called by:
  1570 ;;		_modbasRtu_Answer
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text5
  1575   001198                     __ptext5:
  1576                           	callstack 0
  1577   001198                     _Read_analog_input:
  1578                           	callstack 21
  1579   001198                     
  1580                           ;Modbas_RTU.c: 272:  void Read_analog_input(unsigned char* Massiv, register unsigned cha
      +                          r Number_, unsigned char Vt);Modbas_RTU.c: 273:  {;Modbas_RTU.c: 274:  volatile unsigned
      +                           int address,Number_bits,Danie;;Modbas_RTU.c: 275:  volatile unsigned char Adress = 4;
  1581   001198  0E04               	movlw	4
  1582   00119A  6E20               	movwf	Read_analog_input@Adress^0,c	;volatile
  1583   00119C                     
  1584                           ;Modbas_RTU.c: 276:  address = ModbasRtu_Register_address(3);
  1585   00119C  0E03               	movlw	3
  1586   00119E  EC64  F00F         	call	_ModbasRtu_Register_address
  1587   0011A2  C007  F01C         	movff	?_ModbasRtu_Register_address,Read_analog_input@address	;volatile
  1588   0011A6  C008  F01D         	movff	?_ModbasRtu_Register_address+1,Read_analog_input@address+1	;volatile
  1589   0011AA                     
  1590                           ;Modbas_RTU.c: 277:  if ( address > Number_ )
  1591   0011AA  5016               	movf	Read_analog_input@Number_^0,w,c
  1592   0011AC  6E18               	movwf	??_Read_analog_input^0,c
  1593   0011AE  6A19               	clrf	(??_Read_analog_input+1)^0,c
  1594   0011B0  501C               	movf	Read_analog_input@address^0,w,c	;volatile
  1595   0011B2  5C18               	subwf	??_Read_analog_input^0,w,c
  1596   0011B4  501D               	movf	(Read_analog_input@address+1)^0,w,c	;volatile
  1597   0011B6  5819               	subwfb	(??_Read_analog_input+1)^0,w,c
  1598   0011B8  B0D8               	btfsc	status,0,c
  1599   0011BA  EFE1  F008         	goto	u2381
  1600   0011BE  EFE3  F008         	goto	u2380
  1601   0011C2                     u2381:
  1602   0011C2  EFE8  F008         	goto	l4383
  1603   0011C6                     u2380:
  1604   0011C6                     
  1605                           ;Modbas_RTU.c: 278:   {;Modbas_RTU.c: 279:   Error_modbasRtu (0x02);
  1606   0011C6  0E02               	movlw	2
  1607   0011C8  ECD3  F010         	call	_Error_modbasRtu
  1608                           
  1609                           ;Modbas_RTU.c: 280:   }
  1610   0011CC  EF4F  F009         	goto	l852
  1611   0011D0                     l4383:
  1612                           
  1613                           ;Modbas_RTU.c: 282:   {;Modbas_RTU.c: 283:   Number_bits = ModbasRtu_Register_address(5)
      +                          ;
  1614   0011D0  0E05               	movlw	5
  1615   0011D2  EC64  F00F         	call	_ModbasRtu_Register_address
  1616   0011D6  C007  F01E         	movff	?_ModbasRtu_Register_address,Read_analog_input@Number_bits	;volatile
  1617   0011DA  C008  F01F         	movff	?_ModbasRtu_Register_address+1,Read_analog_input@Number_bits+1	;volatile
  1618   0011DE                     
  1619                           ;Modbas_RTU.c: 284:   Danie_Rx_ModbasRtu[2] = Number_bits * 2;
  1620   0011DE  501E               	movf	Read_analog_input@Number_bits^0,w,c	;volatile
  1621   0011E0  241E               	addwf	Read_analog_input@Number_bits^0,w,c	;volatile
  1622   0011E2  0100               	movlb	0	; () banked
  1623   0011E4  6F8E               	movwf	(_Danie_Rx_ModbasRtu+2)& (0+255),b
  1624   0011E6                     
  1625                           ; BSR set to: 0
  1626                           ;Modbas_RTU.c: 285:   Adress = 3;
  1627   0011E6  0E03               	movlw	3
  1628   0011E8  6E20               	movwf	Read_analog_input@Adress^0,c	;volatile
  1629                           
  1630                           ;Modbas_RTU.c: 286:   while (Number_bits > 0 )
  1631   0011EA  EF43  F009         	goto	l4409
  1632   0011EE                     l4389:
  1633                           
  1634                           ;Modbas_RTU.c: 287:    {;Modbas_RTU.c: 288:    if ( Vt == 1 )
  1635   0011EE  0417               	decf	Read_analog_input@Vt^0,w,c
  1636   0011F0  A4D8               	btfss	status,2,c
  1637   0011F2  EFFD  F008         	goto	u2391
  1638   0011F6  EFFF  F008         	goto	u2390
  1639   0011FA                     u2391:
  1640   0011FA  EF0E  F009         	goto	l4393
  1641   0011FE                     u2390:
  1642   0011FE                     
  1643                           ;Modbas_RTU.c: 289:    {;Modbas_RTU.c: 290:      Danie = Danie_ModbasRtu_analog_input[ a
      +                          ddress ];
  1644   0011FE  90D8               	bcf	status,0,c
  1645   001200  341C               	rlcf	Read_analog_input@address^0,w,c	;volatile
  1646   001202  6ED9               	movwf	fsr2l,c
  1647   001204  341D               	rlcf	(Read_analog_input@address+1)^0,w,c	;volatile
  1648   001206  6EDA               	movwf	fsr2h,c
  1649   001208  0EBE               	movlw	low _Danie_ModbasRtu_analog_input
  1650   00120A  26D9               	addwf	fsr2l,f,c
  1651   00120C  0E00               	movlw	high _Danie_ModbasRtu_analog_input
  1652   00120E  22DA               	addwfc	fsr2h,f,c
  1653   001210  CFDE F01A          	movff	postinc2,Read_analog_input@Danie	;volatile
  1654   001214  CFDD F01B          	movff	postdec2,Read_analog_input@Danie+1	;volatile
  1655                           
  1656                           ;Modbas_RTU.c: 291:    }
  1657   001218  EF1B  F009         	goto	l4395
  1658   00121C                     l4393:
  1659                           
  1660                           ;Modbas_RTU.c: 293:       {;Modbas_RTU.c: 294:      Danie = Danie_ModbasRtu_analog_Outpu
      +                          t[ address ];
  1661   00121C  90D8               	bcf	status,0,c
  1662   00121E  341C               	rlcf	Read_analog_input@address^0,w,c	;volatile
  1663   001220  6ED9               	movwf	fsr2l,c
  1664   001222  341D               	rlcf	(Read_analog_input@address+1)^0,w,c	;volatile
  1665   001224  6EDA               	movwf	fsr2h,c
  1666   001226  0EAA               	movlw	low _Danie_ModbasRtu_analog_Output
  1667   001228  26D9               	addwf	fsr2l,f,c
  1668   00122A  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  1669   00122C  22DA               	addwfc	fsr2h,f,c
  1670   00122E  CFDE F01A          	movff	postinc2,Read_analog_input@Danie	;volatile
  1671   001232  CFDD F01B          	movff	postdec2,Read_analog_input@Danie+1	;volatile
  1672   001236                     l4395:
  1673                           
  1674                           ;Modbas_RTU.c: 296:    address++;
  1675   001236  4A1C               	infsnz	Read_analog_input@address^0,f,c	;volatile
  1676   001238  2A1D               	incf	(Read_analog_input@address+1)^0,f,c	;volatile
  1677   00123A                     
  1678                           ;Modbas_RTU.c: 297:    Massiv = &Danie;
  1679   00123A  0E1A               	movlw	low Read_analog_input@Danie
  1680   00123C  6E14               	movwf	Read_analog_input@Massiv^0,c
  1681   00123E  0E00               	movlw	high Read_analog_input@Danie
  1682   001240  6E15               	movwf	(Read_analog_input@Massiv+1)^0,c
  1683   001242                     
  1684                           ;Modbas_RTU.c: 298:    Danie_Rx_ModbasRtu[Adress ++] = Massiv[1];
  1685   001242  EE20 F001          	lfsr	2,1
  1686   001246  5014               	movf	Read_analog_input@Massiv^0,w,c
  1687   001248  26D9               	addwf	fsr2l,f,c
  1688   00124A  5015               	movf	(Read_analog_input@Massiv+1)^0,w,c
  1689   00124C  22DA               	addwfc	fsr2h,f,c
  1690   00124E  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  1691   001250  2420               	addwf	Read_analog_input@Adress^0,w,c	;volatile
  1692   001252  6EE1               	movwf	fsr1l,c
  1693   001254  6AE2               	clrf	fsr1h,c
  1694   001256  0E00               	movlw	high _Danie_Rx_ModbasRtu
  1695   001258  22E2               	addwfc	fsr1h,f,c
  1696   00125A  CFDF FFE7          	movff	indf2,indf1
  1697   00125E  2A20               	incf	Read_analog_input@Adress^0,f,c	;volatile
  1698   001260                     
  1699                           ;Modbas_RTU.c: 299:    Danie_Rx_ModbasRtu[Adress++] = Massiv [0];
  1700   001260  C014  FFD9         	movff	Read_analog_input@Massiv,fsr2l
  1701   001264  C015  FFDA         	movff	Read_analog_input@Massiv+1,fsr2h
  1702   001268  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  1703   00126A  2420               	addwf	Read_analog_input@Adress^0,w,c	;volatile
  1704   00126C  6EE1               	movwf	fsr1l,c
  1705   00126E  6AE2               	clrf	fsr1h,c
  1706   001270  0E00               	movlw	high _Danie_Rx_ModbasRtu
  1707   001272  22E2               	addwfc	fsr1h,f,c
  1708   001274  CFDF FFE7          	movff	indf2,indf1
  1709   001278  2A20               	incf	Read_analog_input@Adress^0,f,c	;volatile
  1710   00127A                     
  1711                           ;Modbas_RTU.c: 300:    Number_bits = Number_bits - 1 ;
  1712   00127A  0EFF               	movlw	255
  1713   00127C  241E               	addwf	Read_analog_input@Number_bits^0,w,c	;volatile
  1714   00127E  6E1E               	movwf	Read_analog_input@Number_bits^0,c	;volatile
  1715   001280  0EFF               	movlw	255
  1716   001282  201F               	addwfc	(Read_analog_input@Number_bits+1)^0,w,c	;volatile
  1717   001284  6E1F               	movwf	(Read_analog_input@Number_bits+1)^0,c	;volatile
  1718   001286                     l4409:
  1719                           
  1720                           ;Modbas_RTU.c: 286:   while (Number_bits > 0 )
  1721   001286  501E               	movf	Read_analog_input@Number_bits^0,w,c	;volatile
  1722   001288  101F               	iorwf	(Read_analog_input@Number_bits+1)^0,w,c	;volatile
  1723   00128A  A4D8               	btfss	status,2,c
  1724   00128C  EF4A  F009         	goto	u2401
  1725   001290  EF4C  F009         	goto	u2400
  1726   001294                     u2401:
  1727   001294  EFF7  F008         	goto	l4389
  1728   001298                     u2400:
  1729   001298                     
  1730                           ;Modbas_RTU.c: 302:   check_sum ( Adress);
  1731   001298  5020               	movf	Read_analog_input@Adress^0,w,c	;volatile
  1732   00129A  ECE5  F00E         	call	_check_sum
  1733   00129E                     l852:
  1734   00129E  0012               	return		;funcret
  1735   0012A0                     __end_of_Read_analog_input:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _Changing_Discrete_Output *****************
  1739 ;; Defined at:
  1740 ;;		line 190 in file "Modbas_RTU.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  address         2   19[COMRAM] unsigned int 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;Total ram usage:        2 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 7
  1761 ;; This function calls:
  1762 ;;		_Error_modbasRtu
  1763 ;;		_ModbasRtu_Register_address
  1764 ;;		__Bin_input_Output
  1765 ;; This function is called by:
  1766 ;;		_modbasRtu_Answer
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text6
  1771   001A98                     __ptext6:
  1772                           	callstack 0
  1773   001A98                     _Changing_Discrete_Output:
  1774                           	callstack 21
  1775   001A98                     
  1776                           ;Modbas_RTU.c: 192:    register unsigned int address;;Modbas_RTU.c: 193:    address = Mo
      +                          dbasRtu_Register_address(3);
  1777   001A98  0E03               	movlw	3
  1778   001A9A  EC64  F00F         	call	_ModbasRtu_Register_address
  1779   001A9E  C007  F014         	movff	?_ModbasRtu_Register_address,Changing_Discrete_Output@address
  1780   001AA2  C008  F015         	movff	?_ModbasRtu_Register_address+1,Changing_Discrete_Output@address+1
  1781   001AA6                     
  1782                           ;Modbas_RTU.c: 194:    if ( address > 10 )
  1783   001AA6  5015               	movf	(Changing_Discrete_Output@address+1)^0,w,c
  1784   001AA8  E109               	bnz	u2270
  1785   001AAA  0E0B               	movlw	11
  1786   001AAC  5C14               	subwf	Changing_Discrete_Output@address^0,w,c
  1787   001AAE  A0D8               	btfss	status,0,c
  1788   001AB0  EF5C  F00D         	goto	u2271
  1789   001AB4  EF5E  F00D         	goto	u2270
  1790   001AB8                     u2271:
  1791   001AB8  EF63  F00D         	goto	l4311
  1792   001ABC                     u2270:
  1793   001ABC                     
  1794                           ;Modbas_RTU.c: 195:     {;Modbas_RTU.c: 196:     Error_modbasRtu (0x02);
  1795   001ABC  0E02               	movlw	2
  1796   001ABE  ECD3  F010         	call	_Error_modbasRtu
  1797                           
  1798                           ;Modbas_RTU.c: 197:     }
  1799   001AC2  EF84  F00D         	goto	l827
  1800   001AC6                     l4311:
  1801                           
  1802                           ;Modbas_RTU.c: 199:     {;Modbas_RTU.c: 200:    if (Danie_Rx_ModbasRtu[4] == 255)
  1803   001AC6  0100               	movlb	0	; () banked
  1804   001AC8  2990               	incf	(_Danie_Rx_ModbasRtu+4)& (0+255),w,b
  1805   001ACA  A4D8               	btfss	status,2,c
  1806   001ACC  EF6A  F00D         	goto	u2281
  1807   001AD0  EF6C  F00D         	goto	u2280
  1808   001AD4                     u2281:
  1809   001AD4  EF79  F00D         	goto	l4315
  1810   001AD8                     u2280:
  1811   001AD8                     
  1812                           ; BSR set to: 0
  1813                           ;Modbas_RTU.c: 201:      _Bin_input_Output ((char)address,1,Danie_ModbasRtu_Binary_Outpu
      +                          t,10);
  1814   001AD8  0E01               	movlw	1
  1815   001ADA  6E07               	movwf	__Bin_input_Output@state^0,c
  1816   001ADC  0E3F               	movlw	low _Danie_ModbasRtu_Binary_Output
  1817   001ADE  6E08               	movwf	__Bin_input_Output@Masiv^0,c
  1818   001AE0  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  1819   001AE2  6E09               	movwf	(__Bin_input_Output@Masiv+1)^0,c
  1820   001AE4  0E0A               	movlw	10
  1821   001AE6  6E0A               	movwf	__Bin_input_Output@Sd^0,c
  1822   001AE8  5014               	movf	Changing_Discrete_Output@address^0,w,c
  1823   001AEA  ECCC  F009         	call	__Bin_input_Output
  1824   001AEE  EF84  F00D         	goto	l827
  1825   001AF2                     l4315:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;Modbas_RTU.c: 203:            _Bin_input_Output ((char)address,0,Danie_ModbasRtu_Binary
      +                          _Output,10);
  1829   001AF2  0E00               	movlw	0
  1830   001AF4  6E07               	movwf	__Bin_input_Output@state^0,c
  1831   001AF6  0E3F               	movlw	low _Danie_ModbasRtu_Binary_Output
  1832   001AF8  6E08               	movwf	__Bin_input_Output@Masiv^0,c
  1833   001AFA  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  1834   001AFC  6E09               	movwf	(__Bin_input_Output@Masiv+1)^0,c
  1835   001AFE  0E0A               	movlw	10
  1836   001B00  6E0A               	movwf	__Bin_input_Output@Sd^0,c
  1837   001B02  5014               	movf	Changing_Discrete_Output@address^0,w,c
  1838   001B04  ECCC  F009         	call	__Bin_input_Output
  1839   001B08                     l827:
  1840   001B08  0012               	return		;funcret
  1841   001B0A                     __end_of_Changing_Discrete_Output:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function __Bin_input_Output *****************
  1845 ;; Defined at:
  1846 ;;		line 158 in file "Modbas_RTU.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  NUMBER          1    wreg     unsigned char 
  1849 ;;  state           1    6[COMRAM] unsigned char 
  1850 ;;  Masiv           2    7[COMRAM] PTR volatile unsigned ch
  1851 ;;		 -> Danie_ModbasRtu_Binary_input(2), Danie_ModbasRtu_Binary_Output(2), 
  1852 ;;  Sd              1    9[COMRAM] volatile unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  NUMBER          1   12[COMRAM] unsigned char 
  1855 ;;  Temp1           1   14[COMRAM] volatile unsigned char 
  1856 ;;  Temp            1   13[COMRAM] volatile unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      unsigned char 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;Total ram usage:        9 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 4
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_Changing_Discrete_Output
  1877 ;;		_read_digital_inputs
  1878 ;;		_change_digital_inputs
  1879 ;;		_read_digital_Output
  1880 ;;		_change_digital_Output
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text7
  1885   001398                     __ptext7:
  1886                           	callstack 0
  1887   001398                     __Bin_input_Output:
  1888                           	callstack 23
  1889                           
  1890                           ;incstack = 0
  1891                           ;__Bin_input_Output@NUMBER stored from wreg
  1892   001398  6E0D               	movwf	__Bin_input_Output@NUMBER^0,c
  1893   00139A                     
  1894                           ;Modbas_RTU.c: 158: char _Bin_input_Output( register unsigned char NUMBER, register unsi
      +                          gned char state,volatile unsigned char *Masiv, volatile unsigned char Sd );Modbas_RTU.c:
      +                           159:   {;Modbas_RTU.c: 160:  volatile unsigned char Temp = 0,Temp1 = 0;
  1895   00139A  0E00               	movlw	0
  1896   00139C  6E0E               	movwf	__Bin_input_Output@Temp^0,c	;volatile
  1897   00139E  0E00               	movlw	0
  1898   0013A0  6E0F               	movwf	__Bin_input_Output@Temp1^0,c	;volatile
  1899                           
  1900                           ;Modbas_RTU.c: 161:  while (NUMBER >= 8)
  1901   0013A2  EFD7  F009         	goto	l4231
  1902   0013A6                     l4227:
  1903                           
  1904                           ;Modbas_RTU.c: 162:   {;Modbas_RTU.c: 163:     NUMBER = NUMBER - 8;
  1905   0013A6  500D               	movf	__Bin_input_Output@NUMBER^0,w,c
  1906   0013A8  0FF8               	addlw	248
  1907   0013AA  6E0D               	movwf	__Bin_input_Output@NUMBER^0,c
  1908   0013AC                     
  1909                           ;Modbas_RTU.c: 164:     Temp ++;
  1910   0013AC  2A0E               	incf	__Bin_input_Output@Temp^0,f,c	;volatile
  1911   0013AE                     l4231:
  1912                           
  1913                           ;Modbas_RTU.c: 161:  while (NUMBER >= 8)
  1914   0013AE  0E08               	movlw	8
  1915   0013B0  600D               	cpfslt	__Bin_input_Output@NUMBER^0,c
  1916   0013B2  EFDD  F009         	goto	u2171
  1917   0013B6  EFDF  F009         	goto	u2170
  1918   0013BA                     u2171:
  1919   0013BA  EFD3  F009         	goto	l4227
  1920   0013BE                     u2170:
  1921   0013BE                     
  1922                           ;Modbas_RTU.c: 166:  Temp1 = Masiv [ Temp ];
  1923   0013BE  500E               	movf	__Bin_input_Output@Temp^0,w,c	;volatile
  1924   0013C0  2408               	addwf	__Bin_input_Output@Masiv^0,w,c
  1925   0013C2  6ED9               	movwf	fsr2l,c
  1926   0013C4  0E00               	movlw	0
  1927   0013C6  2009               	addwfc	(__Bin_input_Output@Masiv+1)^0,w,c
  1928   0013C8  6EDA               	movwf	fsr2h,c
  1929   0013CA  50DF               	movf	indf2,w,c
  1930   0013CC  6E0F               	movwf	__Bin_input_Output@Temp1^0,c	;volatile
  1931   0013CE                     
  1932                           ;Modbas_RTU.c: 167:  if (Sd == 10 )
  1933   0013CE  0E0A               	movlw	10
  1934   0013D0  180A               	xorwf	__Bin_input_Output@Sd^0,w,c	;volatile
  1935   0013D2  A4D8               	btfss	status,2,c
  1936   0013D4  EFEE  F009         	goto	u2181
  1937   0013D8  EFF0  F009         	goto	u2180
  1938   0013DC                     u2181:
  1939   0013DC  EF21  F00A         	goto	l4245
  1940   0013E0                     u2180:
  1941   0013E0                     
  1942                           ;Modbas_RTU.c: 168:   {;Modbas_RTU.c: 169:     if ( state == 1)
  1943   0013E0  0407               	decf	__Bin_input_Output@state^0,w,c
  1944   0013E2  A4D8               	btfss	status,2,c
  1945   0013E4  EFF6  F009         	goto	u2191
  1946   0013E8  EFF8  F009         	goto	u2190
  1947   0013EC                     u2191:
  1948   0013EC  EF08  F00A         	goto	l4241
  1949   0013F0                     u2190:
  1950   0013F0                     
  1951                           ;Modbas_RTU.c: 170:      Temp1 |=(1<<NUMBER);
  1952   0013F0  C00D  F00B         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  1953   0013F4  0E01               	movlw	1
  1954   0013F6  6E0C               	movwf	(??__Bin_input_Output+1)^0,c
  1955   0013F8  2A0B               	incf	??__Bin_input_Output^0,f,c
  1956   0013FA  EF01  F00A         	goto	u2204
  1957   0013FE                     u2205:
  1958   0013FE  90D8               	bcf	status,0,c
  1959   001400  360C               	rlcf	(??__Bin_input_Output+1)^0,f,c
  1960   001402                     u2204:
  1961   001402  2E0B               	decfsz	??__Bin_input_Output^0,f,c
  1962   001404  EFFF  F009         	goto	u2205
  1963   001408  500C               	movf	(??__Bin_input_Output+1)^0,w,c
  1964   00140A  120F               	iorwf	__Bin_input_Output@Temp1^0,f,c	;volatile
  1965   00140C  EF17  F00A         	goto	l4243
  1966   001410                     l4241:
  1967                           
  1968                           ;Modbas_RTU.c: 172:      Temp1 &=~(1<<NUMBER);
  1969   001410  C00D  F00B         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  1970   001414  0E01               	movlw	1
  1971   001416  6E0C               	movwf	(??__Bin_input_Output+1)^0,c
  1972   001418  2A0B               	incf	??__Bin_input_Output^0,f,c
  1973   00141A  EF11  F00A         	goto	u2214
  1974   00141E                     u2215:
  1975   00141E  90D8               	bcf	status,0,c
  1976   001420  360C               	rlcf	(??__Bin_input_Output+1)^0,f,c
  1977   001422                     u2214:
  1978   001422  2E0B               	decfsz	??__Bin_input_Output^0,f,c
  1979   001424  EF0F  F00A         	goto	u2215
  1980   001428  500C               	movf	(??__Bin_input_Output+1)^0,w,c
  1981   00142A  0AFF               	xorlw	255
  1982   00142C  160F               	andwf	__Bin_input_Output@Temp1^0,f,c	;volatile
  1983   00142E                     l4243:
  1984                           
  1985                           ;Modbas_RTU.c: 173:     Masiv [ Temp ] = Temp1;
  1986   00142E  500E               	movf	__Bin_input_Output@Temp^0,w,c	;volatile
  1987   001430  2408               	addwf	__Bin_input_Output@Masiv^0,w,c
  1988   001432  6ED9               	movwf	fsr2l,c
  1989   001434  0E00               	movlw	0
  1990   001436  2009               	addwfc	(__Bin_input_Output@Masiv+1)^0,w,c
  1991   001438  6EDA               	movwf	fsr2h,c
  1992   00143A  C00F  FFDF         	movff	__Bin_input_Output@Temp1,indf2	;volatile
  1993                           
  1994                           ;Modbas_RTU.c: 174:   }
  1995   00143E  EF3D  F00A         	goto	l817
  1996   001442                     l4245:
  1997                           
  1998                           ;Modbas_RTU.c: 176:   {;Modbas_RTU.c: 177:   if ( Temp1 & (1<<NUMBER) )
  1999   001442  C00D  F00B         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  2000   001446  0E01               	movlw	1
  2001   001448  6E0C               	movwf	(??__Bin_input_Output+1)^0,c
  2002   00144A  2A0B               	incf	??__Bin_input_Output^0,f,c
  2003   00144C  EF2A  F00A         	goto	u2224
  2004   001450                     u2225:
  2005   001450  90D8               	bcf	status,0,c
  2006   001452  360C               	rlcf	(??__Bin_input_Output+1)^0,f,c
  2007   001454                     u2224:
  2008   001454  2E0B               	decfsz	??__Bin_input_Output^0,f,c
  2009   001456  EF28  F00A         	goto	u2225
  2010   00145A  500C               	movf	(??__Bin_input_Output+1)^0,w,c
  2011   00145C  140F               	andwf	__Bin_input_Output@Temp1^0,w,c	;volatile
  2012   00145E  0900               	iorlw	0
  2013   001460  B4D8               	btfsc	status,2,c
  2014   001462  EF35  F00A         	goto	u2231
  2015   001466  EF37  F00A         	goto	u2230
  2016   00146A                     u2231:
  2017   00146A  EF3B  F00A         	goto	l4249
  2018   00146E                     u2230:
  2019   00146E                     
  2020                           ;Modbas_RTU.c: 178:    NUMBER = 1;
  2021   00146E  0E01               	movlw	1
  2022   001470  6E0D               	movwf	__Bin_input_Output@NUMBER^0,c
  2023   001472  EF3D  F00A         	goto	l817
  2024   001476                     l4249:
  2025                           
  2026                           ;Modbas_RTU.c: 180:    NUMBER = 0;
  2027   001476  0E00               	movlw	0
  2028   001478  6E0D               	movwf	__Bin_input_Output@NUMBER^0,c
  2029   00147A                     l817:
  2030                           
  2031                           ;Modbas_RTU.c: 182:   return NUMBER;
  2032   00147A  500D               	movf	__Bin_input_Output@NUMBER^0,w,c
  2033   00147C  0012               	return		;funcret
  2034   00147E                     __end_of__Bin_input_Output:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _ModbasRtu_Register_address *****************
  2038 ;; Defined at:
  2039 ;;		line 127 in file "Modbas_RTU.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  Li              1    wreg     unsigned char 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  Li              1   13[COMRAM] unsigned char 
  2044 ;;  Hi              1   12[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    6[COMRAM] unsigned int 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        8 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 4
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_Changing_Discrete_Output
  2065 ;;		_Reading_Discrete_Output
  2066 ;;		_Read_analog_input
  2067 ;;		_analog_output_recording
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text8
  2072   001EC8                     __ptext8:
  2073                           	callstack 0
  2074   001EC8                     _ModbasRtu_Register_address:
  2075                           	callstack 23
  2076                           
  2077                           ;incstack = 0
  2078                           ;ModbasRtu_Register_address@Li stored from wreg
  2079   001EC8  6E0E               	movwf	ModbasRtu_Register_address@Li^0,c
  2080   001ECA                     
  2081                           ;Modbas_RTU.c: 127:  unsigned int ModbasRtu_Register_address(unsigned char Li);Modbas_RT
      +                          U.c: 128:  {;Modbas_RTU.c: 129:   register char Hi= Li - 1;
  2082   001ECA  040E               	decf	ModbasRtu_Register_address@Li^0,w,c
  2083   001ECC  6E0D               	movwf	ModbasRtu_Register_address@Hi^0,c
  2084   001ECE                     
  2085                           ;Modbas_RTU.c: 130:   return Danie_Rx_ModbasRtu[Hi] * 256+ Danie_Rx_ModbasRtu[Li];
  2086   001ECE  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2087   001ED0  240E               	addwf	ModbasRtu_Register_address@Li^0,w,c
  2088   001ED2  6ED9               	movwf	fsr2l,c
  2089   001ED4  6ADA               	clrf	fsr2h,c
  2090   001ED6  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2091   001ED8  22DA               	addwfc	fsr2h,f,c
  2092   001EDA  50DF               	movf	indf2,w,c
  2093   001EDC  6E09               	movwf	??_ModbasRtu_Register_address^0,c
  2094   001EDE  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2095   001EE0  240D               	addwf	ModbasRtu_Register_address@Hi^0,w,c
  2096   001EE2  6ED9               	movwf	fsr2l,c
  2097   001EE4  6ADA               	clrf	fsr2h,c
  2098   001EE6  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2099   001EE8  22DA               	addwfc	fsr2h,f,c
  2100   001EEA  50DF               	movf	indf2,w,c
  2101   001EEC  6E0A               	movwf	(??_ModbasRtu_Register_address+1)^0,c
  2102   001EEE  500A               	movf	(??_ModbasRtu_Register_address+1)^0,w,c
  2103   001EF0  6E0C               	movwf	(??_ModbasRtu_Register_address+3)^0,c
  2104   001EF2  6A0B               	clrf	(??_ModbasRtu_Register_address+2)^0,c
  2105   001EF4  5009               	movf	??_ModbasRtu_Register_address^0,w,c
  2106   001EF6  240B               	addwf	(??_ModbasRtu_Register_address+2)^0,w,c
  2107   001EF8  6E07               	movwf	?_ModbasRtu_Register_address^0,c
  2108   001EFA  0E00               	movlw	0
  2109   001EFC  200C               	addwfc	(??_ModbasRtu_Register_address+3)^0,w,c
  2110   001EFE  6E08               	movwf	(?_ModbasRtu_Register_address+1)^0,c
  2111   001F00  0012               	return		;funcret
  2112   001F02                     __end_of_ModbasRtu_Register_address:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function _Error_modbasRtu *****************
  2116 ;; Defined at:
  2117 ;;		line 328 in file "Modbas_RTU.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  Temp_Error      1    wreg     volatile unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  Temp_Error      1   18[COMRAM] volatile unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;Total ram usage:        1 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 6
  2138 ;; This function calls:
  2139 ;;		_check_sum
  2140 ;; This function is called by:
  2141 ;;		_Changing_Discrete_Output
  2142 ;;		_Reading_Discrete_Output
  2143 ;;		_Read_analog_input
  2144 ;;		_analog_output_recording
  2145 ;;		_modbasRtu_Answer
  2146 ;;		_modbasRtu_Slave
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text9
  2151   0021A6                     __ptext9:
  2152                           	callstack 0
  2153   0021A6                     _Error_modbasRtu:
  2154                           	callstack 21
  2155                           
  2156                           ;incstack = 0
  2157                           ;Error_modbasRtu@Temp_Error stored from wreg
  2158   0021A6  6E13               	movwf	Error_modbasRtu@Temp_Error^0,c	;volatile
  2159   0021A8                     
  2160                           ;Modbas_RTU.c: 328:  void Error_modbasRtu (volatile unsigned char Temp_Error);Modbas_RTU
      +                          .c: 329:   {;Modbas_RTU.c: 330:  Danie_Rx_ModbasRtu[1] |= (1<<7);
  2161   0021A8  0100               	movlb	0	; () banked
  2162   0021AA  8F8D               	bsf	(_Danie_Rx_ModbasRtu+1)& (0+255),7,b
  2163   0021AC                     
  2164                           ; BSR set to: 0
  2165                           ;Modbas_RTU.c: 331:  Danie_Rx_ModbasRtu[2] = Temp_Error;
  2166   0021AC  C013  F08E         	movff	Error_modbasRtu@Temp_Error,_Danie_Rx_ModbasRtu+2	;volatile
  2167   0021B0                     
  2168                           ; BSR set to: 0
  2169                           ;Modbas_RTU.c: 332:  check_sum (3);
  2170   0021B0  0E03               	movlw	3
  2171   0021B2  ECE5  F00E         	call	_check_sum
  2172   0021B6  0012               	return		;funcret
  2173   0021B8                     __end_of_Error_modbasRtu:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _check_sum *****************
  2177 ;; Defined at:
  2178 ;;		line 337 in file "Modbas_RTU.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  Adress          1    wreg     unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  Adress          1   17[COMRAM] unsigned char 
  2183 ;;  RC              2   15[COMRAM] unsigned int 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        3 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 5
  2200 ;; This function calls:
  2201 ;;		_crc_chk
  2202 ;; This function is called by:
  2203 ;;		_Reading_Discrete_Output
  2204 ;;		_Read_analog_input
  2205 ;;		_Error_modbasRtu
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text10
  2210   001DCA                     __ptext10:
  2211                           	callstack 0
  2212   001DCA                     _check_sum:
  2213                           	callstack 21
  2214                           
  2215                           ;incstack = 0
  2216                           ;check_sum@Adress stored from wreg
  2217   001DCA  6E12               	movwf	check_sum@Adress^0,c
  2218   001DCC                     
  2219                           ;Modbas_RTU.c: 337:  void check_sum ( register unsigned char Adress);Modbas_RTU.c: 338: 
      +                            {;Modbas_RTU.c: 339:  register unsigned int RC;;Modbas_RTU.c: 340:  RC = crc_chk(Danie
      +                          _Rx_ModbasRtu,Adress);
  2220   001DCC  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2221   001DCE  6E07               	movwf	crc_chk@data^0,c
  2222   001DD0  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2223   001DD2  6E08               	movwf	(crc_chk@data+1)^0,c
  2224   001DD4  C012  F009         	movff	check_sum@Adress,crc_chk@length
  2225   001DD8  ECC2  F00B         	call	_crc_chk	;wreg free
  2226   001DDC  C007  F010         	movff	?_crc_chk,check_sum@RC
  2227   001DE0  C008  F011         	movff	?_crc_chk+1,check_sum@RC+1
  2228   001DE4                     
  2229                           ;Modbas_RTU.c: 341:  Danie_Rx_ModbasRtu[Adress] = RC ;
  2230   001DE4  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2231   001DE6  2412               	addwf	check_sum@Adress^0,w,c
  2232   001DE8  6ED9               	movwf	fsr2l,c
  2233   001DEA  6ADA               	clrf	fsr2h,c
  2234   001DEC  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2235   001DEE  22DA               	addwfc	fsr2h,f,c
  2236   001DF0  C010  FFDF         	movff	check_sum@RC,indf2
  2237   001DF4                     
  2238                           ;Modbas_RTU.c: 342:  Adress++;
  2239   001DF4  2A12               	incf	check_sum@Adress^0,f,c
  2240   001DF6                     
  2241                           ;Modbas_RTU.c: 343:  Danie_Rx_ModbasRtu[Adress] = RC >> 8;
  2242   001DF6  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2243   001DF8  2412               	addwf	check_sum@Adress^0,w,c
  2244   001DFA  6ED9               	movwf	fsr2l,c
  2245   001DFC  6ADA               	clrf	fsr2h,c
  2246   001DFE  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2247   001E00  22DA               	addwfc	fsr2h,f,c
  2248   001E02  5011               	movf	(check_sum@RC+1)^0,w,c
  2249   001E04  6EDF               	movwf	indf2,c
  2250   001E06                     
  2251                           ;Modbas_RTU.c: 344:  quantity_Data_ModbasRtu = Adress;
  2252   001E06  C012  F03E         	movff	check_sum@Adress,_quantity_Data_ModbasRtu
  2253   001E0A  0012               	return		;funcret
  2254   001E0C                     __end_of_check_sum:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _Data_integrity *****************
  2258 ;; Defined at:
  2259 ;;		line 135 in file "Modbas_RTU.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  Temp22          2   16[COMRAM] unsigned int 
  2264 ;;  Temp33          1   18[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:        4 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 5
  2281 ;; This function calls:
  2282 ;;		_crc_chk
  2283 ;; This function is called by:
  2284 ;;		_modbasRtu_Slave
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text11
  2289   001B7A                     __ptext11:
  2290                           	callstack 0
  2291   001B7A                     _Data_integrity:
  2292                           	callstack 24
  2293   001B7A                     
  2294                           ;Modbas_RTU.c: 137:    register unsigned int Temp22;;Modbas_RTU.c: 138:    register unsi
      +                          gned char Temp33;;Modbas_RTU.c: 139:    quantity_Data_ModbasRtu = quantity_Data_ModbasRt
      +                          u - 2;
  2295   001B7A  503E               	movf	_quantity_Data_ModbasRtu^0,w,c
  2296   001B7C  0FFE               	addlw	254
  2297   001B7E  6E3E               	movwf	_quantity_Data_ModbasRtu^0,c
  2298   001B80                     
  2299                           ;Modbas_RTU.c: 140:    Temp22 = crc_chk(Danie_Rx_ModbasRtu,quantity_Data_ModbasRtu);
  2300   001B80  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2301   001B82  6E07               	movwf	crc_chk@data^0,c
  2302   001B84  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2303   001B86  6E08               	movwf	(crc_chk@data+1)^0,c
  2304   001B88  C03E  F009         	movff	_quantity_Data_ModbasRtu,crc_chk@length
  2305   001B8C  ECC2  F00B         	call	_crc_chk	;wreg free
  2306   001B90  C007  F011         	movff	?_crc_chk,Data_integrity@Temp22
  2307   001B94  C008  F012         	movff	?_crc_chk+1,Data_integrity@Temp22+1
  2308   001B98                     
  2309                           ;Modbas_RTU.c: 141:    Temp33 = Temp22;
  2310   001B98  C011  F013         	movff	Data_integrity@Temp22,Data_integrity@Temp33
  2311   001B9C                     
  2312                           ;Modbas_RTU.c: 142:    if ( Danie_Rx_ModbasRtu[quantity_Data_ModbasRtu] == Temp33 )
  2313   001B9C  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2314   001B9E  243E               	addwf	_quantity_Data_ModbasRtu^0,w,c
  2315   001BA0  6ED9               	movwf	fsr2l,c
  2316   001BA2  6ADA               	clrf	fsr2h,c
  2317   001BA4  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2318   001BA6  22DA               	addwfc	fsr2h,f,c
  2319   001BA8  5013               	movf	Data_integrity@Temp33^0,w,c
  2320   001BAA  18DE               	xorwf	postinc2,w,c
  2321   001BAC  A4D8               	btfss	status,2,c
  2322   001BAE  EFDB  F00D         	goto	u2441
  2323   001BB2  EFDD  F00D         	goto	u2440
  2324   001BB6                     u2441:
  2325   001BB6  EFF2  F00D         	goto	l4559
  2326   001BBA                     u2440:
  2327   001BBA                     
  2328                           ;Modbas_RTU.c: 143:  {;Modbas_RTU.c: 144:    quantity_Data_ModbasRtu ++;
  2329   001BBA  2A3E               	incf	_quantity_Data_ModbasRtu^0,f,c
  2330   001BBC                     
  2331                           ;Modbas_RTU.c: 145:    Temp33 = (Temp22 >> 8) ;
  2332   001BBC  5012               	movf	(Data_integrity@Temp22+1)^0,w,c
  2333   001BBE  6E13               	movwf	Data_integrity@Temp33^0,c
  2334   001BC0                     
  2335                           ;Modbas_RTU.c: 146:    if ( Danie_Rx_ModbasRtu[quantity_Data_ModbasRtu] == Temp33 )
  2336   001BC0  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2337   001BC2  243E               	addwf	_quantity_Data_ModbasRtu^0,w,c
  2338   001BC4  6ED9               	movwf	fsr2l,c
  2339   001BC6  6ADA               	clrf	fsr2h,c
  2340   001BC8  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2341   001BCA  22DA               	addwfc	fsr2h,f,c
  2342   001BCC  5013               	movf	Data_integrity@Temp33^0,w,c
  2343   001BCE  18DE               	xorwf	postinc2,w,c
  2344   001BD0  A4D8               	btfss	status,2,c
  2345   001BD2  EFED  F00D         	goto	u2451
  2346   001BD6  EFEF  F00D         	goto	u2450
  2347   001BDA                     u2451:
  2348   001BDA  EFF2  F00D         	goto	l4559
  2349   001BDE                     u2450:
  2350   001BDE                     
  2351                           ;Modbas_RTU.c: 147:     {;Modbas_RTU.c: 148:    return 1;
  2352   001BDE  0E01               	movlw	1
  2353   001BE0  EFF3  F00D         	goto	l808
  2354   001BE4                     l4559:
  2355                           
  2356                           ;Modbas_RTU.c: 151:    return 0;
  2357   001BE4  0E00               	movlw	0
  2358   001BE6                     l808:
  2359   001BE6  0012               	return		;funcret
  2360   001BE8                     __end_of_Data_integrity:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function _crc_chk *****************
  2364 ;; Defined at:
  2365 ;;		line 103 in file "Modbas_RTU.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  data            2    6[COMRAM] PTR unsigned char 
  2368 ;;		 -> Danie_Rx_ModbasRtu(30), 
  2369 ;;  length          1    8[COMRAM] unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  reg_crc         2   13[COMRAM] unsigned int 
  2372 ;;  j               2   11[COMRAM] int 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  2    6[COMRAM] int 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2382 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;Total ram usage:        9 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 4
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_Data_integrity
  2393 ;;		_check_sum
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text12
  2398   001784                     __ptext12:
  2399                           	callstack 0
  2400   001784                     _crc_chk:
  2401                           	callstack 21
  2402   001784                     
  2403                           ;Modbas_RTU.c: 103:   int crc_chk (unsigned char* data, unsigned char length );Modbas_RT
      +                          U.c: 104:   {;Modbas_RTU.c: 105:   int j;;Modbas_RTU.c: 106:   unsigned int reg_crc = 0x
      +                          FFFF;
  2404   001784  680E               	setf	crc_chk@reg_crc^0,c
  2405   001786  680F               	setf	(crc_chk@reg_crc+1)^0,c
  2406                           
  2407                           ;Modbas_RTU.c: 107:  while (length--)
  2408   001788  EFFF  F00B         	goto	l4185
  2409   00178C                     l4167:
  2410                           
  2411                           ;Modbas_RTU.c: 108:  {;Modbas_RTU.c: 109:    reg_crc ^= *data++;
  2412   00178C  C007  FFD9         	movff	crc_chk@data,fsr2l
  2413   001790  C008  FFDA         	movff	crc_chk@data+1,fsr2h
  2414   001794  50DF               	movf	indf2,w,c
  2415   001796  6E0A               	movwf	??_crc_chk^0,c
  2416   001798  500A               	movf	??_crc_chk^0,w,c
  2417   00179A  1A0E               	xorwf	crc_chk@reg_crc^0,f,c
  2418   00179C  4A07               	infsnz	crc_chk@data^0,f,c
  2419   00179E  2A08               	incf	(crc_chk@data+1)^0,f,c
  2420   0017A0                     
  2421                           ;Modbas_RTU.c: 110:    for(j=0;j<8;j++)
  2422   0017A0  0E00               	movlw	0
  2423   0017A2  6E0D               	movwf	(crc_chk@j+1)^0,c
  2424   0017A4  0E00               	movlw	0
  2425   0017A6  6E0C               	movwf	crc_chk@j^0,c
  2426   0017A8                     l795:
  2427                           
  2428                           ;Modbas_RTU.c: 111:     {;Modbas_RTU.c: 112:    if(reg_crc & 0x01)
  2429   0017A8  A00E               	btfss	crc_chk@reg_crc^0,0,c
  2430   0017AA  EFD9  F00B         	goto	u2091
  2431   0017AE  EFDB  F00B         	goto	u2090
  2432   0017B2                     u2091:
  2433   0017B2  EFE8  F00B         	goto	l4179
  2434   0017B6                     u2090:
  2435   0017B6                     
  2436                           ;Modbas_RTU.c: 113:        {;Modbas_RTU.c: 114:       reg_crc = (reg_crc >> 1) ^ 0xA001;
  2437   0017B6  90D8               	bcf	status,0,c
  2438   0017B8  300F               	rrcf	(crc_chk@reg_crc+1)^0,w,c
  2439   0017BA  6E0B               	movwf	(??_crc_chk+1)^0,c
  2440   0017BC  300E               	rrcf	crc_chk@reg_crc^0,w,c
  2441   0017BE  6E0A               	movwf	??_crc_chk^0,c
  2442   0017C0  0E01               	movlw	1
  2443   0017C2  180A               	xorwf	??_crc_chk^0,w,c
  2444   0017C4  6E0E               	movwf	crc_chk@reg_crc^0,c
  2445   0017C6  0EA0               	movlw	160
  2446   0017C8  180B               	xorwf	(??_crc_chk+1)^0,w,c
  2447   0017CA  6E0F               	movwf	(crc_chk@reg_crc+1)^0,c
  2448                           
  2449                           ;Modbas_RTU.c: 115:        }
  2450   0017CC  EFEF  F00B         	goto	l4181
  2451   0017D0                     l4179:
  2452                           
  2453                           ;Modbas_RTU.c: 117:        {;Modbas_RTU.c: 118:       reg_crc = reg_crc >> 1;
  2454   0017D0  90D8               	bcf	status,0,c
  2455   0017D2  300F               	rrcf	(crc_chk@reg_crc+1)^0,w,c
  2456   0017D4  6E0A               	movwf	??_crc_chk^0,c
  2457   0017D6  300E               	rrcf	crc_chk@reg_crc^0,w,c
  2458   0017D8  6E0E               	movwf	crc_chk@reg_crc^0,c
  2459   0017DA  C00A  F00F         	movff	??_crc_chk,crc_chk@reg_crc+1
  2460   0017DE                     l4181:
  2461                           
  2462                           ;Modbas_RTU.c: 120:     }
  2463   0017DE  4A0C               	infsnz	crc_chk@j^0,f,c
  2464   0017E0  2A0D               	incf	(crc_chk@j+1)^0,f,c
  2465   0017E2  BE0D               	btfsc	(crc_chk@j+1)^0,7,c
  2466   0017E4  EFFD  F00B         	goto	u2101
  2467   0017E8  500D               	movf	(crc_chk@j+1)^0,w,c
  2468   0017EA  E109               	bnz	u2100
  2469   0017EC  0E08               	movlw	8
  2470   0017EE  5C0C               	subwf	crc_chk@j^0,w,c
  2471   0017F0  A0D8               	btfss	status,0,c
  2472   0017F2  EFFD  F00B         	goto	u2101
  2473   0017F6  EFFF  F00B         	goto	u2100
  2474   0017FA                     u2101:
  2475   0017FA  EFD4  F00B         	goto	l795
  2476   0017FE                     u2100:
  2477   0017FE                     l4185:
  2478                           
  2479                           ;Modbas_RTU.c: 107:  while (length--)
  2480   0017FE  0609               	decf	crc_chk@length^0,f,c
  2481   001800  2809               	incf	crc_chk@length^0,w,c
  2482   001802  A4D8               	btfss	status,2,c
  2483   001804  EF06  F00C         	goto	u2111
  2484   001808  EF08  F00C         	goto	u2110
  2485   00180C                     u2111:
  2486   00180C  EFC6  F00B         	goto	l4167
  2487   001810                     u2110:
  2488   001810                     
  2489                           ;Modbas_RTU.c: 122:  return reg_crc;
  2490   001810  C00E  F007         	movff	crc_chk@reg_crc,?_crc_chk
  2491   001814  C00F  F008         	movff	crc_chk@reg_crc+1,?_crc_chk+1
  2492   001818  0012               	return		;funcret
  2493   00181A                     __end_of_crc_chk:
  2494                           	callstack 0
  2495                           
  2496 ;; *************** function _USART_UDRE_vect *****************
  2497 ;; Defined at:
  2498 ;;		line 80 in file "Modbas_RTU.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 4
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text13
  2527   001F38                     __ptext13:
  2528                           	callstack 0
  2529   001F38                     _USART_UDRE_vect:
  2530                           	callstack 26
  2531   001F38                     
  2532                           ;Modbas_RTU.c: 83:    if (quantity_Data_ModbasRtu >= Temp_ModbasRtu )
  2533   001F38  503D               	movf	_Temp_ModbasRtu^0,w,c
  2534   001F3A  5C3E               	subwf	_quantity_Data_ModbasRtu^0,w,c
  2535   001F3C  A0D8               	btfss	status,0,c
  2536   001F3E  EFA3  F00F         	goto	u2501
  2537   001F42  EFA5  F00F         	goto	u2500
  2538   001F46                     u2501:
  2539   001F46  EFB0  F00F         	goto	l4631
  2540   001F4A                     u2500:
  2541   001F4A                     
  2542                           ;Modbas_RTU.c: 84:     {;Modbas_RTU.c: 85:    TXREG = Danie_Rx_ModbasRtu[Temp_ModbasRtu+
      +                          +];
  2543   001F4A  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  2544   001F4C  243D               	addwf	_Temp_ModbasRtu^0,w,c
  2545   001F4E  6ED9               	movwf	fsr2l,c
  2546   001F50  6ADA               	clrf	fsr2h,c
  2547   001F52  0E00               	movlw	high _Danie_Rx_ModbasRtu
  2548   001F54  22DA               	addwfc	fsr2h,f,c
  2549   001F56  50DF               	movf	indf2,w,c
  2550   001F58  6EAD               	movwf	173,c	;volatile
  2551   001F5A  2A3D               	incf	_Temp_ModbasRtu^0,f,c
  2552                           
  2553                           ;Modbas_RTU.c: 86:     }
  2554   001F5C  EFB3  F00F         	goto	l790
  2555   001F60                     l4631:
  2556                           
  2557                           ;Modbas_RTU.c: 88:     {;Modbas_RTU.c: 92:       USART_UDR_vect=0;
  2558   001F60  0E00               	movlw	0
  2559   001F62  6E3A               	movwf	_USART_UDR_vect^0,c
  2560   001F64                     
  2561                           ;Modbas_RTU.c: 94:       PIE1bits.TX1IE=1;
  2562   001F64  889D               	bsf	157,4,c	;volatile
  2563   001F66                     l790:
  2564   001F66  0012               	return		;funcret
  2565   001F68                     __end_of_USART_UDRE_vect:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _SYSTEM_Initialize *****************
  2569 ;; Defined at:
  2570 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 6
  2591 ;; This function calls:
  2592 ;;		_EUSART_Initialize
  2593 ;;		_I2C_Initialize
  2594 ;;		_INTERRUPT_Initialize
  2595 ;;		_OSCILLATOR_Initialize
  2596 ;;		_PIN_MANAGER_Initialize
  2597 ;;		_TMR0_Initialize
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text14
  2604   00211A                     __ptext14:
  2605                           	callstack 0
  2606   00211A                     _SYSTEM_Initialize:
  2607                           	callstack 24
  2608   00211A                     
  2609                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2610   00211A  EC63  F011         	call	_INTERRUPT_Initialize	;wreg free
  2611   00211E                     
  2612                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  2613   00211E  ECBF  F010         	call	_I2C_Initialize	;wreg free
  2614   002122                     
  2615                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2616   002122  EC37  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  2617   002126                     
  2618                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2619   002126  EC0B  F011         	call	_OSCILLATOR_Initialize	;wreg free
  2620   00212A                     
  2621                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  2622   00212A  EC5C  F010         	call	_TMR0_Initialize	;wreg free
  2623   00212E                     
  2624                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2625   00212E  EC12  F00D         	call	_EUSART_Initialize	;wreg free
  2626   002132  0012               	return		;funcret
  2627   002134                     __end_of_SYSTEM_Initialize:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _TMR0_Initialize *****************
  2631 ;; Defined at:
  2632 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 5
  2653 ;; This function calls:
  2654 ;;		_TMR0_SetInterruptHandler
  2655 ;; This function is called by:
  2656 ;;		_SYSTEM_Initialize
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text15
  2661   0020B8                     __ptext15:
  2662                           	callstack 0
  2663   0020B8                     _TMR0_Initialize:
  2664                           	callstack 24
  2665   0020B8                     
  2666                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x00;
  2667   0020B8  0E00               	movlw	0
  2668   0020BA  6ED7               	movwf	215,c	;volatile
  2669                           
  2670                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xE1;
  2671   0020BC  0EE1               	movlw	225
  2672   0020BE  6ED6               	movwf	214,c	;volatile
  2673                           
  2674                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal = 225;
  2675   0020C0  0EE1               	movlw	225
  2676   0020C2  6E4C               	movwf	_timer0ReloadVal^0,c	;volatile
  2677   0020C4                     
  2678                           ;mcc_generated_files/tmr0.c: 83:     INTCONbits.TMR0IF = 0;
  2679   0020C4  94F2               	bcf	242,2,c	;volatile
  2680   0020C6                     
  2681                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IE = 1;
  2682   0020C6  8AF2               	bsf	242,5,c	;volatile
  2683   0020C8                     
  2684                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2685   0020C8  0E02               	movlw	low _TMR0_DefaultInterruptHandler
  2686   0020CA  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2687   0020CC  0E23               	movlw	high _TMR0_DefaultInterruptHandler
  2688   0020CE  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2689   0020D0  EC06  F011         	call	_TMR0_SetInterruptHandler	;wreg free
  2690   0020D4                     
  2691                           ;mcc_generated_files/tmr0.c: 92:     T0CON = 0x57;
  2692   0020D4  0E57               	movlw	87
  2693   0020D6  6ED5               	movwf	213,c	;volatile
  2694   0020D8  0012               	return		;funcret
  2695   0020DA                     __end_of_TMR0_Initialize:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _TMR0_SetInterruptHandler *****************
  2699 ;; Defined at:
  2700 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  2703 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;Total ram usage:        2 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 4
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_TMR0_Initialize
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text16
  2730   00220C                     __ptext16:
  2731                           	callstack 0
  2732   00220C                     _TMR0_SetInterruptHandler:
  2733                           	callstack 24
  2734   00220C                     
  2735                           ;mcc_generated_files/tmr0.c: 150:     TMR0_InterruptHandler = InterruptHandler;
  2736   00220C  C007  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2737   002210  C008  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2738   002214  0012               	return		;funcret
  2739   002216                     __end_of_TMR0_SetInterruptHandler:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _PIN_MANAGER_Initialize *****************
  2743 ;; Defined at:
  2744 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 4
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_SYSTEM_Initialize
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text17
  2773   00206E                     __ptext17:
  2774                           	callstack 0
  2775   00206E                     _PIN_MANAGER_Initialize:
  2776                           	callstack 25
  2777   00206E                     
  2778                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2779   00206E  0E00               	movlw	0
  2780   002070  6E89               	movwf	137,c	;volatile
  2781                           
  2782                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2783   002072  0E00               	movlw	0
  2784   002074  6E8A               	movwf	138,c	;volatile
  2785                           
  2786                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2787   002076  0E00               	movlw	0
  2788   002078  6E8B               	movwf	139,c	;volatile
  2789                           
  2790                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFC;
  2791   00207A  0EFC               	movlw	252
  2792   00207C  6E92               	movwf	146,c	;volatile
  2793   00207E                     
  2794                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  2795   00207E  6893               	setf	147,c	;volatile
  2796                           
  2797                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  2798   002080  0EBF               	movlw	191
  2799   002082  6E94               	movwf	148,c	;volatile
  2800                           
  2801                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x13;
  2802   002084  0E13               	movlw	19
  2803   002086  6E7E               	movwf	126,c	;volatile
  2804                           
  2805                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
  2806   002088  0E1F               	movlw	31
  2807   00208A  6E7F               	movwf	127,c	;volatile
  2808                           
  2809                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  2810   00208C  0E00               	movlw	0
  2811   00208E  6E7C               	movwf	124,c	;volatile
  2812   002090                     
  2813                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  2814   002090  8EF1               	bsf	241,7,c	;volatile
  2815   002092  0012               	return		;funcret
  2816   002094                     __end_of_PIN_MANAGER_Initialize:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _OSCILLATOR_Initialize *****************
  2820 ;; Defined at:
  2821 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 4
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_SYSTEM_Initialize
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text18
  2850   002216                     __ptext18:
  2851                           	callstack 0
  2852   002216                     _OSCILLATOR_Initialize:
  2853                           	callstack 25
  2854   002216                     
  2855                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x60;
  2856   002216  0E60               	movlw	96
  2857   002218  6ED3               	movwf	211,c	;volatile
  2858                           
  2859                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2860   00221A  0E00               	movlw	0
  2861   00221C  6E9B               	movwf	155,c	;volatile
  2862   00221E  0012               	return		;funcret
  2863   002220                     __end_of_OSCILLATOR_Initialize:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _INTERRUPT_Initialize *****************
  2867 ;; Defined at:
  2868 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		None
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 4
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_SYSTEM_Initialize
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text19
  2897   0022C6                     __ptext19:
  2898                           	callstack 0
  2899   0022C6                     _INTERRUPT_Initialize:
  2900                           	callstack 25
  2901   0022C6                     
  2902                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2903   0022C6  9ED0               	bcf	208,7,c	;volatile
  2904   0022C8  0012               	return		;funcret
  2905   0022CA                     __end_of_INTERRUPT_Initialize:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _I2C_Initialize *****************
  2909 ;; Defined at:
  2910 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 4
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_SYSTEM_Initialize
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text20
  2939   00217E                     __ptext20:
  2940                           	callstack 0
  2941   00217E                     _I2C_Initialize:
  2942                           	callstack 25
  2943   00217E                     
  2944                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  2945   00217E  0E00               	movlw	0
  2946   002180  6EC7               	movwf	199,c	;volatile
  2947                           
  2948                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2949   002182  0E08               	movlw	8
  2950   002184  6EC6               	movwf	198,c	;volatile
  2951                           
  2952                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2953   002186  0E00               	movlw	0
  2954   002188  6EC5               	movwf	197,c	;volatile
  2955                           
  2956                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  2957   00218A  0E13               	movlw	19
  2958   00218C  6EC8               	movwf	200,c	;volatile
  2959   00218E                     
  2960                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2961   00218E  9AC6               	bcf	198,5,c	;volatile
  2962   002190  0012               	return		;funcret
  2963   002192                     __end_of_I2C_Initialize:
  2964                           	callstack 0
  2965                           
  2966 ;; *************** function _EUSART_Initialize *****************
  2967 ;; Defined at:
  2968 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 5
  2989 ;; This function calls:
  2990 ;;		_EUSART_SetErrorHandler
  2991 ;;		_EUSART_SetFramingErrorHandler
  2992 ;;		_EUSART_SetOverrunErrorHandler
  2993 ;;		_EUSART_SetRxInterruptHandler
  2994 ;;		_EUSART_SetTxInterruptHandler
  2995 ;; This function is called by:
  2996 ;;		_SYSTEM_Initialize
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text21
  3001   001A24                     __ptext21:
  3002                           	callstack 0
  3003   001A24                     _EUSART_Initialize:
  3004                           	callstack 24
  3005   001A24                     
  3006                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  3007   001A24  9A9D               	bcf	157,5,c	;volatile
  3008   001A26                     
  3009                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3010   001A26  0E24               	movlw	low _EUSART_Receive_ISR
  3011   001A28  6E07               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  3012   001A2A  0E16               	movlw	high _EUSART_Receive_ISR
  3013   001A2C  6E08               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  3014   001A2E  EC15  F011         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3015   001A32                     
  3016                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  3017   001A32  989D               	bcf	157,4,c	;volatile
  3018                           
  3019                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3020   001A34  0E4C               	movlw	low _EUSART_Transmit_ISR
  3021   001A36  6E07               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  3022   001A38  0E1E               	movlw	high _EUSART_Transmit_ISR
  3023   001A3A  6E08               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  3024   001A3C  EC10  F011         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3025   001A40                     
  3026                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3027   001A40  0E08               	movlw	8
  3028   001A42  6EB8               	movwf	184,c	;volatile
  3029   001A44                     
  3030                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3031   001A44  0E90               	movlw	144
  3032   001A46  6EAB               	movwf	171,c	;volatile
  3033   001A48                     
  3034                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3035   001A48  0E24               	movlw	36
  3036   001A4A  6EAC               	movwf	172,c	;volatile
  3037   001A4C                     
  3038                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  3039   001A4C  0ECF               	movlw	207
  3040   001A4E  6EAF               	movwf	175,c	;volatile
  3041   001A50                     
  3042                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3043   001A50  0E00               	movlw	0
  3044   001A52  6EB0               	movwf	176,c	;volatile
  3045   001A54                     
  3046                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3047   001A54  0E04               	movlw	low _EUSART_DefaultFramingErrorHandler
  3048   001A56  6E07               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  3049   001A58  0E23               	movlw	high _EUSART_DefaultFramingErrorHandler
  3050   001A5A  6E08               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  3051   001A5C  EC1F  F011         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3052   001A60                     
  3053                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3054   001A60  0EBA               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3055   001A62  6E07               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  3056   001A64  0E22               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3057   001A66  6E08               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3058   001A68  EC1A  F011         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3059   001A6C                     
  3060                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3061   001A6C  0EC0               	movlw	low _EUSART_DefaultErrorHandler
  3062   001A6E  6E07               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  3063   001A70  0E22               	movlw	high _EUSART_DefaultErrorHandler
  3064   001A72  6E08               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  3065   001A74  EC24  F011         	call	_EUSART_SetErrorHandler	;wreg free
  3066                           
  3067                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3068   001A78  0E00               	movlw	0
  3069   001A7A  6E34               	movwf	_eusartRxLastError^0,c	;volatile
  3070                           
  3071                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3072   001A7C  0E00               	movlw	0
  3073   001A7E  6E39               	movwf	_eusartTxHead^0,c	;volatile
  3074                           
  3075                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3076   001A80  0E00               	movlw	0
  3077   001A82  6E38               	movwf	_eusartTxTail^0,c	;volatile
  3078                           
  3079                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3080   001A84  0E08               	movlw	8
  3081   001A86  6E4B               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  3082                           
  3083                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3084   001A88  0E00               	movlw	0
  3085   001A8A  6E37               	movwf	_eusartRxHead^0,c	;volatile
  3086                           
  3087                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3088   001A8C  0E00               	movlw	0
  3089   001A8E  6E36               	movwf	_eusartRxTail^0,c	;volatile
  3090                           
  3091                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3092   001A90  0E00               	movlw	0
  3093   001A92  6E35               	movwf	_eusartRxCount^0,c	;volatile
  3094   001A94                     
  3095                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  3096   001A94  8A9D               	bsf	157,5,c	;volatile
  3097   001A96  0012               	return		;funcret
  3098   001A98                     __end_of_EUSART_Initialize:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3102 ;; Defined at:
  3103 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3106 ;;		 -> USART_TXC_vect(1), EUSART_Transmit_ISR(1), 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;Total ram usage:        2 bytes
  3123 ;; Hardware stack levels used: 1
  3124 ;; Hardware stack levels required when called: 4
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_EUSART_Initialize
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text22
  3134   002220                     __ptext22:
  3135                           	callstack 0
  3136   002220                     _EUSART_SetTxInterruptHandler:
  3137                           	callstack 24
  3138   002220                     
  3139                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3140   002220  C007  F047         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3141   002224  C008  F048         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3142   002228  0012               	return		;funcret
  3143   00222A                     __end_of_EUSART_SetTxInterruptHandler:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3147 ;; Defined at:
  3148 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3151 ;;		 -> USART_RXC_vect(1), EUSART_Receive_ISR(1), 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;Total ram usage:        2 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 4
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_EUSART_Initialize
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text23
  3179   00222A                     __ptext23:
  3180                           	callstack 0
  3181   00222A                     _EUSART_SetRxInterruptHandler:
  3182                           	callstack 24
  3183   00222A                     
  3184                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3185   00222A  C007  F045         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3186   00222E  C008  F046         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3187   002232  0012               	return		;funcret
  3188   002234                     __end_of_EUSART_SetRxInterruptHandler:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3192 ;; Defined at:
  3193 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3196 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;Total ram usage:        2 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 4
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_EUSART_Initialize
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text24
  3223   002234                     __ptext24:
  3224                           	callstack 0
  3225   002234                     _EUSART_SetOverrunErrorHandler:
  3226                           	callstack 24
  3227   002234                     
  3228                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3229   002234  C007  F0DF         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3230   002238  C008  F0E0         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3231   00223C  0012               	return		;funcret
  3232   00223E                     __end_of_EUSART_SetOverrunErrorHandler:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3236 ;; Defined at:
  3237 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3240 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;Total ram usage:        2 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 4
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_EUSART_Initialize
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text25
  3267   00223E                     __ptext25:
  3268                           	callstack 0
  3269   00223E                     _EUSART_SetFramingErrorHandler:
  3270                           	callstack 24
  3271   00223E                     
  3272                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3273   00223E  C007  F043         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  3274   002242  C008  F044         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  3275   002246  0012               	return		;funcret
  3276   002248                     __end_of_EUSART_SetFramingErrorHandler:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function _EUSART_SetErrorHandler *****************
  3280 ;; Defined at:
  3281 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3284 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;Total ram usage:        2 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 4
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_EUSART_Initialize
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text26
  3311   002248                     __ptext26:
  3312                           	callstack 0
  3313   002248                     _EUSART_SetErrorHandler:
  3314                           	callstack 24
  3315   002248                     
  3316                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3317   002248  C007  F0DD         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  3318   00224C  C008  F0DE         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  3319   002250  0012               	return		;funcret
  3320   002252                     __end_of_EUSART_SetErrorHandler:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _I2C_WriteNBytes *****************
  3324 ;; Defined at:
  3325 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  address         1    wreg     unsigned char 
  3328 ;;  data            2   23[COMRAM] PTR unsigned char 
  3329 ;;		 -> main@red(3), main@dat(3), 
  3330 ;;  len             2   25[COMRAM] unsigned int 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  address         1   27[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;Total ram usage:        5 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 12
  3349 ;; This function calls:
  3350 ;;		_I2C_Close
  3351 ;;		_I2C_MasterWrite
  3352 ;;		_I2C_Open
  3353 ;;		_I2C_SetAddressNackCallback
  3354 ;;		_I2C_SetBuffer
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text27
  3361   001C4E                     __ptext27:
  3362                           	callstack 0
  3363   001C4E                     _I2C_WriteNBytes:
  3364                           	callstack 18
  3365                           
  3366                           ;incstack = 0
  3367                           ;I2C_WriteNBytes@address stored from wreg
  3368   001C4E  6E1C               	movwf	I2C_WriteNBytes@address^0,c
  3369   001C50                     l4593:
  3370   001C50  501C               	movf	I2C_WriteNBytes@address^0,w,c
  3371   001C52  EC0D  F00C         	call	_I2C_Open
  3372   001C56  0900               	iorlw	0
  3373   001C58  B4D8               	btfsc	status,2,c
  3374   001C5A  EF31  F00E         	goto	u2461
  3375   001C5E  EF33  F00E         	goto	u2460
  3376   001C62                     u2461:
  3377   001C62  EF28  F00E         	goto	l4593
  3378   001C66                     u2460:
  3379   001C66                     
  3380                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  3381   001C66  C018  F007         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  3382   001C6A  C019  F008         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  3383   001C6E  C01A  F009         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  3384   001C72  C01B  F00A         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  3385   001C76  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  3386   001C7A                     
  3387                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  3388   001C7A  0E00               	movlw	0
  3389   001C7C  6E0C               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3390   001C7E  0E00               	movlw	0
  3391   001C80  6E0D               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3392   001C82  0E00               	movlw	0
  3393   001C84  6E0E               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3394   001C86  0E00               	movlw	0
  3395   001C88  6E0F               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3396   001C8A  ECA7  F010         	call	_I2C_SetAddressNackCallback	;wreg free
  3397   001C8E                     
  3398                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  3399   001C8E  EC29  F011         	call	_I2C_MasterWrite	;wreg free
  3400   001C92                     l4601:
  3401   001C92  EC0C  F010         	call	_I2C_Close	;wreg free
  3402   001C96  06E8               	decf	wreg,f,c
  3403   001C98  B4D8               	btfsc	status,2,c
  3404   001C9A  EF51  F00E         	goto	u2471
  3405   001C9E  EF53  F00E         	goto	u2470
  3406   001CA2                     u2471:
  3407   001CA2  EF49  F00E         	goto	l4601
  3408   001CA6                     u2470:
  3409   001CA6  0012               	return		;funcret
  3410   001CA8                     __end_of_I2C_WriteNBytes:
  3411                           	callstack 0
  3412                           
  3413 ;; *************** function _I2C_SetAddressNackCallback *****************
  3414 ;; Defined at:
  3415 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  cb              2   11[COMRAM] PTR FTN(PTR void ,)enum 
  3418 ;;		 -> Absolute function(1), 
  3419 ;;  ptr             2   13[COMRAM] PTR void 
  3420 ;;		 -> NULL(0), 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;Total ram usage:        4 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 5
  3439 ;; This function calls:
  3440 ;;		_I2C_SetCallback
  3441 ;; This function is called by:
  3442 ;;		_I2C_WriteNBytes
  3443 ;;		_I2C_Read1ByteRegister
  3444 ;;		_I2C_Read2ByteRegister
  3445 ;;		_I2C_Write1ByteRegister
  3446 ;;		_I2C_Write2ByteRegister
  3447 ;;		_I2C_ReadDataBlock
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text28
  3452   00214E                     __ptext28:
  3453                           	callstack 0
  3454   00214E                     _I2C_SetAddressNackCallback:
  3455                           	callstack 24
  3456   00214E                     
  3457                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  3458   00214E  C00C  F007         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  3459   002152  C00D  F008         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  3460   002156  C00E  F009         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  3461   00215A  C00F  F00A         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  3462   00215E  0E02               	movlw	2
  3463   002160  ECD5  F00C         	call	_I2C_SetCallback
  3464   002164  0012               	return		;funcret
  3465   002166                     __end_of_I2C_SetAddressNackCallback:
  3466                           	callstack 0
  3467                           
  3468 ;; *************** function _I2C_MasterWrite *****************
  3469 ;; Defined at:
  3470 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      enum E355
  3477 ;; Registers used:
  3478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 11
  3491 ;; This function calls:
  3492 ;;		_I2C_MasterOperation
  3493 ;; This function is called by:
  3494 ;;		_I2C_WriteNBytes
  3495 ;;		_I2C_Read1ByteRegister
  3496 ;;		_I2C_Read2ByteRegister
  3497 ;;		_I2C_Write1ByteRegister
  3498 ;;		_I2C_Write2ByteRegister
  3499 ;;		_I2C_ReadDataBlock
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text29
  3504   002252                     __ptext29:
  3505                           	callstack 0
  3506   002252                     _I2C_MasterWrite:
  3507                           	callstack 18
  3508   002252                     
  3509                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  3510   002252  0E00               	movlw	0
  3511   002254  ECA2  F00E         	call	_I2C_MasterOperation
  3512   002258  0012               	return		;funcret
  3513   00225A                     __end_of_I2C_MasterWrite:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function _I2C_ReadNBytes *****************
  3517 ;; Defined at:
  3518 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  address         1    wreg     unsigned char 
  3521 ;;  data            2   23[COMRAM] PTR unsigned char 
  3522 ;;		 -> main@red2(3), 
  3523 ;;  len             2   25[COMRAM] unsigned int 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  address         1   27[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;Total ram usage:        5 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 12
  3542 ;; This function calls:
  3543 ;;		_I2C_Close
  3544 ;;		_I2C_MasterRead
  3545 ;;		_I2C_Open
  3546 ;;		_I2C_SetBuffer
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text30
  3553   001CFE                     __ptext30:
  3554                           	callstack 0
  3555   001CFE                     _I2C_ReadNBytes:
  3556                           	callstack 18
  3557                           
  3558                           ;incstack = 0
  3559                           ;I2C_ReadNBytes@address stored from wreg
  3560   001CFE  6E1C               	movwf	I2C_ReadNBytes@address^0,c
  3561   001D00                     l4605:
  3562   001D00  501C               	movf	I2C_ReadNBytes@address^0,w,c
  3563   001D02  EC0D  F00C         	call	_I2C_Open
  3564   001D06  0900               	iorlw	0
  3565   001D08  B4D8               	btfsc	status,2,c
  3566   001D0A  EF89  F00E         	goto	u2481
  3567   001D0E  EF8B  F00E         	goto	u2480
  3568   001D12                     u2481:
  3569   001D12  EF80  F00E         	goto	l4605
  3570   001D16                     u2480:
  3571   001D16                     
  3572                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  3573   001D16  C018  F007         	movff	I2C_ReadNBytes@data,I2C_SetBuffer@buffer
  3574   001D1A  C019  F008         	movff	I2C_ReadNBytes@data+1,I2C_SetBuffer@buffer+1
  3575   001D1E  C01A  F009         	movff	I2C_ReadNBytes@len,I2C_SetBuffer@bufferSize
  3576   001D22  C01B  F00A         	movff	I2C_ReadNBytes@len+1,I2C_SetBuffer@bufferSize+1
  3577   001D26  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  3578   001D2A                     
  3579                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  3580   001D2A  EC2D  F011         	call	_I2C_MasterRead	;wreg free
  3581   001D2E                     l4611:
  3582   001D2E  EC0C  F010         	call	_I2C_Close	;wreg free
  3583   001D32  06E8               	decf	wreg,f,c
  3584   001D34  B4D8               	btfsc	status,2,c
  3585   001D36  EF9F  F00E         	goto	u2491
  3586   001D3A  EFA1  F00E         	goto	u2490
  3587   001D3E                     u2491:
  3588   001D3E  EF97  F00E         	goto	l4611
  3589   001D42                     u2490:
  3590   001D42  0012               	return		;funcret
  3591   001D44                     __end_of_I2C_ReadNBytes:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _I2C_Open *****************
  3595 ;; Defined at:
  3596 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  address         1    wreg     unsigned char 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  address         1    6[COMRAM] unsigned char 
  3601 ;;  returnValue     1    7[COMRAM] enum E355
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      enum E355
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;Total ram usage:        2 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 5
  3618 ;; This function calls:
  3619 ;;		_I2C_MasterClearIrq
  3620 ;;		_I2C_MasterOpen
  3621 ;; This function is called by:
  3622 ;;		_I2C_WriteNBytes
  3623 ;;		_I2C_ReadNBytes
  3624 ;;		_I2C_Read1ByteRegister
  3625 ;;		_I2C_Read2ByteRegister
  3626 ;;		_I2C_Write1ByteRegister
  3627 ;;		_I2C_Write2ByteRegister
  3628 ;;		_I2C_ReadDataBlock
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text31
  3633   00181A                     __ptext31:
  3634                           	callstack 0
  3635   00181A                     _I2C_Open:
  3636                           	callstack 24
  3637                           
  3638                           ;incstack = 0
  3639                           ;I2C_Open@address stored from wreg
  3640   00181A  6E07               	movwf	I2C_Open@address^0,c
  3641   00181C                     
  3642                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  3643   00181C  0E01               	movlw	1
  3644   00181E  6E08               	movwf	I2C_Open@returnValue^0,c
  3645   001820                     
  3646                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  3647   001820  0100               	movlb	0	; () banked
  3648   001822  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  3649   001824  EF16  F00C         	goto	u2421
  3650   001828  EF18  F00C         	goto	u2420
  3651   00182C                     u2421:
  3652   00182C  EF52  F00C         	goto	l4465
  3653   001830                     u2420:
  3654   001830                     
  3655                           ; BSR set to: 0
  3656                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  3657   001830  C007  F07C         	movff	I2C_Open@address,_I2C_Status+28
  3658   001834                     
  3659                           ; BSR set to: 0
  3660                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  3661   001834  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  3662   001836                     
  3663                           ; BSR set to: 0
  3664                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  3665   001836  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  3666   001838                     
  3667                           ; BSR set to: 0
  3668                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  3669   001838  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  3670   00183A                     
  3671                           ; BSR set to: 0
  3672                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  3673   00183A  0E0E               	movlw	14
  3674   00183C  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3675   00183E                     
  3676                           ; BSR set to: 0
  3677                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  3678   00183E  0E01               	movlw	1
  3679   001840  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  3680   001842  0EF4               	movlw	244
  3681   001844  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  3682   001846                     
  3683                           ; BSR set to: 0
  3684                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  3685   001846  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  3686   001848                     
  3687                           ; BSR set to: 0
  3688                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  3689   001848  0EDA               	movlw	low _I2C_CallbackReturnStop
  3690   00184A  6F60               	movwf	_I2C_Status& (0+255),b
  3691   00184C  0E22               	movlw	high _I2C_CallbackReturnStop
  3692   00184E  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  3693   001850                     
  3694                           ; BSR set to: 0
  3695                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  3696   001850  0E00               	movlw	0
  3697   001852  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  3698   001854  0E00               	movlw	0
  3699   001856  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  3700   001858                     
  3701                           ; BSR set to: 0
  3702                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  3703   001858  0EDA               	movlw	low _I2C_CallbackReturnStop
  3704   00185A  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  3705   00185C  0E22               	movlw	high _I2C_CallbackReturnStop
  3706   00185E  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  3707   001860                     
  3708                           ; BSR set to: 0
  3709                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  3710   001860  0E00               	movlw	0
  3711   001862  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  3712   001864  0E00               	movlw	0
  3713   001866  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  3714   001868                     
  3715                           ; BSR set to: 0
  3716                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  3717   001868  0EDA               	movlw	low _I2C_CallbackReturnStop
  3718   00186A  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  3719   00186C  0E22               	movlw	high _I2C_CallbackReturnStop
  3720   00186E  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  3721   001870                     
  3722                           ; BSR set to: 0
  3723                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  3724   001870  0E00               	movlw	0
  3725   001872  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  3726   001874  0E00               	movlw	0
  3727   001876  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  3728   001878                     
  3729                           ; BSR set to: 0
  3730                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  3731   001878  0EDA               	movlw	low _I2C_CallbackReturnStop
  3732   00187A  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  3733   00187C  0E22               	movlw	high _I2C_CallbackReturnStop
  3734   00187E  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  3735   001880                     
  3736                           ; BSR set to: 0
  3737                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  3738   001880  0E00               	movlw	0
  3739   001882  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  3740   001884  0E00               	movlw	0
  3741   001886  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  3742   001888                     
  3743                           ; BSR set to: 0
  3744                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  3745   001888  0ED6               	movlw	low _I2C_CallbackReturnReset
  3746   00188A  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  3747   00188C  0E22               	movlw	high _I2C_CallbackReturnReset
  3748   00188E  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  3749   001890                     
  3750                           ; BSR set to: 0
  3751                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  3752   001890  0E00               	movlw	0
  3753   001892  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  3754   001894  0E00               	movlw	0
  3755   001896  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  3756   001898                     
  3757                           ; BSR set to: 0
  3758                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  3759   001898  EC79  F011         	call	_I2C_MasterClearIrq	;wreg free
  3760   00189C                     
  3761                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  3762   00189C  EC6D  F010         	call	_I2C_MasterOpen	;wreg free
  3763   0018A0                     
  3764                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  3765   0018A0  0E00               	movlw	0
  3766   0018A2  6E08               	movwf	I2C_Open@returnValue^0,c
  3767   0018A4                     l4465:
  3768                           
  3769                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  3770   0018A4  5008               	movf	I2C_Open@returnValue^0,w,c
  3771   0018A6  0012               	return		;funcret
  3772   0018A8                     __end_of_I2C_Open:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _I2C_MasterOpen *****************
  3776 ;; Defined at:
  3777 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      _Bool 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 4
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_I2C_Open
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text32
  3806   0020DA                     __ptext32:
  3807                           	callstack 0
  3808   0020DA                     _I2C_MasterOpen:
  3809                           	callstack 24
  3810   0020DA                     
  3811                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  3812   0020DA  BAC6               	btfsc	198,5,c	;volatile
  3813   0020DC  EF72  F010         	goto	u2241
  3814   0020E0  EF74  F010         	goto	u2240
  3815   0020E4                     u2241:
  3816   0020E4  EF7D  F010         	goto	l378
  3817   0020E8                     u2240:
  3818   0020E8                     
  3819                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  3820   0020E8  0E00               	movlw	0
  3821   0020EA  6EC7               	movwf	199,c	;volatile
  3822                           
  3823                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  3824   0020EC  0E08               	movlw	8
  3825   0020EE  6EC6               	movwf	198,c	;volatile
  3826                           
  3827                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  3828   0020F0  0E00               	movlw	0
  3829   0020F2  6EC5               	movwf	197,c	;volatile
  3830                           
  3831                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  3832   0020F4  0E13               	movlw	19
  3833   0020F6  6EC8               	movwf	200,c	;volatile
  3834   0020F8                     
  3835                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  3836   0020F8  8AC6               	bsf	198,5,c	;volatile
  3837   0020FA                     l378:
  3838   0020FA  0012               	return		;funcret
  3839   0020FC                     __end_of_I2C_MasterOpen:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function _I2C_MasterRead *****************
  3843 ;; Defined at:
  3844 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      enum E355
  3851 ;; Registers used:
  3852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 11
  3865 ;; This function calls:
  3866 ;;		_I2C_MasterOperation
  3867 ;; This function is called by:
  3868 ;;		_I2C_ReadNBytes
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text33
  3873   00225A                     __ptext33:
  3874                           	callstack 0
  3875   00225A                     _I2C_MasterRead:
  3876                           	callstack 18
  3877   00225A                     
  3878                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  3879   00225A  0E01               	movlw	1
  3880   00225C  ECA2  F00E         	call	_I2C_MasterOperation
  3881   002260  0012               	return		;funcret
  3882   002262                     __end_of_I2C_MasterRead:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function _I2C_MasterOperation *****************
  3886 ;; Defined at:
  3887 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  read            1    wreg     _Bool 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  read            1   21[COMRAM] _Bool 
  3892 ;;  returnValue     1   22[COMRAM] enum E355
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      enum E355
  3895 ;; Registers used:
  3896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:        2 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 10
  3909 ;; This function calls:
  3910 ;;		_I2C_MasterStart
  3911 ;;		_I2C_Poller
  3912 ;; This function is called by:
  3913 ;;		_I2C_MasterRead
  3914 ;;		_I2C_MasterWrite
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text34
  3919   001D44                     __ptext34:
  3920                           	callstack 0
  3921   001D44                     _I2C_MasterOperation:
  3922                           	callstack 18
  3923                           
  3924                           ;incstack = 0
  3925                           ;I2C_MasterOperation@read stored from wreg
  3926   001D44  6E16               	movwf	I2C_MasterOperation@read^0,c
  3927   001D46                     
  3928                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  3929   001D46  0E01               	movlw	1
  3930   001D48  6E17               	movwf	I2C_MasterOperation@returnValue^0,c
  3931   001D4A                     
  3932                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  3933   001D4A  0100               	movlb	0	; () banked
  3934   001D4C  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  3935   001D4E  EFAB  F00E         	goto	u2251
  3936   001D52  EFAD  F00E         	goto	u2250
  3937   001D56                     u2251:
  3938   001D56  EFC2  F00E         	goto	l4289
  3939   001D5A                     u2250:
  3940   001D5A                     
  3941                           ; BSR set to: 0
  3942                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  3943   001D5A  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  3944   001D5C                     
  3945                           ; BSR set to: 0
  3946                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  3947   001D5C  0E00               	movlw	0
  3948   001D5E  6E17               	movwf	I2C_MasterOperation@returnValue^0,c
  3949   001D60                     
  3950                           ; BSR set to: 0
  3951                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  3952   001D60  5016               	movf	I2C_MasterOperation@read^0,w,c
  3953   001D62  B4D8               	btfsc	status,2,c
  3954   001D64  EFB6  F00E         	goto	u2261
  3955   001D68  EFB8  F00E         	goto	u2260
  3956   001D6C                     u2261:
  3957   001D6C  EFBC  F00E         	goto	l4283
  3958   001D70                     u2260:
  3959   001D70                     
  3960                           ; BSR set to: 0
  3961                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  3962   001D70  0E01               	movlw	1
  3963   001D72  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3964                           
  3965                           ;mcc_generated_files/i2c_master.c: 235:         }
  3966   001D74  EFBE  F00E         	goto	l4285
  3967   001D78                     l4283:
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  3971   001D78  0E02               	movlw	2
  3972   001D7A  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3973   001D7C                     l4285:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  3977   001D7C  EC73  F011         	call	_I2C_MasterStart	;wreg free
  3978   001D80                     
  3979                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  3980   001D80  EC7E  F010         	call	_I2C_Poller	;wreg free
  3981   001D84                     l4289:
  3982                           
  3983                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  3984   001D84  5017               	movf	I2C_MasterOperation@returnValue^0,w,c
  3985   001D86  0012               	return		;funcret
  3986   001D88                     __end_of_I2C_MasterOperation:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _I2C_Poller *****************
  3990 ;; Defined at:
  3991 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 9
  4012 ;; This function calls:
  4013 ;;		_I2C_MasterFsm
  4014 ;;		_I2C_MasterWaitForEvent
  4015 ;; This function is called by:
  4016 ;;		_I2C_MasterOperation
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text35
  4021   0020FC                     __ptext35:
  4022                           	callstack 0
  4023   0020FC                     _I2C_Poller:
  4024                           	callstack 18
  4025   0020FC                     
  4026                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4027   0020FC  EF84  F010         	goto	l4217
  4028   002100                     l4213:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  4032   002100  ECDC  F010         	call	_I2C_MasterWaitForEvent	;wreg free
  4033   002104                     
  4034                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  4035   002104  EC85  F00D         	call	_I2C_MasterFsm	;wreg free
  4036   002108                     l4217:
  4037                           
  4038                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4039   002108  0100               	movlb	0	; () banked
  4040   00210A  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4041   00210C  EF8A  F010         	goto	u2161
  4042   002110  EF8C  F010         	goto	u2160
  4043   002114                     u2161:
  4044   002114  EF80  F010         	goto	l4213
  4045   002118                     u2160:
  4046   002118                     
  4047                           ; BSR set to: 0
  4048   002118  0012               	return		;funcret
  4049   00211A                     __end_of_I2C_Poller:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _I2C_MasterWaitForEvent *****************
  4053 ;; Defined at:
  4054 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		None
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;Total ram usage:        0 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 4
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_I2C_Poller
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text36
  4083   0021B8                     __ptext36:
  4084                           	callstack 0
  4085   0021B8                     _I2C_MasterWaitForEvent:
  4086                           	callstack 22
  4087   0021B8                     l435:
  4088                           
  4089                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  4090   0021B8  A69E               	btfss	158,3,c	;volatile
  4091   0021BA  EFE1  F010         	goto	u2121
  4092   0021BE  EFE3  F010         	goto	u2120
  4093   0021C2                     u2121:
  4094   0021C2  EFDC  F010         	goto	l435
  4095   0021C6                     u2120:
  4096   0021C6  0012               	return		;funcret
  4097   0021C8                     __end_of_I2C_MasterWaitForEvent:
  4098                           	callstack 0
  4099                           
  4100 ;; *************** function _I2C_MasterFsm *****************
  4101 ;; Defined at:
  4102 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;		None
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;		None
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      void 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;Total ram usage:        2 bytes
  4121 ;; Hardware stack levels used: 1
  4122 ;; Hardware stack levels required when called: 8
  4123 ;; This function calls:
  4124 ;;		_I2C_DO_ADDRESS_NACK
  4125 ;;		_I2C_DO_IDLE
  4126 ;;		_I2C_DO_RCEN
  4127 ;;		_I2C_DO_RESET
  4128 ;;		_I2C_DO_RX
  4129 ;;		_I2C_DO_RX_ACK
  4130 ;;		_I2C_DO_RX_NACK_RESTART
  4131 ;;		_I2C_DO_RX_NACK_STOP
  4132 ;;		_I2C_DO_SEND_ADR_READ
  4133 ;;		_I2C_DO_SEND_ADR_WRITE
  4134 ;;		_I2C_DO_SEND_RESTART
  4135 ;;		_I2C_DO_SEND_RESTART_READ
  4136 ;;		_I2C_DO_SEND_RESTART_WRITE
  4137 ;;		_I2C_DO_SEND_STOP
  4138 ;;		_I2C_DO_TX
  4139 ;;		_I2C_DO_TX_EMPTY
  4140 ;;		_I2C_MasterClearIrq
  4141 ;;		_I2C_MasterIsNack
  4142 ;; This function is called by:
  4143 ;;		_I2C_Poller
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text37
  4148   001B0A                     __ptext37:
  4149                           	callstack 0
  4150   001B0A                     _I2C_MasterFsm:
  4151                           	callstack 18
  4152   001B0A                     
  4153                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  4154   001B0A  EC79  F011         	call	_I2C_MasterClearIrq	;wreg free
  4155   001B0E                     
  4156                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4157   001B0E  0100               	movlb	0	; () banked
  4158   001B10  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  4159   001B12  EF8D  F00D         	goto	u2131
  4160   001B16  EF8F  F00D         	goto	u2130
  4161   001B1A                     u2131:
  4162   001B1A  EF9C  F00D         	goto	l4197
  4163   001B1E                     u2130:
  4164   001B1E                     
  4165                           ; BSR set to: 0
  4166   001B1E  ECC9  F010         	call	_I2C_MasterIsNack	;wreg free
  4167   001B22  0900               	iorlw	0
  4168   001B24  B4D8               	btfsc	status,2,c
  4169   001B26  EF97  F00D         	goto	u2141
  4170   001B2A  EF99  F00D         	goto	u2140
  4171   001B2E                     u2141:
  4172   001B2E  EF9C  F00D         	goto	l4197
  4173   001B32                     u2140:
  4174   001B32                     
  4175                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4176   001B32  0E0F               	movlw	15
  4177   001B34  0100               	movlb	0	; () banked
  4178   001B36  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4179   001B38                     l4197:
  4180                           
  4181                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  4182   001B38  0100               	movlb	0	; () banked
  4183   001B3A  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  4184   001B3C  0D02               	mullw	2
  4185   001B3E  0E01               	movlw	low _i2c_fsmStateTable
  4186   001B40  24F3               	addwf	243,w,c
  4187   001B42  6EF6               	movwf	tblptrl,c
  4188   001B44  0E10               	movlw	high _i2c_fsmStateTable
  4189   001B46  20F4               	addwfc	244,w,c
  4190   001B48  6EF7               	movwf	tblptrh,c
  4191   001B4A                     	if	1	;There are 3 active tblptr bytes
  4192   001B4A  6AF8               	clrf	tblptru,c
  4193   001B4C  0E00               	movlw	low (__mediumconst shr (0+16))
  4194   001B4E  22F8               	addwfc	tblptru,f,c
  4195   001B50                     	endif
  4196   001B50  0009               	tblrd		*+
  4197   001B52  CFF5 F014          	movff	tablat,??_I2C_MasterFsm
  4198   001B56  0009               	tblrd		*+
  4199   001B58  CFF5 F015          	movff	tablat,??_I2C_MasterFsm+1
  4200   001B5C  D802               	call	u2158
  4201   001B5E  EFBA  F00D         	goto	u2159
  4202   001B62                     u2158:
  4203   001B62  0005               	push	
  4204   001B64  6EFA               	movwf	pclath,c
  4205   001B66  5014               	movf	??_I2C_MasterFsm^0,w,c
  4206   001B68  6EFD               	movwf	tosl,c
  4207   001B6A  5015               	movf	(??_I2C_MasterFsm+1)^0,w,c
  4208   001B6C  6EFE               	movwf	tosh,c
  4209   001B6E  6AFF               	clrf	tosu,c
  4210   001B70  50FA               	movf	pclath,w,c
  4211   001B72  0012               	return		;indir
  4212   001B74                     u2159:
  4213   001B74  0100               	movlb	0	; () banked
  4214   001B76  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4215   001B78                     
  4216                           ; BSR set to: 0
  4217   001B78  0012               	return		;funcret
  4218   001B7A                     __end_of_I2C_MasterFsm:
  4219                           	callstack 0
  4220                           
  4221 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4222 ;; Defined at:
  4223 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      enum E2846
  4230 ;; Registers used:
  4231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;Total ram usage:        2 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 7
  4244 ;; This function calls:
  4245 ;;		Absolute function
  4246 ;;		_I2C_CallbackReturnReset
  4247 ;;		_I2C_CallbackReturnStop
  4248 ;;		_I2C_DO_SEND_RESTART
  4249 ;;		_I2C_DO_SEND_STOP
  4250 ;;		_rd1RegCompleteHandler
  4251 ;;		_rd2RegCompleteHandler
  4252 ;;		_rdBlkRegCompleteHandler
  4253 ;;		_wr1RegCompleteHandler
  4254 ;;		_wr2RegCompleteHandler
  4255 ;; This function is called by:
  4256 ;;		_I2C_MasterFsm
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text38
  4261   001BE8                     __ptext38:
  4262                           	callstack 0
  4263   001BE8                     _I2C_DO_ADDRESS_NACK:
  4264                           	callstack 18
  4265   001BE8                     
  4266                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  4267   001BE8  0100               	movlb	0	; () banked
  4268   001BEA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4269   001BEC                     
  4270                           ; BSR set to: 0
  4271                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  4272   001BEC  0E02               	movlw	2
  4273   001BEE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4274                           
  4275                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4276   001BF0  EF02  F00E         	goto	l4159
  4277   001BF4                     l4149:
  4278                           
  4279                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  4280   001BF4  EC41  F011         	call	_I2C_DO_SEND_RESTART	;wreg free
  4281   001BF8  EF26  F00E         	goto	l357
  4282   001BFC                     l4153:
  4283                           
  4284                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  4285   001BFC  EC3D  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  4286   001C00  EF26  F00E         	goto	l357
  4287   001C04                     l4159:
  4288                           
  4289                           ; BSR set to: 0
  4290   001C04  C070  F010         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  4291   001C08  C071  F011         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  4292   001C0C  D802               	call	u2088
  4293   001C0E  EF12  F00E         	goto	u2089
  4294   001C12                     u2088:
  4295   001C12  0005               	push	
  4296   001C14  6EFA               	movwf	pclath,c
  4297   001C16  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  4298   001C18  6EFD               	movwf	tosl,c
  4299   001C1A  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  4300   001C1C  6EFE               	movwf	tosh,c
  4301   001C1E  6AFF               	clrf	tosu,c
  4302   001C20  50FA               	movf	pclath,w,c
  4303   001C22  0012               	return		;indir
  4304   001C24                     u2089:
  4305   001C24  6E12               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  4306   001C26  6A13               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  4307                           
  4308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4309                           ; Switch size 1, requested type "simple"
  4310                           ; Number of cases is 1, Range of values is 0 to 0
  4311                           ; switch strategies available:
  4312                           ; Name         Instructions Cycles
  4313                           ; simple_byte            4     3 (average)
  4314                           ;	Chosen strategy is simple_byte
  4315   001C28  5013               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  4316   001C2A  0A00               	xorlw	0	; case 0
  4317   001C2C  B4D8               	btfsc	status,2,c
  4318   001C2E  EF1B  F00E         	goto	l4899
  4319   001C32  EFFE  F00D         	goto	l4153
  4320   001C36                     l4899:
  4321                           
  4322                           ; Switch size 1, requested type "simple"
  4323                           ; Number of cases is 2, Range of values is 2 to 3
  4324                           ; switch strategies available:
  4325                           ; Name         Instructions Cycles
  4326                           ; simple_byte            7     4 (average)
  4327                           ;	Chosen strategy is simple_byte
  4328   001C36  5012               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  4329   001C38  0A02               	xorlw	2	; case 2
  4330   001C3A  B4D8               	btfsc	status,2,c
  4331   001C3C  EFFA  F00D         	goto	l4149
  4332   001C40  0A01               	xorlw	1	; case 3
  4333   001C42  B4D8               	btfsc	status,2,c
  4334   001C44  EFFA  F00D         	goto	l4149
  4335   001C48  EFFE  F00D         	goto	l4153
  4336   001C4C                     l357:
  4337   001C4C  0012               	return		;funcret
  4338   001C4E                     __end_of_I2C_DO_ADDRESS_NACK:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function _I2C_DO_RESET *****************
  4342 ;; Defined at:
  4343 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      enum E2846
  4350 ;; Registers used:
  4351 ;;		wreg, status,2
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 4
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_I2C_MasterFsm
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text39
  4372   0021E8                     __ptext39:
  4373                           	callstack 0
  4374   0021E8                     _I2C_DO_RESET:
  4375                           	callstack 21
  4376   0021E8                     
  4377                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  4378   0021E8  0100               	movlb	0	; () banked
  4379   0021EA  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  4380   0021EC                     
  4381                           ; BSR set to: 0
  4382                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  4383   0021EC  0E00               	movlw	0
  4384   0021EE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4385   0021F0                     
  4386                           ; BSR set to: 0
  4387                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  4388   0021F0  0E0E               	movlw	14
  4389   0021F2                     
  4390                           ; BSR set to: 0
  4391   0021F2  0012               	return		;funcret
  4392   0021F4                     __end_of_I2C_DO_RESET:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4396 ;; Defined at:
  4397 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      enum E2846
  4404 ;; Registers used:
  4405 ;;		wreg, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:        0 bytes
  4416 ;; Hardware stack levels used: 1
  4417 ;; Hardware stack levels required when called: 5
  4418 ;; This function calls:
  4419 ;;		_I2C_MasterSendNack
  4420 ;; This function is called by:
  4421 ;;		_I2C_DO_RX
  4422 ;;		_I2C_MasterFsm
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text40
  4427   002262                     __ptext40:
  4428                           	callstack 0
  4429   002262                     _I2C_DO_RX_NACK_RESTART:
  4430                           	callstack 20
  4431   002262                     
  4432                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  4433   002262  EC57  F011         	call	_I2C_MasterSendNack	;wreg free
  4434   002266                     
  4435                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  4436   002266  0E09               	movlw	9
  4437   002268  0012               	return		;funcret
  4438   00226A                     __end_of_I2C_DO_RX_NACK_RESTART:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4442 ;; Defined at:
  4443 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      enum E2846
  4450 ;; Registers used:
  4451 ;;		wreg, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;Total ram usage:        0 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 5
  4464 ;; This function calls:
  4465 ;;		_I2C_MasterSendNack
  4466 ;; This function is called by:
  4467 ;;		_I2C_DO_RX
  4468 ;;		_I2C_MasterFsm
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text41
  4473   00226A                     __ptext41:
  4474                           	callstack 0
  4475   00226A                     _I2C_DO_RX_NACK_STOP:
  4476                           	callstack 20
  4477   00226A                     
  4478                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  4479   00226A  EC57  F011         	call	_I2C_MasterSendNack	;wreg free
  4480   00226E                     
  4481                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  4482   00226E  0E0A               	movlw	10
  4483   002270  0012               	return		;funcret
  4484   002272                     __end_of_I2C_DO_RX_NACK_STOP:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _I2C_DO_RX_ACK *****************
  4488 ;; Defined at:
  4489 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      enum E2846
  4496 ;; Registers used:
  4497 ;;		wreg, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;Total ram usage:        0 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 5
  4510 ;; This function calls:
  4511 ;;		_I2C_MasterSendAck
  4512 ;; This function is called by:
  4513 ;;		_I2C_MasterFsm
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text42
  4518   002272                     __ptext42:
  4519                           	callstack 0
  4520   002272                     _I2C_DO_RX_ACK:
  4521                           	callstack 20
  4522   002272                     
  4523                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  4524   002272  EC54  F011         	call	_I2C_MasterSendAck	;wreg free
  4525   002276                     
  4526                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  4527   002276  0E05               	movlw	5
  4528   002278  0012               	return		;funcret
  4529   00227A                     __end_of_I2C_DO_RX_ACK:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function _I2C_DO_SEND_STOP *****************
  4533 ;; Defined at:
  4534 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      enum E2846
  4541 ;; Registers used:
  4542 ;;		wreg, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 5
  4555 ;; This function calls:
  4556 ;;		_I2C_MasterStop
  4557 ;; This function is called by:
  4558 ;;		_I2C_DO_TX
  4559 ;;		_I2C_DO_TX_EMPTY
  4560 ;;		_I2C_DO_ADDRESS_NACK
  4561 ;;		_I2C_MasterFsm
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text43
  4566   00227A                     __ptext43:
  4567                           	callstack 0
  4568   00227A                     _I2C_DO_SEND_STOP:
  4569                           	callstack 19
  4570   00227A                     
  4571                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  4572   00227A  EC6F  F011         	call	_I2C_MasterStop	;wreg free
  4573   00227E                     
  4574                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  4575   00227E  0E00               	movlw	0
  4576   002280  0012               	return		;funcret
  4577   002282                     __end_of_I2C_DO_SEND_STOP:
  4578                           	callstack 0
  4579                           
  4580 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4581 ;; Defined at:
  4582 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      enum E2846
  4589 ;; Registers used:
  4590 ;;		wreg, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used: 1
  4602 ;; Hardware stack levels required when called: 5
  4603 ;; This function calls:
  4604 ;;		_I2C_MasterEnableRestart
  4605 ;; This function is called by:
  4606 ;;		_I2C_DO_TX_EMPTY
  4607 ;;		_I2C_DO_ADDRESS_NACK
  4608 ;;		_I2C_MasterFsm
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text44
  4613   002282                     __ptext44:
  4614                           	callstack 0
  4615   002282                     _I2C_DO_SEND_RESTART:
  4616                           	callstack 19
  4617   002282                     
  4618                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  4619   002282  EC71  F011         	call	_I2C_MasterEnableRestart	;wreg free
  4620   002286                     
  4621                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  4622   002286  0E01               	movlw	1
  4623   002288  0012               	return		;funcret
  4624   00228A                     __end_of_I2C_DO_SEND_RESTART:
  4625                           	callstack 0
  4626                           
  4627 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4628 ;; Defined at:
  4629 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;		None
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      enum E2846
  4636 ;; Registers used:
  4637 ;;		wreg, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;Total ram usage:        0 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 5
  4650 ;; This function calls:
  4651 ;;		_I2C_MasterEnableRestart
  4652 ;; This function is called by:
  4653 ;;		_I2C_DO_TX
  4654 ;;		_I2C_MasterFsm
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text45
  4659   00228A                     __ptext45:
  4660                           	callstack 0
  4661   00228A                     _I2C_DO_SEND_RESTART_WRITE:
  4662                           	callstack 19
  4663   00228A                     
  4664                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  4665   00228A  EC71  F011         	call	_I2C_MasterEnableRestart	;wreg free
  4666   00228E                     
  4667                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  4668   00228E  0E02               	movlw	2
  4669   002290  0012               	return		;funcret
  4670   002292                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  4674 ;; Defined at:
  4675 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      enum E2846
  4682 ;; Registers used:
  4683 ;;		wreg, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 5
  4696 ;; This function calls:
  4697 ;;		_I2C_MasterEnableRestart
  4698 ;; This function is called by:
  4699 ;;		_I2C_DO_TX
  4700 ;;		_I2C_MasterFsm
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text46
  4705   002292                     __ptext46:
  4706                           	callstack 0
  4707   002292                     _I2C_DO_SEND_RESTART_READ:
  4708                           	callstack 19
  4709   002292                     
  4710                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  4711   002292  EC71  F011         	call	_I2C_MasterEnableRestart	;wreg free
  4712   002296                     
  4713                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  4714   002296  0E01               	movlw	1
  4715   002298  0012               	return		;funcret
  4716   00229A                     __end_of_I2C_DO_SEND_RESTART_READ:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _I2C_DO_RCEN *****************
  4720 ;; Defined at:
  4721 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      enum E2846
  4728 ;; Registers used:
  4729 ;;		wreg, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 5
  4742 ;; This function calls:
  4743 ;;		_I2C_MasterStartRx
  4744 ;; This function is called by:
  4745 ;;		_I2C_MasterFsm
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text47
  4750   0021F4                     __ptext47:
  4751                           	callstack 0
  4752   0021F4                     _I2C_DO_RCEN:
  4753                           	callstack 20
  4754   0021F4                     
  4755                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  4756   0021F4  0100               	movlb	0	; () banked
  4757   0021F6  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4758   0021F8                     
  4759                           ; BSR set to: 0
  4760                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  4761   0021F8  EC69  F011         	call	_I2C_MasterStartRx	;wreg free
  4762   0021FC                     
  4763                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  4764   0021FC  0E04               	movlw	4
  4765   0021FE  0012               	return		;funcret
  4766   002200                     __end_of_I2C_DO_RCEN:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _I2C_DO_RX *****************
  4770 ;; Defined at:
  4771 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      enum E2846
  4778 ;; Registers used:
  4779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;Total ram usage:        2 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; Hardware stack levels required when called: 7
  4792 ;; This function calls:
  4793 ;;		Absolute function
  4794 ;;		_I2C_CallbackReturnReset
  4795 ;;		_I2C_CallbackReturnStop
  4796 ;;		_I2C_DO_RX_NACK_RESTART
  4797 ;;		_I2C_DO_RX_NACK_STOP
  4798 ;;		_I2C_MasterGetRxData
  4799 ;;		_I2C_MasterSendAck
  4800 ;;		_rd1RegCompleteHandler
  4801 ;;		_rd2RegCompleteHandler
  4802 ;;		_rdBlkRegCompleteHandler
  4803 ;;		_wr1RegCompleteHandler
  4804 ;;		_wr2RegCompleteHandler
  4805 ;; This function is called by:
  4806 ;;		_I2C_MasterFsm
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text48
  4811   0016DE                     __ptext48:
  4812                           	callstack 0
  4813   0016DE                     _I2C_DO_RX:
  4814                           	callstack 18
  4815   0016DE                     
  4816                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  4817   0016DE  EC67  F011         	call	_I2C_MasterGetRxData	;wreg free
  4818   0016E2  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  4819   0016E6  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  4820   0016EA  6EDF               	movwf	indf2,c
  4821   0016EC  0100               	movlb	0	; () banked
  4822   0016EE  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  4823   0016F0  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  4824   0016F2                     
  4825                           ; BSR set to: 0
  4826                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  4827   0016F2  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  4828   0016F4  A0D8               	btfss	status,0,c
  4829   0016F6  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  4830   0016F8  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  4831   0016FA  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  4832   0016FC  B4D8               	btfsc	status,2,c
  4833   0016FE  EF83  F00B         	goto	u2051
  4834   001702  EF85  F00B         	goto	u2050
  4835   001706                     u2051:
  4836   001706  EF8A  F00B         	goto	l294
  4837   00170A                     u2050:
  4838   00170A                     
  4839                           ; BSR set to: 0
  4840                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  4841   00170A  EC54  F011         	call	_I2C_MasterSendAck	;wreg free
  4842   00170E                     
  4843                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  4844   00170E  0E05               	movlw	5
  4845   001710  EFC1  F00B         	goto	l295
  4846   001714                     l294:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  4850   001714  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  4851                           
  4852                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4853   001716  EF95  F00B         	goto	l4093
  4854   00171A                     l4083:
  4855                           
  4856                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  4857   00171A  EC31  F011         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  4858   00171E  EFC1  F00B         	goto	l295
  4859   001722                     l4087:
  4860                           
  4861                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  4862   001722  EC35  F011         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  4863   001726  EFC1  F00B         	goto	l295
  4864   00172A                     l4093:
  4865                           
  4866                           ; BSR set to: 0
  4867   00172A  C06C  F010         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  4868   00172E  C06D  F011         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  4869   001732  D802               	call	u2068
  4870   001734  EFA5  F00B         	goto	u2069
  4871   001738                     u2068:
  4872   001738  0005               	push	
  4873   00173A  6EFA               	movwf	pclath,c
  4874   00173C  5160               	movf	_I2C_Status& (0+255),w,b
  4875   00173E  6EFD               	movwf	tosl,c
  4876   001740  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  4877   001742  6EFE               	movwf	tosh,c
  4878   001744  6AFF               	clrf	tosu,c
  4879   001746  50FA               	movf	pclath,w,c
  4880   001748  0012               	return		;indir
  4881   00174A                     u2069:
  4882   00174A  6E12               	movwf	??_I2C_DO_RX^0,c
  4883   00174C  6A13               	clrf	(??_I2C_DO_RX+1)^0,c
  4884                           
  4885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4886                           ; Switch size 1, requested type "simple"
  4887                           ; Number of cases is 1, Range of values is 0 to 0
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte            4     3 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892   00174E  5013               	movf	(??_I2C_DO_RX+1)^0,w,c
  4893   001750  0A00               	xorlw	0	; case 0
  4894   001752  B4D8               	btfsc	status,2,c
  4895   001754  EFAE  F00B         	goto	l4901
  4896   001758  EF91  F00B         	goto	l4087
  4897   00175C                     l4901:
  4898                           
  4899                           ; Switch size 1, requested type "simple"
  4900                           ; Number of cases is 4, Range of values is 1 to 4
  4901                           ; switch strategies available:
  4902                           ; Name         Instructions Cycles
  4903                           ; simple_byte           13     7 (average)
  4904                           ;	Chosen strategy is simple_byte
  4905   00175C  5012               	movf	??_I2C_DO_RX^0,w,c
  4906   00175E  0A01               	xorlw	1	; case 1
  4907   001760  B4D8               	btfsc	status,2,c
  4908   001762  EF91  F00B         	goto	l4087
  4909   001766  0A03               	xorlw	3	; case 2
  4910   001768  B4D8               	btfsc	status,2,c
  4911   00176A  EF8D  F00B         	goto	l4083
  4912   00176E  0A01               	xorlw	1	; case 3
  4913   001770  B4D8               	btfsc	status,2,c
  4914   001772  EF8D  F00B         	goto	l4083
  4915   001776  0A07               	xorlw	7	; case 4
  4916   001778  B4D8               	btfsc	status,2,c
  4917   00177A  EF91  F00B         	goto	l4087
  4918   00177E  EF91  F00B         	goto	l4087
  4919   001782                     l295:
  4920   001782  0012               	return		;funcret
  4921   001784                     __end_of_I2C_DO_RX:
  4922                           	callstack 0
  4923                           
  4924 ;; *************** function _I2C_DO_TX *****************
  4925 ;; Defined at:
  4926 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      enum E2846
  4933 ;; Registers used:
  4934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;Total ram usage:        2 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; Hardware stack levels required when called: 7
  4947 ;; This function calls:
  4948 ;;		Absolute function
  4949 ;;		_I2C_CallbackReturnReset
  4950 ;;		_I2C_CallbackReturnStop
  4951 ;;		_I2C_DO_SEND_RESTART_READ
  4952 ;;		_I2C_DO_SEND_RESTART_WRITE
  4953 ;;		_I2C_DO_SEND_STOP
  4954 ;;		_I2C_MasterIsNack
  4955 ;;		_I2C_MasterSendTxData
  4956 ;;		_rd1RegCompleteHandler
  4957 ;;		_rd2RegCompleteHandler
  4958 ;;		_rdBlkRegCompleteHandler
  4959 ;;		_wr1RegCompleteHandler
  4960 ;;		_wr2RegCompleteHandler
  4961 ;; This function is called by:
  4962 ;;		_I2C_MasterFsm
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text49
  4967   001560                     __ptext49:
  4968                           	callstack 0
  4969   001560                     _I2C_DO_TX:
  4970                           	callstack 18
  4971   001560                     
  4972                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  4973   001560  ECC9  F010         	call	_I2C_MasterIsNack	;wreg free
  4974   001564  0900               	iorlw	0
  4975   001566  B4D8               	btfsc	status,2,c
  4976   001568  EFB8  F00A         	goto	u2021
  4977   00156C  EFBA  F00A         	goto	u2020
  4978   001570                     u2021:
  4979   001570  EFF5  F00A         	goto	l278
  4980   001574                     u2020:
  4981   001574  EFC8  F00A         	goto	l4053
  4982   001578                     l4039:
  4983                           
  4984                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  4985   001578  EC49  F011         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  4986   00157C  EF11  F00B         	goto	l281
  4987   001580                     l4043:
  4988                           
  4989                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  4990   001580  EC45  F011         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  4991   001584  EF11  F00B         	goto	l281
  4992   001588                     l4047:
  4993                           
  4994                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  4995   001588  EC3D  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  4996   00158C  EF11  F00B         	goto	l281
  4997   001590                     l4053:
  4998   001590  C072  F010         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  4999   001594  C073  F011         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  5000   001598  D802               	call	u2038
  5001   00159A  EFD9  F00A         	goto	u2039
  5002   00159E                     u2038:
  5003   00159E  0005               	push	
  5004   0015A0  6EFA               	movwf	pclath,c
  5005   0015A2  0100               	movlb	0	; () banked
  5006   0015A4  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  5007   0015A6  6EFD               	movwf	tosl,c
  5008   0015A8  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  5009   0015AA  6EFE               	movwf	tosh,c
  5010   0015AC  6AFF               	clrf	tosu,c
  5011   0015AE  50FA               	movf	pclath,w,c
  5012   0015B0  0012               	return		;indir
  5013   0015B2                     u2039:
  5014   0015B2  6E12               	movwf	??_I2C_DO_TX^0,c
  5015   0015B4  6A13               	clrf	(??_I2C_DO_TX+1)^0,c
  5016                           
  5017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5018                           ; Switch size 1, requested type "simple"
  5019                           ; Number of cases is 1, Range of values is 0 to 0
  5020                           ; switch strategies available:
  5021                           ; Name         Instructions Cycles
  5022                           ; simple_byte            4     3 (average)
  5023                           ;	Chosen strategy is simple_byte
  5024   0015B6  5013               	movf	(??_I2C_DO_TX+1)^0,w,c
  5025   0015B8  0A00               	xorlw	0	; case 0
  5026   0015BA  B4D8               	btfsc	status,2,c
  5027   0015BC  EFE2  F00A         	goto	l4903
  5028   0015C0  EFC4  F00A         	goto	l4047
  5029   0015C4                     l4903:
  5030                           
  5031                           ; Switch size 1, requested type "simple"
  5032                           ; Number of cases is 4, Range of values is 1 to 4
  5033                           ; switch strategies available:
  5034                           ; Name         Instructions Cycles
  5035                           ; simple_byte           13     7 (average)
  5036                           ;	Chosen strategy is simple_byte
  5037   0015C4  5012               	movf	??_I2C_DO_TX^0,w,c
  5038   0015C6  0A01               	xorlw	1	; case 1
  5039   0015C8  B4D8               	btfsc	status,2,c
  5040   0015CA  EFC4  F00A         	goto	l4047
  5041   0015CE  0A03               	xorlw	3	; case 2
  5042   0015D0  B4D8               	btfsc	status,2,c
  5043   0015D2  EFBC  F00A         	goto	l4039
  5044   0015D6  0A01               	xorlw	1	; case 3
  5045   0015D8  B4D8               	btfsc	status,2,c
  5046   0015DA  EFC0  F00A         	goto	l4043
  5047   0015DE  0A07               	xorlw	7	; case 4
  5048   0015E0  B4D8               	btfsc	status,2,c
  5049   0015E2  EFC4  F00A         	goto	l4047
  5050   0015E6  EFC4  F00A         	goto	l4047
  5051   0015EA                     l278:
  5052                           
  5053                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  5054   0015EA  0100               	movlb	0	; () banked
  5055   0015EC  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5056   0015EE                     
  5057                           ; BSR set to: 0
  5058                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5059   0015EE  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5060   0015F2  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5061   0015F6  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5062   0015F8  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5063   0015FA  50DF               	movf	indf2,w,c
  5064   0015FC  EC4D  F011         	call	_I2C_MasterSendTxData
  5065   001600                     
  5066                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5067   001600  0100               	movlb	0	; () banked
  5068   001602  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5069   001604  A0D8               	btfss	status,0,c
  5070   001606  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5071   001608  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5072   00160A  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5073   00160C  A4D8               	btfss	status,2,c
  5074   00160E  EF0B  F00B         	goto	u2041
  5075   001612  EF0D  F00B         	goto	u2040
  5076   001616                     u2041:
  5077   001616  EF10  F00B         	goto	l4061
  5078   00161A                     u2040:
  5079   00161A                     
  5080                           ; BSR set to: 0
  5081   00161A  0E06               	movlw	6
  5082   00161C  EF11  F00B         	goto	l281
  5083   001620                     l4061:
  5084                           
  5085                           ; BSR set to: 0
  5086   001620  0E03               	movlw	3
  5087   001622                     l281:
  5088   001622  0012               	return		;funcret
  5089   001624                     __end_of_I2C_DO_TX:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5093 ;; Defined at:
  5094 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      enum E2846
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        0 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; Hardware stack levels required when called: 5
  5115 ;; This function calls:
  5116 ;;		_I2C_MasterSendTxData
  5117 ;; This function is called by:
  5118 ;;		_I2C_MasterFsm
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text50
  5123   0021C8                     __ptext50:
  5124                           	callstack 0
  5125   0021C8                     _I2C_DO_SEND_ADR_WRITE:
  5126                           	callstack 20
  5127   0021C8                     
  5128                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  5129   0021C8  0100               	movlb	0	; () banked
  5130   0021CA  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5131   0021CC                     
  5132                           ; BSR set to: 0
  5133                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  5134   0021CC  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  5135   0021CE  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  5136   0021D0  EC4D  F011         	call	_I2C_MasterSendTxData
  5137   0021D4                     
  5138                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  5139   0021D4  0E03               	movlw	3
  5140   0021D6  0012               	return		;funcret
  5141   0021D8                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5145 ;; Defined at:
  5146 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      enum E2846
  5153 ;; Registers used:
  5154 ;;		wreg, status,0, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; Hardware stack levels required when called: 5
  5167 ;; This function calls:
  5168 ;;		_I2C_MasterSendTxData
  5169 ;; This function is called by:
  5170 ;;		_I2C_MasterFsm
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text51
  5175   0021D8                     __ptext51:
  5176                           	callstack 0
  5177   0021D8                     _I2C_DO_SEND_ADR_READ:
  5178                           	callstack 20
  5179   0021D8                     
  5180                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  5181   0021D8  0100               	movlb	0	; () banked
  5182   0021DA  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5183   0021DC                     
  5184                           ; BSR set to: 0
  5185                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  5186   0021DC  80D8               	bsf	status,0,c
  5187   0021DE  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  5188   0021E0  EC4D  F011         	call	_I2C_MasterSendTxData
  5189   0021E4                     
  5190                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  5191   0021E4  0E05               	movlw	5
  5192   0021E6  0012               	return		;funcret
  5193   0021E8                     __end_of_I2C_DO_SEND_ADR_READ:
  5194                           	callstack 0
  5195                           
  5196 ;; *************** function _I2C_DO_IDLE *****************
  5197 ;; Defined at:
  5198 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      enum E2846
  5205 ;; Registers used:
  5206 ;;		wreg, status,2
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;Total ram usage:        0 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 4
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_I2C_MasterFsm
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text52
  5227   002200                     __ptext52:
  5228                           	callstack 0
  5229   002200                     _I2C_DO_IDLE:
  5230                           	callstack 21
  5231   002200                     
  5232                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  5233   002200  0100               	movlb	0	; () banked
  5234   002202  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5235   002204                     
  5236                           ; BSR set to: 0
  5237                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  5238   002204  0E00               	movlw	0
  5239   002206  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5240   002208                     
  5241                           ; BSR set to: 0
  5242                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  5243   002208  0E0E               	movlw	14
  5244   00220A                     
  5245                           ; BSR set to: 0
  5246   00220A  0012               	return		;funcret
  5247   00220C                     __end_of_I2C_DO_IDLE:
  5248                           	callstack 0
  5249                           
  5250 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5251 ;; Defined at:
  5252 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      enum E2846
  5259 ;; Registers used:
  5260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;Total ram usage:        2 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; Hardware stack levels required when called: 7
  5273 ;; This function calls:
  5274 ;;		Absolute function
  5275 ;;		_I2C_CallbackReturnReset
  5276 ;;		_I2C_CallbackReturnStop
  5277 ;;		_I2C_DO_SEND_RESTART
  5278 ;;		_I2C_DO_SEND_STOP
  5279 ;;		_I2C_MasterSetIrq
  5280 ;;		_rd1RegCompleteHandler
  5281 ;;		_rd2RegCompleteHandler
  5282 ;;		_rdBlkRegCompleteHandler
  5283 ;;		_wr1RegCompleteHandler
  5284 ;;		_wr2RegCompleteHandler
  5285 ;; This function is called by:
  5286 ;;		_I2C_MasterFsm
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text53
  5291   00192E                     __ptext53:
  5292                           	callstack 0
  5293   00192E                     _I2C_DO_TX_EMPTY:
  5294                           	callstack 18
  5295   00192E                     
  5296                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  5297   00192E  0100               	movlb	0	; () banked
  5298   001930  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5299                           
  5300                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5301   001932  EFA8  F00C         	goto	l4125
  5302   001936                     l4109:
  5303                           
  5304                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  5305   001936  EC41  F011         	call	_I2C_DO_SEND_RESTART	;wreg free
  5306   00193A  EFD4  F00C         	goto	l312
  5307   00193E                     l4113:
  5308                           
  5309                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  5310   00193E  EC65  F011         	call	_I2C_MasterSetIrq	;wreg free
  5311   001942                     
  5312                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  5313   001942  0E03               	movlw	3
  5314   001944  EFD4  F00C         	goto	l312
  5315   001948                     l4119:
  5316                           
  5317                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  5318   001948  EC3D  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  5319   00194C  EFD4  F00C         	goto	l312
  5320   001950                     l4125:
  5321                           
  5322                           ; BSR set to: 0
  5323   001950  C06C  F010         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5324   001954  C06D  F011         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5325   001958  D802               	call	u2078
  5326   00195A  EFB8  F00C         	goto	u2079
  5327   00195E                     u2078:
  5328   00195E  0005               	push	
  5329   001960  6EFA               	movwf	pclath,c
  5330   001962  5160               	movf	_I2C_Status& (0+255),w,b
  5331   001964  6EFD               	movwf	tosl,c
  5332   001966  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5333   001968  6EFE               	movwf	tosh,c
  5334   00196A  6AFF               	clrf	tosu,c
  5335   00196C  50FA               	movf	pclath,w,c
  5336   00196E  0012               	return		;indir
  5337   001970                     u2079:
  5338   001970  6E12               	movwf	??_I2C_DO_TX_EMPTY^0,c
  5339   001972  6A13               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  5340                           
  5341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5342                           ; Switch size 1, requested type "simple"
  5343                           ; Number of cases is 1, Range of values is 0 to 0
  5344                           ; switch strategies available:
  5345                           ; Name         Instructions Cycles
  5346                           ; simple_byte            4     3 (average)
  5347                           ;	Chosen strategy is simple_byte
  5348   001974  5013               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  5349   001976  0A00               	xorlw	0	; case 0
  5350   001978  B4D8               	btfsc	status,2,c
  5351   00197A  EFC1  F00C         	goto	l4905
  5352   00197E  EFA4  F00C         	goto	l4119
  5353   001982                     l4905:
  5354                           
  5355                           ; Switch size 1, requested type "simple"
  5356                           ; Number of cases is 4, Range of values is 1 to 4
  5357                           ; switch strategies available:
  5358                           ; Name         Instructions Cycles
  5359                           ; simple_byte           13     7 (average)
  5360                           ;	Chosen strategy is simple_byte
  5361   001982  5012               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  5362   001984  0A01               	xorlw	1	; case 1
  5363   001986  B4D8               	btfsc	status,2,c
  5364   001988  EFA4  F00C         	goto	l4119
  5365   00198C  0A03               	xorlw	3	; case 2
  5366   00198E  B4D8               	btfsc	status,2,c
  5367   001990  EF9B  F00C         	goto	l4109
  5368   001994  0A01               	xorlw	1	; case 3
  5369   001996  B4D8               	btfsc	status,2,c
  5370   001998  EF9B  F00C         	goto	l4109
  5371   00199C  0A07               	xorlw	7	; case 4
  5372   00199E  B4D8               	btfsc	status,2,c
  5373   0019A0  EF9F  F00C         	goto	l4113
  5374   0019A4  EFA4  F00C         	goto	l4119
  5375   0019A8                     l312:
  5376   0019A8  0012               	return		;funcret
  5377   0019AA                     __end_of_I2C_DO_TX_EMPTY:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _I2C_MasterSetIrq *****************
  5381 ;; Defined at:
  5382 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;		None
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		None
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;Total ram usage:        0 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; Hardware stack levels required when called: 4
  5403 ;; This function calls:
  5404 ;;		Nothing
  5405 ;; This function is called by:
  5406 ;;		_I2C_DO_TX_EMPTY
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text54
  5411   0022CA                     __ptext54:
  5412                           	callstack 0
  5413   0022CA                     _I2C_MasterSetIrq:
  5414                           	callstack 20
  5415   0022CA                     
  5416                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  5417   0022CA  869E               	bsf	158,3,c	;volatile
  5418   0022CC  0012               	return		;funcret
  5419   0022CE                     __end_of_I2C_MasterSetIrq:
  5420                           	callstack 0
  5421                           
  5422 ;; *************** function _I2C_MasterIsNack *****************
  5423 ;; Defined at:
  5424 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      _Bool 
  5431 ;; Registers used:
  5432 ;;		wreg
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used: 1
  5444 ;; Hardware stack levels required when called: 4
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_I2C_MasterFsm
  5449 ;;		_I2C_DO_TX
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text55
  5454   002192                     __ptext55:
  5455                           	callstack 0
  5456   002192                     _I2C_MasterIsNack:
  5457                           	callstack 21
  5458   002192                     
  5459                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  5460   002192  BCC5               	btfsc	197,6,c	;volatile
  5461   002194  EFCE  F010         	goto	u2011
  5462   002198  EFD1  F010         	goto	u2010
  5463   00219C                     u2011:
  5464   00219C  0E01               	movlw	1
  5465   00219E  EFD2  F010         	goto	u2016
  5466   0021A2                     u2010:
  5467   0021A2  0E00               	movlw	0
  5468   0021A4                     u2016:
  5469   0021A4  0012               	return		;funcret
  5470   0021A6                     __end_of_I2C_MasterIsNack:
  5471                           	callstack 0
  5472                           
  5473 ;; *************** function _I2C_MasterSendTxData *****************
  5474 ;; Defined at:
  5475 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  data            1    wreg     unsigned char 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  data            1    6[COMRAM] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;Total ram usage:        1 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 4
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_I2C_DO_SEND_ADR_READ
  5500 ;;		_I2C_DO_SEND_ADR_WRITE
  5501 ;;		_I2C_DO_TX
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text56
  5506   00229A                     __ptext56:
  5507                           	callstack 0
  5508   00229A                     _I2C_MasterSendTxData:
  5509                           	callstack 20
  5510                           
  5511                           ;incstack = 0
  5512                           ;I2C_MasterSendTxData@data stored from wreg
  5513   00229A  6E07               	movwf	I2C_MasterSendTxData@data^0,c
  5514   00229C                     
  5515                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  5516   00229C  C007  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  5517   0022A0  0012               	return		;funcret
  5518   0022A2                     __end_of_I2C_MasterSendTxData:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _I2C_MasterSendAck *****************
  5522 ;; Defined at:
  5523 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		None
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 4
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_I2C_DO_RX
  5548 ;;		_I2C_DO_RX_ACK
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text57
  5553   0022A8                     __ptext57:
  5554                           	callstack 0
  5555   0022A8                     _I2C_MasterSendAck:
  5556                           	callstack 20
  5557   0022A8                     
  5558                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  5559   0022A8  9AC5               	bcf	197,5,c	;volatile
  5560                           
  5561                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  5562   0022AA  88C5               	bsf	197,4,c	;volatile
  5563   0022AC  0012               	return		;funcret
  5564   0022AE                     __end_of_I2C_MasterSendAck:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function _I2C_MasterGetRxData *****************
  5568 ;; Defined at:
  5569 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      unsigned char 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 4
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_I2C_DO_RX
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text58
  5598   0022CE                     __ptext58:
  5599                           	callstack 0
  5600   0022CE                     _I2C_MasterGetRxData:
  5601                           	callstack 20
  5602   0022CE                     
  5603                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  5604   0022CE  50C9               	movf	201,w,c	;volatile
  5605   0022D0  0012               	return		;funcret
  5606   0022D2                     __end_of_I2C_MasterGetRxData:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function _I2C_MasterSendNack *****************
  5610 ;; Defined at:
  5611 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		None
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used: 1
  5631 ;; Hardware stack levels required when called: 4
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_I2C_DO_RX_NACK_STOP
  5636 ;;		_I2C_DO_RX_NACK_RESTART
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text59
  5641   0022AE                     __ptext59:
  5642                           	callstack 0
  5643   0022AE                     _I2C_MasterSendNack:
  5644                           	callstack 20
  5645   0022AE                     
  5646                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  5647   0022AE  8AC5               	bsf	197,5,c	;volatile
  5648                           
  5649                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  5650   0022B0  88C5               	bsf	197,4,c	;volatile
  5651   0022B2  0012               	return		;funcret
  5652   0022B4                     __end_of_I2C_MasterSendNack:
  5653                           	callstack 0
  5654                           
  5655 ;; *************** function _I2C_MasterStartRx *****************
  5656 ;; Defined at:
  5657 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		None
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 4
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_I2C_DO_RCEN
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text60
  5686   0022D2                     __ptext60:
  5687                           	callstack 0
  5688   0022D2                     _I2C_MasterStartRx:
  5689                           	callstack 20
  5690   0022D2                     
  5691                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  5692   0022D2  86C5               	bsf	197,3,c	;volatile
  5693   0022D4  0012               	return		;funcret
  5694   0022D6                     __end_of_I2C_MasterStartRx:
  5695                           	callstack 0
  5696                           
  5697 ;; *************** function _I2C_CallbackReturnReset *****************
  5698 ;; Defined at:
  5699 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  funPtr          2   15[COMRAM] PTR void 
  5702 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5703 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      enum E360
  5708 ;; Registers used:
  5709 ;;		wreg
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;Total ram usage:        2 bytes
  5720 ;; Hardware stack levels used: 1
  5721 ;; Hardware stack levels required when called: 4
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_I2C_Open
  5726 ;;		_I2C_DO_TX
  5727 ;;		_I2C_DO_RX
  5728 ;;		_I2C_DO_TX_EMPTY
  5729 ;;		_I2C_DO_ADDRESS_NACK
  5730 ;;		_I2C_DO_RX_EMPTY
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text61
  5735   0022D6                     __ptext61:
  5736                           	callstack 0
  5737   0022D6                     _I2C_CallbackReturnReset:
  5738                           	callstack 20
  5739   0022D6                     
  5740                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  5741   0022D6  0E05               	movlw	5
  5742   0022D8  0012               	return		;funcret
  5743   0022DA                     __end_of_I2C_CallbackReturnReset:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _I2C_CallbackReturnStop *****************
  5747 ;; Defined at:
  5748 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  funPtr          2   15[COMRAM] PTR void 
  5751 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5752 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      enum E360
  5757 ;; Registers used:
  5758 ;;		wreg
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;Total ram usage:        2 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 4
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_I2C_Open
  5775 ;;		_I2C_SetCallback
  5776 ;;		_I2C_DO_TX
  5777 ;;		_I2C_DO_RX
  5778 ;;		_I2C_DO_TX_EMPTY
  5779 ;;		_I2C_DO_ADDRESS_NACK
  5780 ;;		_I2C_DO_RX_EMPTY
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text62
  5785   0022DA                     __ptext62:
  5786                           	callstack 0
  5787   0022DA                     _I2C_CallbackReturnStop:
  5788                           	callstack 20
  5789   0022DA                     
  5790                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  5791   0022DA  0E01               	movlw	1
  5792   0022DC  0012               	return		;funcret
  5793   0022DE                     __end_of_I2C_CallbackReturnStop:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function _rdBlkRegCompleteHandler *****************
  5797 ;; Defined at:
  5798 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  ptr             2   15[COMRAM] PTR void 
  5801 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5802 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1    wreg      enum E360
  5807 ;; Registers used:
  5808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;Total ram usage:        2 bytes
  5819 ;; Hardware stack levels used: 1
  5820 ;; Hardware stack levels required when called: 6
  5821 ;; This function calls:
  5822 ;;		_I2C_SetBuffer
  5823 ;;		_I2C_SetDataCompleteCallback
  5824 ;; This function is called by:
  5825 ;;		_I2C_ReadDataBlock
  5826 ;;		_I2C_DO_TX
  5827 ;;		_I2C_DO_RX
  5828 ;;		_I2C_DO_TX_EMPTY
  5829 ;;		_I2C_DO_ADDRESS_NACK
  5830 ;;		_I2C_DO_RX_EMPTY
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text63
  5835   001E0C                     __ptext63:
  5836                           	callstack 0
  5837   001E0C                     _rdBlkRegCompleteHandler:
  5838                           	callstack 18
  5839   001E0C                     
  5840                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  5841   001E0C  EE20 F002          	lfsr	2,2
  5842   001E10  5010               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  5843   001E12  26D9               	addwf	fsr2l,f,c
  5844   001E14  5011               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  5845   001E16  22DA               	addwfc	fsr2h,f,c
  5846   001E18  CFDE F007          	movff	postinc2,I2C_SetBuffer@buffer
  5847   001E1C  CFDD F008          	movff	postdec2,I2C_SetBuffer@buffer+1
  5848   001E20  C010  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  5849   001E24  C011  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  5850   001E28  CFDE F009          	movff	postinc2,I2C_SetBuffer@bufferSize
  5851   001E2C  CFDD F00A          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  5852   001E30  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  5853   001E34                     
  5854                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5855   001E34  0E00               	movlw	0
  5856   001E36  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  5857   001E38  0E00               	movlw	0
  5858   001E3A  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  5859   001E3C  0E00               	movlw	0
  5860   001E3E  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  5861   001E40  0E00               	movlw	0
  5862   001E42  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  5863   001E44  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  5864   001E48                     
  5865                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  5866   001E48  0E02               	movlw	2
  5867   001E4A  0012               	return		;funcret
  5868   001E4C                     __end_of_rdBlkRegCompleteHandler:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function _wr1RegCompleteHandler *****************
  5872 ;; Defined at:
  5873 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  ptr             2   15[COMRAM] PTR void 
  5876 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5877 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      enum E360
  5882 ;; Registers used:
  5883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;Total ram usage:        2 bytes
  5894 ;; Hardware stack levels used: 1
  5895 ;; Hardware stack levels required when called: 6
  5896 ;; This function calls:
  5897 ;;		_I2C_SetBuffer
  5898 ;;		_I2C_SetDataCompleteCallback
  5899 ;; This function is called by:
  5900 ;;		_I2C_Write1ByteRegister
  5901 ;;		_I2C_DO_TX
  5902 ;;		_I2C_DO_RX
  5903 ;;		_I2C_DO_TX_EMPTY
  5904 ;;		_I2C_DO_ADDRESS_NACK
  5905 ;;		_I2C_DO_RX_EMPTY
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text64
  5910   001F68                     __ptext64:
  5911                           	callstack 0
  5912   001F68                     _wr1RegCompleteHandler:
  5913                           	callstack 18
  5914   001F68                     
  5915                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  5916   001F68  C010  F007         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  5917   001F6C  C011  F008         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  5918   001F70  0E00               	movlw	0
  5919   001F72  6E0A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  5920   001F74  0E01               	movlw	1
  5921   001F76  6E09               	movwf	I2C_SetBuffer@bufferSize^0,c
  5922   001F78  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  5923   001F7C                     
  5924                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5925   001F7C  0E00               	movlw	0
  5926   001F7E  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  5927   001F80  0E00               	movlw	0
  5928   001F82  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  5929   001F84  0E00               	movlw	0
  5930   001F86  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  5931   001F88  0E00               	movlw	0
  5932   001F8A  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  5933   001F8C  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  5934   001F90                     
  5935                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  5936   001F90  0E04               	movlw	4
  5937   001F92  0012               	return		;funcret
  5938   001F94                     __end_of_wr1RegCompleteHandler:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function _rd2RegCompleteHandler *****************
  5942 ;; Defined at:
  5943 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  ptr             2   15[COMRAM] PTR void 
  5946 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5947 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      enum E360
  5952 ;; Registers used:
  5953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;Total ram usage:        2 bytes
  5964 ;; Hardware stack levels used: 1
  5965 ;; Hardware stack levels required when called: 6
  5966 ;; This function calls:
  5967 ;;		_I2C_SetBuffer
  5968 ;;		_I2C_SetDataCompleteCallback
  5969 ;; This function is called by:
  5970 ;;		_I2C_Read2ByteRegister
  5971 ;;		_I2C_DO_TX
  5972 ;;		_I2C_DO_RX
  5973 ;;		_I2C_DO_TX_EMPTY
  5974 ;;		_I2C_DO_ADDRESS_NACK
  5975 ;;		_I2C_DO_RX_EMPTY
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text65
  5980   001F94                     __ptext65:
  5981                           	callstack 0
  5982   001F94                     _rd2RegCompleteHandler:
  5983                           	callstack 18
  5984   001F94                     
  5985                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  5986   001F94  C010  F007         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  5987   001F98  C011  F008         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  5988   001F9C  0E00               	movlw	0
  5989   001F9E  6E0A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  5990   001FA0  0E02               	movlw	2
  5991   001FA2  6E09               	movwf	I2C_SetBuffer@bufferSize^0,c
  5992   001FA4  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  5993   001FA8                     
  5994                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5995   001FA8  0E00               	movlw	0
  5996   001FAA  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  5997   001FAC  0E00               	movlw	0
  5998   001FAE  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  5999   001FB0  0E00               	movlw	0
  6000   001FB2  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6001   001FB4  0E00               	movlw	0
  6002   001FB6  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6003   001FB8  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  6004   001FBC                     
  6005                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6006   001FBC  0E02               	movlw	2
  6007   001FBE  0012               	return		;funcret
  6008   001FC0                     __end_of_rd2RegCompleteHandler:
  6009                           	callstack 0
  6010                           
  6011 ;; *************** function _rd1RegCompleteHandler *****************
  6012 ;; Defined at:
  6013 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  ptr             2   15[COMRAM] PTR void 
  6016 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6017 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      enum E360
  6022 ;; Registers used:
  6023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;Total ram usage:        2 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; Hardware stack levels required when called: 6
  6036 ;; This function calls:
  6037 ;;		_I2C_SetBuffer
  6038 ;;		_I2C_SetDataCompleteCallback
  6039 ;; This function is called by:
  6040 ;;		_I2C_Read1ByteRegister
  6041 ;;		_I2C_DO_TX
  6042 ;;		_I2C_DO_RX
  6043 ;;		_I2C_DO_TX_EMPTY
  6044 ;;		_I2C_DO_ADDRESS_NACK
  6045 ;;		_I2C_DO_RX_EMPTY
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text66
  6050   001FC0                     __ptext66:
  6051                           	callstack 0
  6052   001FC0                     _rd1RegCompleteHandler:
  6053                           	callstack 18
  6054   001FC0                     
  6055                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6056   001FC0  C010  F007         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6057   001FC4  C011  F008         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6058   001FC8  0E00               	movlw	0
  6059   001FCA  6E0A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6060   001FCC  0E01               	movlw	1
  6061   001FCE  6E09               	movwf	I2C_SetBuffer@bufferSize^0,c
  6062   001FD0  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  6063   001FD4                     
  6064                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6065   001FD4  0E00               	movlw	0
  6066   001FD6  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6067   001FD8  0E00               	movlw	0
  6068   001FDA  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6069   001FDC  0E00               	movlw	0
  6070   001FDE  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6071   001FE0  0E00               	movlw	0
  6072   001FE2  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6073   001FE4  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  6074   001FE8                     
  6075                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6076   001FE8  0E02               	movlw	2
  6077   001FEA  0012               	return		;funcret
  6078   001FEC                     __end_of_rd1RegCompleteHandler:
  6079                           	callstack 0
  6080                           
  6081 ;; *************** function _wr2RegCompleteHandler *****************
  6082 ;; Defined at:
  6083 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  ptr             2   15[COMRAM] PTR void 
  6086 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6087 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      enum E360
  6092 ;; Registers used:
  6093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;Total ram usage:        2 bytes
  6104 ;; Hardware stack levels used: 1
  6105 ;; Hardware stack levels required when called: 6
  6106 ;; This function calls:
  6107 ;;		_I2C_SetBuffer
  6108 ;;		_I2C_SetDataCompleteCallback
  6109 ;; This function is called by:
  6110 ;;		_I2C_Write2ByteRegister
  6111 ;;		_I2C_DO_TX
  6112 ;;		_I2C_DO_RX
  6113 ;;		_I2C_DO_TX_EMPTY
  6114 ;;		_I2C_DO_ADDRESS_NACK
  6115 ;;		_I2C_DO_RX_EMPTY
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text67
  6120   001FEC                     __ptext67:
  6121                           	callstack 0
  6122   001FEC                     _wr2RegCompleteHandler:
  6123                           	callstack 18
  6124   001FEC                     
  6125                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6126   001FEC  C010  F007         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6127   001FF0  C011  F008         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6128   001FF4  0E00               	movlw	0
  6129   001FF6  6E0A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6130   001FF8  0E02               	movlw	2
  6131   001FFA  6E09               	movwf	I2C_SetBuffer@bufferSize^0,c
  6132   001FFC  EC4A  F010         	call	_I2C_SetBuffer	;wreg free
  6133   002000                     
  6134                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6135   002000  0E00               	movlw	0
  6136   002002  6E0C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6137   002004  0E00               	movlw	0
  6138   002006  6E0D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6139   002008  0E00               	movlw	0
  6140   00200A  6E0E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6141   00200C  0E00               	movlw	0
  6142   00200E  6E0F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6143   002010  ECB3  F010         	call	_I2C_SetDataCompleteCallback	;wreg free
  6144   002014                     
  6145                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6146   002014  0E04               	movlw	4
  6147   002016  0012               	return		;funcret
  6148   002018                     __end_of_wr2RegCompleteHandler:
  6149                           	callstack 0
  6150                           
  6151 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6152 ;; Defined at:
  6153 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  cb              2   11[COMRAM] PTR FTN(PTR void ,)enum 
  6156 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6157 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6158 ;;  ptr             2   13[COMRAM] PTR void 
  6159 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6160 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;		None
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1    wreg      void 
  6165 ;; Registers used:
  6166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;Total ram usage:        4 bytes
  6177 ;; Hardware stack levels used: 1
  6178 ;; Hardware stack levels required when called: 5
  6179 ;; This function calls:
  6180 ;;		_I2C_SetCallback
  6181 ;; This function is called by:
  6182 ;;		_rd1RegCompleteHandler
  6183 ;;		_rd2RegCompleteHandler
  6184 ;;		_wr1RegCompleteHandler
  6185 ;;		_wr2RegCompleteHandler
  6186 ;;		_rdBlkRegCompleteHandler
  6187 ;;		_I2C_Read1ByteRegister
  6188 ;;		_I2C_Read2ByteRegister
  6189 ;;		_I2C_Write1ByteRegister
  6190 ;;		_I2C_Write2ByteRegister
  6191 ;;		_I2C_ReadDataBlock
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text68
  6196   002166                     __ptext68:
  6197                           	callstack 0
  6198   002166                     _I2C_SetDataCompleteCallback:
  6199                           	callstack 18
  6200   002166                     
  6201                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6202   002166  C00C  F007         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  6203   00216A  C00D  F008         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  6204   00216E  C00E  F009         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  6205   002172  C00F  F00A         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  6206   002176  0E00               	movlw	0
  6207   002178  ECD5  F00C         	call	_I2C_SetCallback
  6208   00217C  0012               	return		;funcret
  6209   00217E                     __end_of_I2C_SetDataCompleteCallback:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function _I2C_SetCallback *****************
  6213 ;; Defined at:
  6214 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  idx             1    wreg     enum E2864
  6217 ;;  cb              2    6[COMRAM] PTR FTN(PTR void ,)enum 
  6218 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6219 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6220 ;;  ptr             2    8[COMRAM] PTR void 
  6221 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6222 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  idx             1   10[COMRAM] enum E2864
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;Total ram usage:        5 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; Hardware stack levels required when called: 4
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_I2C_SetDataCompleteCallback
  6245 ;;		_I2C_SetAddressNackCallback
  6246 ;;		_I2C_SetWriteCollisionCallback
  6247 ;;		_I2C_SetDataNackCallback
  6248 ;;		_I2C_SetTimeoutCallback
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text69
  6253   0019AA                     __ptext69:
  6254                           	callstack 0
  6255   0019AA                     _I2C_SetCallback:
  6256                           	callstack 24
  6257                           
  6258                           ;incstack = 0
  6259                           ;I2C_SetCallback@idx stored from wreg
  6260   0019AA  6E0B               	movwf	I2C_SetCallback@idx^0,c
  6261   0019AC                     
  6262                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  6263   0019AC  5007               	movf	I2C_SetCallback@cb^0,w,c
  6264   0019AE  1008               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  6265   0019B0  B4D8               	btfsc	status,2,c
  6266   0019B2  EFDD  F00C         	goto	u1991
  6267   0019B6  EFDF  F00C         	goto	u1990
  6268   0019BA                     u1991:
  6269   0019BA  EFF9  F00C         	goto	l3891
  6270   0019BE                     u1990:
  6271   0019BE                     
  6272                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6273   0019BE  500B               	movf	I2C_SetCallback@idx^0,w,c
  6274   0019C0  0D02               	mullw	2
  6275   0019C2  0E60               	movlw	low _I2C_Status
  6276   0019C4  24F3               	addwf	243,w,c
  6277   0019C6  6ED9               	movwf	fsr2l,c
  6278   0019C8  0E00               	movlw	high _I2C_Status
  6279   0019CA  20F4               	addwfc	prodh,w,c
  6280   0019CC  6EDA               	movwf	fsr2h,c
  6281   0019CE  C007  FFDE         	movff	I2C_SetCallback@cb,postinc2
  6282   0019D2  C008  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  6283                           
  6284                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  6285   0019D6  500B               	movf	I2C_SetCallback@idx^0,w,c
  6286   0019D8  0D02               	mullw	2
  6287   0019DA  0E6C               	movlw	low (_I2C_Status+12)
  6288   0019DC  24F3               	addwf	243,w,c
  6289   0019DE  6ED9               	movwf	fsr2l,c
  6290   0019E0  0E00               	movlw	high (_I2C_Status+12)
  6291   0019E2  20F4               	addwfc	prodh,w,c
  6292   0019E4  6EDA               	movwf	fsr2h,c
  6293   0019E6  C009  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  6294   0019EA  C00A  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  6295                           
  6296                           ;mcc_generated_files/i2c_master.c: 304:     }
  6297   0019EE  EF11  F00D         	goto	l256
  6298   0019F2                     l3891:
  6299                           
  6300                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6301   0019F2  500B               	movf	I2C_SetCallback@idx^0,w,c
  6302   0019F4  0D02               	mullw	2
  6303   0019F6  0E60               	movlw	low _I2C_Status
  6304   0019F8  24F3               	addwf	243,w,c
  6305   0019FA  6ED9               	movwf	fsr2l,c
  6306   0019FC  0E00               	movlw	high _I2C_Status
  6307   0019FE  20F4               	addwfc	prodh,w,c
  6308   001A00  6EDA               	movwf	fsr2h,c
  6309   001A02  0EDA               	movlw	low _I2C_CallbackReturnStop
  6310   001A04  6EDE               	movwf	postinc2,c
  6311   001A06  0E22               	movlw	high _I2C_CallbackReturnStop
  6312   001A08  6EDD               	movwf	postdec2,c
  6313                           
  6314                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6315   001A0A  500B               	movf	I2C_SetCallback@idx^0,w,c
  6316   001A0C  0D02               	mullw	2
  6317   001A0E  0E6C               	movlw	low (_I2C_Status+12)
  6318   001A10  24F3               	addwf	243,w,c
  6319   001A12  6ED9               	movwf	fsr2l,c
  6320   001A14  0E00               	movlw	high (_I2C_Status+12)
  6321   001A16  20F4               	addwfc	prodh,w,c
  6322   001A18  6EDA               	movwf	fsr2h,c
  6323   001A1A  0E00               	movlw	0
  6324   001A1C  6EDE               	movwf	postinc2,c
  6325   001A1E  0E00               	movlw	0
  6326   001A20  6EDD               	movwf	postdec2,c
  6327   001A22                     l256:
  6328   001A22  0012               	return		;funcret
  6329   001A24                     __end_of_I2C_SetCallback:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function _I2C_SetBuffer *****************
  6333 ;; Defined at:
  6334 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  buffer          2    6[COMRAM] PTR void 
  6337 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
  6338 ;;		 -> main@red2(3), main@red(3), main@dat(3), I2C_ReadDataBlock@reg(1), 
  6339 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@dat
      +a(2), 
  6340 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  6341 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  6342 ;;  bufferSize      2    8[COMRAM] unsigned int 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;Total ram usage:        4 bytes
  6359 ;; Hardware stack levels used: 1
  6360 ;; Hardware stack levels required when called: 4
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_I2C_WriteNBytes
  6365 ;;		_I2C_ReadNBytes
  6366 ;;		_rd1RegCompleteHandler
  6367 ;;		_rd2RegCompleteHandler
  6368 ;;		_wr1RegCompleteHandler
  6369 ;;		_wr2RegCompleteHandler
  6370 ;;		_rdBlkRegCompleteHandler
  6371 ;;		_I2C_Read1ByteRegister
  6372 ;;		_I2C_Read2ByteRegister
  6373 ;;		_I2C_Write1ByteRegister
  6374 ;;		_I2C_Write2ByteRegister
  6375 ;;		_I2C_ReadDataBlock
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text70
  6380   002094                     __ptext70:
  6381                           	callstack 0
  6382   002094                     _I2C_SetBuffer:
  6383                           	callstack 25
  6384   002094                     
  6385                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  6386   002094  0100               	movlb	0	; () banked
  6387   002096  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  6388   002098  EF50  F010         	goto	u2001
  6389   00209C  EF52  F010         	goto	u2000
  6390   0020A0                     u2001:
  6391   0020A0  EF5B  F010         	goto	l236
  6392   0020A4                     u2000:
  6393   0020A4                     
  6394                           ; BSR set to: 0
  6395                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  6396   0020A4  C007  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  6397   0020A8  C008  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  6398   0020AC                     
  6399                           ; BSR set to: 0
  6400                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  6401   0020AC  C009  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  6402   0020B0  C00A  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  6403   0020B4                     
  6404                           ; BSR set to: 0
  6405                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  6406   0020B4  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  6407   0020B6                     l236:
  6408                           
  6409                           ; BSR set to: 0
  6410   0020B6  0012               	return		;funcret
  6411   0020B8                     __end_of_I2C_SetBuffer:
  6412                           	callstack 0
  6413                           
  6414 ;; *************** function _I2C_MasterStop *****************
  6415 ;; Defined at:
  6416 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		None
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;Total ram usage:        0 bytes
  6435 ;; Hardware stack levels used: 1
  6436 ;; Hardware stack levels required when called: 4
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_I2C_DO_SEND_STOP
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text71
  6445   0022DE                     __ptext71:
  6446                           	callstack 0
  6447   0022DE                     _I2C_MasterStop:
  6448                           	callstack 19
  6449   0022DE                     
  6450                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  6451   0022DE  84C5               	bsf	197,2,c	;volatile
  6452   0022E0  0012               	return		;funcret
  6453   0022E2                     __end_of_I2C_MasterStop:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function _I2C_MasterEnableRestart *****************
  6457 ;; Defined at:
  6458 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		None
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;Total ram usage:        0 bytes
  6477 ;; Hardware stack levels used: 1
  6478 ;; Hardware stack levels required when called: 4
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_I2C_DO_SEND_RESTART_READ
  6483 ;;		_I2C_DO_SEND_RESTART_WRITE
  6484 ;;		_I2C_DO_SEND_RESTART
  6485 ;;		_I2C_DO_RX_EMPTY
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text72
  6490   0022E2                     __ptext72:
  6491                           	callstack 0
  6492   0022E2                     _I2C_MasterEnableRestart:
  6493                           	callstack 19
  6494   0022E2                     
  6495                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  6496   0022E2  82C5               	bsf	197,1,c	;volatile
  6497   0022E4  0012               	return		;funcret
  6498   0022E6                     __end_of_I2C_MasterEnableRestart:
  6499                           	callstack 0
  6500                           
  6501 ;; *************** function _I2C_MasterStart *****************
  6502 ;; Defined at:
  6503 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		None
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; Hardware stack levels required when called: 4
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_I2C_MasterOperation
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text73
  6532   0022E6                     __ptext73:
  6533                           	callstack 0
  6534   0022E6                     _I2C_MasterStart:
  6535                           	callstack 23
  6536   0022E6                     
  6537                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  6538   0022E6  80C5               	bsf	197,0,c	;volatile
  6539   0022E8  0012               	return		;funcret
  6540   0022EA                     __end_of_I2C_MasterStart:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _I2C_Close *****************
  6544 ;; Defined at:
  6545 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;		None
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  returnValue     1    6[COMRAM] enum E355
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      enum E355
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, cstack
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;Total ram usage:        1 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; Hardware stack levels required when called: 5
  6566 ;; This function calls:
  6567 ;;		_I2C_MasterClearIrq
  6568 ;;		_I2C_MasterClose
  6569 ;;		_I2C_MasterDisableIrq
  6570 ;; This function is called by:
  6571 ;;		_I2C_WriteNBytes
  6572 ;;		_I2C_ReadNBytes
  6573 ;;		_I2C_Read1ByteRegister
  6574 ;;		_I2C_Read2ByteRegister
  6575 ;;		_I2C_Write1ByteRegister
  6576 ;;		_I2C_Write2ByteRegister
  6577 ;;		_I2C_ReadDataBlock
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text74
  6582   002018                     __ptext74:
  6583                           	callstack 0
  6584   002018                     _I2C_Close:
  6585                           	callstack 24
  6586   002018                     
  6587                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  6588   002018  0E01               	movlw	1
  6589   00201A  6E07               	movwf	I2C_Close@returnValue^0,c
  6590   00201C                     
  6591                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  6592   00201C  0100               	movlb	0	; () banked
  6593   00201E  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  6594   002020  EF14  F010         	goto	u2431
  6595   002024  EF16  F010         	goto	u2430
  6596   002028                     u2431:
  6597   002028  EF20  F010         	goto	l4485
  6598   00202C                     u2430:
  6599   00202C                     
  6600                           ; BSR set to: 0
  6601                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  6602   00202C  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  6603                           
  6604                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  6605   00202E  697C               	setf	(_I2C_Status+28)& (0+255),b
  6606   002030                     
  6607                           ; BSR set to: 0
  6608                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  6609   002030  EC79  F011         	call	_I2C_MasterClearIrq	;wreg free
  6610                           
  6611                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  6612   002034  EC75  F011         	call	_I2C_MasterDisableIrq	;wreg free
  6613                           
  6614                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  6615   002038  EC77  F011         	call	_I2C_MasterClose	;wreg free
  6616   00203C                     
  6617                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  6618   00203C  C082  F007         	movff	_I2C_Status+34,I2C_Close@returnValue
  6619   002040                     l4485:
  6620                           
  6621                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  6622   002040  5007               	movf	I2C_Close@returnValue^0,w,c
  6623   002042  0012               	return		;funcret
  6624   002044                     __end_of_I2C_Close:
  6625                           	callstack 0
  6626                           
  6627 ;; *************** function _I2C_MasterDisableIrq *****************
  6628 ;; Defined at:
  6629 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		None
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;Total ram usage:        0 bytes
  6648 ;; Hardware stack levels used: 1
  6649 ;; Hardware stack levels required when called: 4
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_I2C_Close
  6654 ;;		_I2C_SetTimeOut
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text75
  6659   0022EA                     __ptext75:
  6660                           	callstack 0
  6661   0022EA                     _I2C_MasterDisableIrq:
  6662                           	callstack 24
  6663   0022EA                     
  6664                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  6665   0022EA  969D               	bcf	157,3,c	;volatile
  6666   0022EC  0012               	return		;funcret
  6667   0022EE                     __end_of_I2C_MasterDisableIrq:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _I2C_MasterClose *****************
  6671 ;; Defined at:
  6672 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		None
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;Total ram usage:        0 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 4
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_I2C_Close
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text76
  6701   0022EE                     __ptext76:
  6702                           	callstack 0
  6703   0022EE                     _I2C_MasterClose:
  6704                           	callstack 24
  6705   0022EE                     
  6706                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  6707   0022EE  9AC6               	bcf	198,5,c	;volatile
  6708   0022F0  0012               	return		;funcret
  6709   0022F2                     __end_of_I2C_MasterClose:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _I2C_MasterClearIrq *****************
  6713 ;; Defined at:
  6714 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		None
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; Hardware stack levels required when called: 4
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_I2C_Open
  6739 ;;		_I2C_Close
  6740 ;;		_I2C_MasterFsm
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text77
  6745   0022F2                     __ptext77:
  6746                           	callstack 0
  6747   0022F2                     _I2C_MasterClearIrq:
  6748                           	callstack 24
  6749   0022F2                     
  6750                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  6751   0022F2  969E               	bcf	158,3,c	;volatile
  6752   0022F4  0012               	return		;funcret
  6753   0022F6                     __end_of_I2C_MasterClearIrq:
  6754                           	callstack 0
  6755                           
  6756 ;; *************** function _INTERRUPT_InterruptManager *****************
  6757 ;; Defined at:
  6758 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;Total ram usage:        4 bytes
  6777 ;; Hardware stack levels used: 1
  6778 ;; Hardware stack levels required when called: 3
  6779 ;; This function calls:
  6780 ;;		Absolute function
  6781 ;;		_EUSART_Receive_ISR
  6782 ;;		_EUSART_Transmit_ISR
  6783 ;;		_TMR0_ISR
  6784 ;;		_USART_RXC_vect
  6785 ;;		_USART_TXC_vect
  6786 ;; This function is called by:
  6787 ;;		Interrupt level 2
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           	psect	intcode
  6792   000008                     __pintcode:
  6793                           	callstack 0
  6794   000008                     _INTERRUPT_InterruptManager:
  6795                           	callstack 18
  6796                           
  6797                           ;incstack = 0
  6798   000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6799   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  6800   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6801   000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6802   000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6803   00001A                     
  6804                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6805   00001A  AAF2               	btfss	242,5,c	;volatile
  6806   00001C  EF12  F000         	goto	i2u184_41
  6807   000020  EF14  F000         	goto	i2u184_40
  6808   000024                     i2u184_41:
  6809   000024  EF1F  F000         	goto	i2l723
  6810   000028                     i2u184_40:
  6811   000028  A4F2               	btfss	242,2,c	;volatile
  6812   00002A  EF19  F000         	goto	i2u185_41
  6813   00002E  EF1B  F000         	goto	i2u185_40
  6814   000032                     i2u185_41:
  6815   000032  EF1F  F000         	goto	i2l723
  6816   000036                     i2u185_40:
  6817   000036                     
  6818                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  6819   000036  EC81  F00F         	call	_TMR0_ISR	;wreg free
  6820                           
  6821                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  6822   00003A  EF5E  F000         	goto	i2l731
  6823   00003E                     i2l723:
  6824   00003E  ACF2               	btfss	242,6,c	;volatile
  6825   000040  EF24  F000         	goto	i2u186_41
  6826   000044  EF26  F000         	goto	i2u186_40
  6827   000048                     i2u186_41:
  6828   000048  EF5E  F000         	goto	i2l731
  6829   00004C                     i2u186_40:
  6830   00004C                     
  6831                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6832   00004C  A89D               	btfss	157,4,c	;volatile
  6833   00004E  EF2B  F000         	goto	i2u187_41
  6834   000052  EF2D  F000         	goto	i2u187_40
  6835   000056                     i2u187_41:
  6836   000056  EF42  F000         	goto	i2l726
  6837   00005A                     i2u187_40:
  6838   00005A  A89E               	btfss	158,4,c	;volatile
  6839   00005C  EF32  F000         	goto	i2u188_41
  6840   000060  EF34  F000         	goto	i2u188_40
  6841   000064                     i2u188_41:
  6842   000064  EF42  F000         	goto	i2l726
  6843   000068                     i2u188_40:
  6844   000068                     
  6845                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_TxDefaultInterruptHandler();
  6846   000068  D802               	call	i2u189_48
  6847   00006A  EF40  F000         	goto	i2u189_49
  6848   00006E                     i2u189_48:
  6849   00006E  0005               	push	
  6850   000070  6EFA               	movwf	pclath,c
  6851   000072  5047               	movf	_EUSART_TxDefaultInterruptHandler^0,w,c
  6852   000074  6EFD               	movwf	tosl,c
  6853   000076  5048               	movf	(_EUSART_TxDefaultInterruptHandler+1)^0,w,c
  6854   000078  6EFE               	movwf	tosh,c
  6855   00007A  6AFF               	clrf	tosu,c
  6856   00007C  50FA               	movf	pclath,w,c
  6857   00007E  0012               	return		;indir
  6858   000080                     i2u189_49:
  6859                           
  6860                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6861   000080  EF5E  F000         	goto	i2l731
  6862   000084                     i2l726:
  6863   000084  AA9D               	btfss	157,5,c	;volatile
  6864   000086  EF47  F000         	goto	i2u190_41
  6865   00008A  EF49  F000         	goto	i2u190_40
  6866   00008E                     i2u190_41:
  6867   00008E  EF5E  F000         	goto	i2l730
  6868   000092                     i2u190_40:
  6869   000092  AA9E               	btfss	158,5,c	;volatile
  6870   000094  EF4E  F000         	goto	i2u191_41
  6871   000098  EF50  F000         	goto	i2u191_40
  6872   00009C                     i2u191_41:
  6873   00009C  EF5E  F000         	goto	i2l730
  6874   0000A0                     i2u191_40:
  6875   0000A0                     
  6876                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_RxDefaultInterruptHandler();
  6877   0000A0  D802               	call	i2u192_48
  6878   0000A2  EF5C  F000         	goto	i2u192_49
  6879   0000A6                     i2u192_48:
  6880   0000A6  0005               	push	
  6881   0000A8  6EFA               	movwf	pclath,c
  6882   0000AA  5045               	movf	_EUSART_RxDefaultInterruptHandler^0,w,c
  6883   0000AC  6EFD               	movwf	tosl,c
  6884   0000AE  5046               	movf	(_EUSART_RxDefaultInterruptHandler+1)^0,w,c
  6885   0000B0  6EFE               	movwf	tosh,c
  6886   0000B2  6AFF               	clrf	tosu,c
  6887   0000B4  50FA               	movf	pclath,w,c
  6888   0000B6  0012               	return		;indir
  6889   0000B8                     i2u192_49:
  6890                           
  6891                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  6892   0000B8  EF5E  F000         	goto	i2l731
  6893   0000BC                     i2l730:
  6894   0000BC                     i2l731:
  6895   0000BC  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6896   0000C0  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6897   0000C4  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6898   0000C8  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6899   0000CC  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6900   0000CE  0011               	retfie		f
  6901   0000D0                     __end_of_INTERRUPT_InterruptManager:
  6902                           	callstack 0
  6903                           
  6904 ;; *************** function _EUSART_Transmit_ISR *****************
  6905 ;; Defined at:
  6906 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6924 ;;Total ram usage:        0 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_EUSART_Initialize
  6930 ;;		_INTERRUPT_InterruptManager
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text79
  6935   001E4C                     __ptext79:
  6936                           	callstack 0
  6937   001E4C                     _EUSART_Transmit_ISR:
  6938                           	callstack 20
  6939   001E4C                     
  6940                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6941   001E4C  0E08               	movlw	8
  6942   001E4E  604B               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
  6943   001E50  EF2C  F00F         	goto	i2u56_41
  6944   001E54  EF2E  F00F         	goto	i2u56_40
  6945   001E58                     i2u56_41:
  6946   001E58  EF44  F00F         	goto	i2l663
  6947   001E5C                     i2u56_40:
  6948   001E5C                     
  6949                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6950   001E5C  0E2C               	movlw	low _eusartTxBuffer
  6951   001E5E  2438               	addwf	_eusartTxTail^0,w,c	;volatile
  6952   001E60  6ED9               	movwf	fsr2l,c
  6953   001E62  6ADA               	clrf	fsr2h,c
  6954   001E64  0E00               	movlw	high _eusartTxBuffer
  6955   001E66  22DA               	addwfc	fsr2h,f,c
  6956   001E68  50DF               	movf	indf2,w,c
  6957   001E6A  6EAD               	movwf	173,c	;volatile
  6958   001E6C  2A38               	incf	_eusartTxTail^0,f,c	;volatile
  6959   001E6E                     
  6960                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6961   001E6E  0E07               	movlw	7
  6962   001E70  6438               	cpfsgt	_eusartTxTail^0,c	;volatile
  6963   001E72  EF3D  F00F         	goto	i2u57_41
  6964   001E76  EF3F  F00F         	goto	i2u57_40
  6965   001E7A                     i2u57_41:
  6966   001E7A  EF41  F00F         	goto	i2l2435
  6967   001E7E                     i2u57_40:
  6968   001E7E                     
  6969                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6970   001E7E  0E00               	movlw	0
  6971   001E80  6E38               	movwf	_eusartTxTail^0,c	;volatile
  6972   001E82                     i2l2435:
  6973                           
  6974                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6975   001E82  2A4B               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
  6976                           
  6977                           ;mcc_generated_files/eusart.c: 209:     }
  6978   001E84  EF45  F00F         	goto	i2l666
  6979   001E88                     i2l663:
  6980                           
  6981                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TX1IE = 0;
  6982   001E88  989D               	bcf	157,4,c	;volatile
  6983   001E8A                     i2l666:
  6984   001E8A  0012               	return		;funcret
  6985   001E8C                     __end_of_EUSART_Transmit_ISR:
  6986                           	callstack 0
  6987                           
  6988 ;; *************** function _USART_TXC_vect *****************
  6989 ;; Defined at:
  6990 ;;		line 69 in file "Modbas_RTU.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;		None
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;		None
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		None
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7008 ;;Total ram usage:        0 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_main
  7014 ;;		_INTERRUPT_InterruptManager
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text80
  7019   0022F6                     __ptext80:
  7020                           	callstack 0
  7021   0022F6                     _USART_TXC_vect:
  7022                           	callstack 20
  7023   0022F6                     
  7024                           ;Modbas_RTU.c: 73:    PIE1bits.TX1IE=0;
  7025   0022F6  989D               	bcf	157,4,c	;volatile
  7026   0022F8  0012               	return		;funcret
  7027   0022FA                     __end_of_USART_TXC_vect:
  7028                           	callstack 0
  7029                           
  7030 ;; *************** function _EUSART_Receive_ISR *****************
  7031 ;; Defined at:
  7032 ;;		line 216 in file "mcc_generated_files/eusart.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;		None
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;Total ram usage:        0 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; Hardware stack levels required when called: 2
  7053 ;; This function calls:
  7054 ;;		Absolute function
  7055 ;;		_EUSART_DefaultErrorHandler
  7056 ;;		_EUSART_DefaultFramingErrorHandler
  7057 ;;		_EUSART_DefaultOverrunErrorHandler
  7058 ;;		_EUSART_RxDataHandler
  7059 ;; This function is called by:
  7060 ;;		_EUSART_Initialize
  7061 ;;		_INTERRUPT_InterruptManager
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text81
  7066   001624                     __ptext81:
  7067                           	callstack 0
  7068   001624                     _EUSART_Receive_ISR:
  7069                           	callstack 18
  7070   001624                     
  7071                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7072   001624  0E24               	movlw	low _eusartRxStatusBuffer
  7073   001626  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7074   001628  6ED9               	movwf	fsr2l,c
  7075   00162A  6ADA               	clrf	fsr2h,c
  7076   00162C  0E00               	movlw	high _eusartRxStatusBuffer
  7077   00162E  22DA               	addwfc	fsr2h,f,c
  7078   001630  0E00               	movlw	0
  7079   001632  6EDF               	movwf	indf2,c
  7080   001634                     
  7081                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  7082   001634  A4AB               	btfss	171,2,c	;volatile
  7083   001636  EF1F  F00B         	goto	i2u156_41
  7084   00163A  EF21  F00B         	goto	i2u156_40
  7085   00163E                     i2u156_41:
  7086   00163E  EF34  F00B         	goto	i2l3527
  7087   001642                     i2u156_40:
  7088   001642                     
  7089                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7090   001642  0E24               	movlw	low _eusartRxStatusBuffer
  7091   001644  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7092   001646  6ED9               	movwf	fsr2l,c
  7093   001648  6ADA               	clrf	fsr2h,c
  7094   00164A  0E00               	movlw	high _eusartRxStatusBuffer
  7095   00164C  22DA               	addwfc	fsr2h,f,c
  7096   00164E  82DF               	bsf	indf2,1,c
  7097   001650                     
  7098                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  7099   001650  D802               	call	i2u157_48
  7100   001652  EF34  F00B         	goto	i2u157_49
  7101   001656                     i2u157_48:
  7102   001656  0005               	push	
  7103   001658  6EFA               	movwf	pclath,c
  7104   00165A  5043               	movf	_EUSART_FramingErrorHandler^0,w,c
  7105   00165C  6EFD               	movwf	tosl,c
  7106   00165E  5044               	movf	(_EUSART_FramingErrorHandler+1)^0,w,c
  7107   001660  6EFE               	movwf	tosh,c
  7108   001662  6AFF               	clrf	tosu,c
  7109   001664  50FA               	movf	pclath,w,c
  7110   001666  0012               	return		;indir
  7111   001668                     i2u157_49:
  7112   001668                     i2l3527:
  7113                           
  7114                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  7115   001668  A2AB               	btfss	171,1,c	;volatile
  7116   00166A  EF39  F00B         	goto	i2u158_41
  7117   00166E  EF3B  F00B         	goto	i2u158_40
  7118   001672                     i2u158_41:
  7119   001672  EF4F  F00B         	goto	i2l3533
  7120   001676                     i2u158_40:
  7121   001676                     
  7122                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7123   001676  0E24               	movlw	low _eusartRxStatusBuffer
  7124   001678  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7125   00167A  6ED9               	movwf	fsr2l,c
  7126   00167C  6ADA               	clrf	fsr2h,c
  7127   00167E  0E00               	movlw	high _eusartRxStatusBuffer
  7128   001680  22DA               	addwfc	fsr2h,f,c
  7129   001682  84DF               	bsf	indf2,2,c
  7130   001684                     
  7131                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  7132   001684  D802               	call	i2u159_48
  7133   001686  EF4F  F00B         	goto	i2u159_49
  7134   00168A                     i2u159_48:
  7135   00168A  0005               	push	
  7136   00168C  6EFA               	movwf	pclath,c
  7137   00168E  0100               	movlb	0	; () banked
  7138   001690  51DF               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  7139   001692  6EFD               	movwf	tosl,c
  7140   001694  51E0               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  7141   001696  6EFE               	movwf	tosh,c
  7142   001698  6AFF               	clrf	tosu,c
  7143   00169A  50FA               	movf	pclath,w,c
  7144   00169C  0012               	return		;indir
  7145   00169E                     i2u159_49:
  7146   00169E                     i2l3533:
  7147                           
  7148                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7149   00169E  0E24               	movlw	low _eusartRxStatusBuffer
  7150   0016A0  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7151   0016A2  6ED9               	movwf	fsr2l,c
  7152   0016A4  6ADA               	clrf	fsr2h,c
  7153   0016A6  0E00               	movlw	high _eusartRxStatusBuffer
  7154   0016A8  22DA               	addwfc	fsr2h,f,c
  7155   0016AA  50DF               	movf	indf2,w,c
  7156   0016AC  B4D8               	btfsc	status,2,c
  7157   0016AE  EF5B  F00B         	goto	i2u160_41
  7158   0016B2  EF5D  F00B         	goto	i2u160_40
  7159   0016B6                     i2u160_41:
  7160   0016B6  EF6C  F00B         	goto	i2l3537
  7161   0016BA                     i2u160_40:
  7162   0016BA                     
  7163                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  7164   0016BA  D802               	call	i2u161_48
  7165   0016BC  EF6A  F00B         	goto	i2u161_49
  7166   0016C0                     i2u161_48:
  7167   0016C0  0005               	push	
  7168   0016C2  6EFA               	movwf	pclath,c
  7169   0016C4  0100               	movlb	0	; () banked
  7170   0016C6  51DD               	movf	_EUSART_ErrorHandler& (0+255),w,b
  7171   0016C8  6EFD               	movwf	tosl,c
  7172   0016CA  51DE               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  7173   0016CC  6EFE               	movwf	tosh,c
  7174   0016CE  6AFF               	clrf	tosu,c
  7175   0016D0  50FA               	movf	pclath,w,c
  7176   0016D2  0012               	return		;indir
  7177   0016D4                     i2u161_49:
  7178                           
  7179                           ;mcc_generated_files/eusart.c: 233:     } else {
  7180   0016D4  EF6E  F00B         	goto	i2l673
  7181   0016D8                     i2l3537:
  7182                           
  7183                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  7184   0016D8  EC22  F010         	call	_EUSART_RxDataHandler	;wreg free
  7185   0016DC                     i2l673:
  7186   0016DC  0012               	return		;funcret
  7187   0016DE                     __end_of_EUSART_Receive_ISR:
  7188                           	callstack 0
  7189                           
  7190 ;; *************** function _USART_RXC_vect *****************
  7191 ;; Defined at:
  7192 ;;		line 41 in file "Modbas_RTU.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  TempModbas      1    1[COMRAM] unsigned char 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7210 ;;Total ram usage:        2 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; Hardware stack levels required when called: 1
  7213 ;; This function calls:
  7214 ;;		_TMR0_Reload
  7215 ;;		_TMR0_StartTimer
  7216 ;; This function is called by:
  7217 ;;		_main
  7218 ;;		_INTERRUPT_InterruptManager
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text82
  7223   0018A8                     __ptext82:
  7224                           	callstack 0
  7225   0018A8                     _USART_RXC_vect:
  7226                           	callstack 19
  7227   0018A8                     
  7228                           ;Modbas_RTU.c: 43:     unsigned char TempModbas = RCREG;
  7229   0018A8  CFAE F002          	movff	4014,USART_RXC_vect@TempModbas	;volatile
  7230   0018AC                     
  7231                           ;Modbas_RTU.c: 44:  TMR0_Reload();
  7232   0018AC  EC5A  F011         	call	_TMR0_Reload	;wreg free
  7233   0018B0                     
  7234                           ;Modbas_RTU.c: 45:  if (!Bit_action_ModbasRtu.b2)
  7235   0018B0  B43C               	btfsc	_Bit_action_ModbasRtu^0,2,c
  7236   0018B2  EF5D  F00C         	goto	i2u162_41
  7237   0018B6  EF5F  F00C         	goto	i2u162_40
  7238   0018BA                     i2u162_41:
  7239   0018BA  EF96  F00C         	goto	i2l782
  7240   0018BE                     i2u162_40:
  7241   0018BE                     
  7242                           ;Modbas_RTU.c: 46:   {;Modbas_RTU.c: 47:   if (!Bit_action_ModbasRtu.b0)
  7243   0018BE  B03C               	btfsc	_Bit_action_ModbasRtu^0,0,c
  7244   0018C0  EF64  F00C         	goto	i2u163_41
  7245   0018C4  EF66  F00C         	goto	i2u163_40
  7246   0018C8                     i2u163_41:
  7247   0018C8  EF86  F00C         	goto	i2l3559
  7248   0018CC                     i2u163_40:
  7249   0018CC                     
  7250                           ;Modbas_RTU.c: 48:    {;Modbas_RTU.c: 49:    Bit_action_ModbasRtu.b0 = 1;
  7251   0018CC  803C               	bsf	_Bit_action_ModbasRtu^0,0,c
  7252   0018CE                     
  7253                           ;Modbas_RTU.c: 50:    if (TempModbas == 0x31 )
  7254   0018CE  0E31               	movlw	49
  7255   0018D0  1802               	xorwf	USART_RXC_vect@TempModbas^0,w,c
  7256   0018D2  A4D8               	btfss	status,2,c
  7257   0018D4  EF6E  F00C         	goto	i2u164_41
  7258   0018D8  EF70  F00C         	goto	i2u164_40
  7259   0018DC                     i2u164_41:
  7260   0018DC  EF82  F00C         	goto	i2l3555
  7261   0018E0                     i2u164_40:
  7262   0018E0                     
  7263                           ;Modbas_RTU.c: 51:     {;Modbas_RTU.c: 52:     Bit_action_ModbasRtu.b1 = 1;
  7264   0018E0  823C               	bsf	_Bit_action_ModbasRtu^0,1,c
  7265   0018E2  B289               	btfsc	137,1,c	;volatile
  7266   0018E4  EF76  F00C         	goto	i2u165_41
  7267   0018E8  EF79  F00C         	goto	i2u165_40
  7268   0018EC                     i2u165_41:
  7269   0018EC  0E01               	movlw	1
  7270   0018EE  EF7A  F00C         	goto	i2u165_46
  7271   0018F2                     i2u165_40:
  7272   0018F2  0E00               	movlw	0
  7273   0018F4                     i2u165_46:
  7274   0018F4  0AFF               	xorlw	255
  7275   0018F6  6E01               	movwf	??_USART_RXC_vect^0,c
  7276   0018F8  4601               	rlncf	??_USART_RXC_vect^0,f,c
  7277   0018FA  5089               	movf	137,w,c	;volatile
  7278   0018FC  1801               	xorwf	??_USART_RXC_vect^0,w,c
  7279   0018FE  0BFD               	andlw	-3
  7280   001900  1801               	xorwf	??_USART_RXC_vect^0,w,c
  7281   001902  6E89               	movwf	137,c	;volatile
  7282   001904                     i2l3555:
  7283                           
  7284                           ;Modbas_RTU.c: 56:    quantity_Data_ModbasRtu = 0;
  7285   001904  0E00               	movlw	0
  7286   001906  6E3E               	movwf	_quantity_Data_ModbasRtu^0,c
  7287   001908                     
  7288                           ;Modbas_RTU.c: 57:    TMR0_StartTimer();
  7289   001908  EC7D  F011         	call	_TMR0_StartTimer	;wreg free
  7290   00190C                     i2l3559:
  7291                           
  7292                           ;Modbas_RTU.c: 59:   if (Bit_action_ModbasRtu.b1 == 1)
  7293   00190C  A23C               	btfss	_Bit_action_ModbasRtu^0,1,c
  7294   00190E  EF8B  F00C         	goto	i2u166_41
  7295   001912  EF8D  F00C         	goto	i2u166_40
  7296   001916                     i2u166_41:
  7297   001916  EF96  F00C         	goto	i2l782
  7298   00191A                     i2u166_40:
  7299   00191A                     
  7300                           ;Modbas_RTU.c: 61:    {;Modbas_RTU.c: 62:      Danie_Rx_ModbasRtu[quantity_Data_ModbasRt
      +                          u] = TempModbas;
  7301   00191A  0E8C               	movlw	low _Danie_Rx_ModbasRtu
  7302   00191C  243E               	addwf	_quantity_Data_ModbasRtu^0,w,c
  7303   00191E  6ED9               	movwf	fsr2l,c
  7304   001920  6ADA               	clrf	fsr2h,c
  7305   001922  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7306   001924  22DA               	addwfc	fsr2h,f,c
  7307   001926  C002  FFDF         	movff	USART_RXC_vect@TempModbas,indf2
  7308   00192A                     
  7309                           ;Modbas_RTU.c: 63:      quantity_Data_ModbasRtu ++;
  7310   00192A  2A3E               	incf	_quantity_Data_ModbasRtu^0,f,c
  7311   00192C                     i2l782:
  7312   00192C  0012               	return		;funcret
  7313   00192E                     __end_of_USART_RXC_vect:
  7314                           	callstack 0
  7315                           
  7316 ;; *************** function _TMR0_StartTimer *****************
  7317 ;; Defined at:
  7318 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		None
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;Total ram usage:        0 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_USART_RXC_vect
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text83
  7346   0022FA                     __ptext83:
  7347                           	callstack 0
  7348   0022FA                     _TMR0_StartTimer:
  7349                           	callstack 19
  7350   0022FA                     
  7351                           ;mcc_generated_files/tmr0.c: 98:     T0CONbits.TMR0ON = 1;
  7352   0022FA  8ED5               	bsf	213,7,c	;volatile
  7353   0022FC  0012               	return		;funcret
  7354   0022FE                     __end_of_TMR0_StartTimer:
  7355                           	callstack 0
  7356                           
  7357 ;; *************** function _TMR0_Reload *****************
  7358 ;; Defined at:
  7359 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;		None
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;		None
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      void 
  7366 ;; Registers used:
  7367 ;;		None
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;Total ram usage:        0 bytes
  7378 ;; Hardware stack levels used: 1
  7379 ;; This function calls:
  7380 ;;		Nothing
  7381 ;; This function is called by:
  7382 ;;		_USART_RXC_vect
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text84
  7387   0022B4                     __ptext84:
  7388                           	callstack 0
  7389   0022B4                     _TMR0_Reload:
  7390                           	callstack 19
  7391   0022B4                     
  7392                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = timer0ReloadVal;
  7393   0022B4  C04C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  7394   0022B8  0012               	return		;funcret
  7395   0022BA                     __end_of_TMR0_Reload:
  7396                           	callstack 0
  7397                           
  7398 ;; *************** function _TMR0_ISR *****************
  7399 ;; Defined at:
  7400 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;Total ram usage:        0 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 2
  7421 ;; This function calls:
  7422 ;;		Absolute function
  7423 ;;		_TIMER0_COMP_vect
  7424 ;;		_TMR0_DefaultInterruptHandler
  7425 ;; This function is called by:
  7426 ;;		_INTERRUPT_InterruptManager
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text85
  7431   001F02                     __ptext85:
  7432                           	callstack 0
  7433   001F02                     _TMR0_ISR:
  7434                           	callstack 18
  7435   001F02                     
  7436                           ;mcc_generated_files/tmr0.c: 132:  TIMER0_COMP_vect () ;
  7437   001F02  EC9A  F010         	call	_TIMER0_COMP_vect	;wreg free
  7438   001F06                     
  7439                           ;mcc_generated_files/tmr0.c: 135:     INTCONbits.TMR0IF = 0;
  7440   001F06  94F2               	bcf	242,2,c	;volatile
  7441   001F08                     
  7442                           ;mcc_generated_files/tmr0.c: 138:     TMR0L = timer0ReloadVal;
  7443   001F08  C04C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  7444   001F0C                     
  7445                           ;mcc_generated_files/tmr0.c: 140:     if(TMR0_InterruptHandler)
  7446   001F0C  5049               	movf	_TMR0_InterruptHandler^0,w,c
  7447   001F0E  104A               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  7448   001F10  B4D8               	btfsc	status,2,c
  7449   001F12  EF8D  F00F         	goto	i2u54_41
  7450   001F16  EF8F  F00F         	goto	i2u54_40
  7451   001F1A                     i2u54_41:
  7452   001F1A  EF9B  F00F         	goto	i2l551
  7453   001F1E                     i2u54_40:
  7454   001F1E                     
  7455                           ;mcc_generated_files/tmr0.c: 141:     {;mcc_generated_files/tmr0.c: 142:         TMR0_In
      +                          terruptHandler();
  7456   001F1E  D802               	call	i2u55_48
  7457   001F20  EF9B  F00F         	goto	i2u55_49
  7458   001F24                     i2u55_48:
  7459   001F24  0005               	push	
  7460   001F26  6EFA               	movwf	pclath,c
  7461   001F28  5049               	movf	_TMR0_InterruptHandler^0,w,c
  7462   001F2A  6EFD               	movwf	tosl,c
  7463   001F2C  504A               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  7464   001F2E  6EFE               	movwf	tosh,c
  7465   001F30  6AFF               	clrf	tosu,c
  7466   001F32  50FA               	movf	pclath,w,c
  7467   001F34  0012               	return		;indir
  7468   001F36                     i2u55_49:
  7469   001F36                     i2l551:
  7470   001F36  0012               	return		;funcret
  7471   001F38                     __end_of_TMR0_ISR:
  7472                           	callstack 0
  7473                           
  7474 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7475 ;; Defined at:
  7476 ;;		line 153 in file "mcc_generated_files/tmr0.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		None
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_TMR0_Initialize
  7500 ;;		_TMR0_ISR
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text86
  7505   002302                     __ptext86:
  7506                           	callstack 0
  7507   002302                     _TMR0_DefaultInterruptHandler:
  7508                           	callstack 19
  7509   002302  0012               	return		;funcret
  7510   002304                     __end_of_TMR0_DefaultInterruptHandler:
  7511                           	callstack 0
  7512                           
  7513 ;; *************** function _TIMER0_COMP_vect *****************
  7514 ;; Defined at:
  7515 ;;		line 24 in file "Modbas_RTU.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;		None
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      void 
  7522 ;; Registers used:
  7523 ;;		cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;Total ram usage:        0 bytes
  7534 ;; Hardware stack levels used: 1
  7535 ;; Hardware stack levels required when called: 1
  7536 ;; This function calls:
  7537 ;;		_TMR0_StopTimer
  7538 ;; This function is called by:
  7539 ;;		_TMR0_ISR
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text87
  7544   002134                     __ptext87:
  7545                           	callstack 0
  7546   002134                     _TIMER0_COMP_vect:
  7547                           	callstack 18
  7548   002134                     
  7549                           ;Modbas_RTU.c: 27:    Bit_action_ModbasRtu.b0 = 0;
  7550   002134  903C               	bcf	_Bit_action_ModbasRtu^0,0,c
  7551   002136                     
  7552                           ;Modbas_RTU.c: 28:    TMR0_StopTimer();
  7553   002136  EC7F  F011         	call	_TMR0_StopTimer	;wreg free
  7554   00213A                     
  7555                           ;Modbas_RTU.c: 29:       if ( Bit_action_ModbasRtu.b1)
  7556   00213A  A23C               	btfss	_Bit_action_ModbasRtu^0,1,c
  7557   00213C  EFA2  F010         	goto	i2u47_41
  7558   002140  EFA4  F010         	goto	i2u47_40
  7559   002144                     i2u47_41:
  7560   002144  EFA6  F010         	goto	i2l773
  7561   002148                     i2u47_40:
  7562   002148                     
  7563                           ;Modbas_RTU.c: 30:        {;Modbas_RTU.c: 31:       Bit_action_ModbasRtu.b1 = 0;
  7564   002148  923C               	bcf	_Bit_action_ModbasRtu^0,1,c
  7565                           
  7566                           ;Modbas_RTU.c: 34:    Bit_action_ModbasRtu.b2 = 1;
  7567   00214A  843C               	bsf	_Bit_action_ModbasRtu^0,2,c
  7568   00214C                     i2l773:
  7569   00214C  0012               	return		;funcret
  7570   00214E                     __end_of_TIMER0_COMP_vect:
  7571                           	callstack 0
  7572                           
  7573 ;; *************** function _TMR0_StopTimer *****************
  7574 ;; Defined at:
  7575 ;;		line 101 in file "mcc_generated_files/tmr0.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		None
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;Total ram usage:        0 bytes
  7594 ;; Hardware stack levels used: 1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_TIMER0_COMP_vect
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text88
  7603   0022FE                     __ptext88:
  7604                           	callstack 0
  7605   0022FE                     _TMR0_StopTimer:
  7606                           	callstack 18
  7607   0022FE                     
  7608                           ;mcc_generated_files/tmr0.c: 104:     T0CONbits.TMR0ON = 0;
  7609   0022FE  9ED5               	bcf	213,7,c	;volatile
  7610   002300  0012               	return		;funcret
  7611   002302                     __end_of_TMR0_StopTimer:
  7612                           	callstack 0
  7613                           
  7614 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7615 ;; Defined at:
  7616 ;;		line 252 in file "mcc_generated_files/eusart.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;		None
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;		None
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1    wreg      void 
  7623 ;; Registers used:
  7624 ;;		None
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7634 ;;Total ram usage:        0 bytes
  7635 ;; Hardware stack levels used: 1
  7636 ;; This function calls:
  7637 ;;		Nothing
  7638 ;; This function is called by:
  7639 ;;		_EUSART_Initialize
  7640 ;;		_EUSART_Receive_ISR
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text89
  7645   0022BA                     __ptext89:
  7646                           	callstack 0
  7647   0022BA                     _EUSART_DefaultOverrunErrorHandler:
  7648                           	callstack 19
  7649   0022BA                     
  7650                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  7651   0022BA  98AB               	bcf	171,4,c	;volatile
  7652                           
  7653                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  7654   0022BC  88AB               	bsf	171,4,c	;volatile
  7655   0022BE  0012               	return		;funcret
  7656   0022C0                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7660 ;; Defined at:
  7661 ;;		line 250 in file "mcc_generated_files/eusart.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		None
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_EUSART_Initialize
  7685 ;;		_EUSART_Receive_ISR
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text90
  7690   002304                     __ptext90:
  7691                           	callstack 0
  7692   002304                     _EUSART_DefaultFramingErrorHandler:
  7693                           	callstack 19
  7694   002304  0012               	return		;funcret
  7695   002306                     __end_of_EUSART_DefaultFramingErrorHandler:
  7696                           	callstack 0
  7697                           
  7698 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7699 ;; Defined at:
  7700 ;;		line 260 in file "mcc_generated_files/eusart.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; Hardware stack levels required when called: 1
  7721 ;; This function calls:
  7722 ;;		_EUSART_RxDataHandler
  7723 ;; This function is called by:
  7724 ;;		_EUSART_Initialize
  7725 ;;		_EUSART_Receive_ISR
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text91
  7730   0022C0                     __ptext91:
  7731                           	callstack 0
  7732   0022C0                     _EUSART_DefaultErrorHandler:
  7733                           	callstack 18
  7734   0022C0                     
  7735                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  7736   0022C0  EC22  F010         	call	_EUSART_RxDataHandler	;wreg free
  7737   0022C4  0012               	return		;funcret
  7738   0022C6                     __end_of_EUSART_DefaultErrorHandler:
  7739                           	callstack 0
  7740                           
  7741 ;; *************** function _EUSART_RxDataHandler *****************
  7742 ;; Defined at:
  7743 ;;		line 240 in file "mcc_generated_files/eusart.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;		None
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      void 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;Total ram usage:        0 bytes
  7762 ;; Hardware stack levels used: 1
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_EUSART_Receive_ISR
  7767 ;;		_EUSART_DefaultErrorHandler
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text92
  7772   002044                     __ptext92:
  7773                           	callstack 0
  7774   002044                     _EUSART_RxDataHandler:
  7775                           	callstack 19
  7776   002044                     
  7777                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7778   002044  0E84               	movlw	low _eusartRxBuffer
  7779   002046  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  7780   002048  6ED9               	movwf	fsr2l,c
  7781   00204A  6ADA               	clrf	fsr2h,c
  7782   00204C  0E00               	movlw	high _eusartRxBuffer
  7783   00204E  22DA               	addwfc	fsr2h,f,c
  7784   002050  CFAE FFDF          	movff	4014,indf2	;volatile
  7785   002054  2A37               	incf	_eusartRxHead^0,f,c	;volatile
  7786   002056                     
  7787                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7788   002056  0E07               	movlw	7
  7789   002058  6437               	cpfsgt	_eusartRxHead^0,c	;volatile
  7790   00205A  EF31  F010         	goto	i2u132_41
  7791   00205E  EF33  F010         	goto	i2u132_40
  7792   002062                     i2u132_41:
  7793   002062  EF35  F010         	goto	i2l3203
  7794   002066                     i2u132_40:
  7795   002066                     
  7796                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  7797   002066  0E00               	movlw	0
  7798   002068  6E37               	movwf	_eusartRxHead^0,c	;volatile
  7799   00206A                     i2l3203:
  7800                           
  7801                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  7802   00206A  2A35               	incf	_eusartRxCount^0,f,c	;volatile
  7803   00206C  0012               	return		;funcret
  7804   00206E                     __end_of_EUSART_RxDataHandler:
  7805                           	callstack 0
  7806                           
  7807                           	psect	text93
  7808   000000                     __ptext93:
  7809                           	callstack 0
  7810   000000                     
  7811                           	psect	rparam
  7812   000000                     
  7813                           	psect	temp
  7814   000053                     btemp:
  7815                           	callstack 0
  7816   000053                     	ds	1
  7817   000000                     int$flags	set	btemp
  7818   000000                     wtemp8	set	btemp+1
  7819   000000                     ttemp5	set	btemp+1
  7820   000000                     ttemp6	set	btemp+4
  7821   000000                     ttemp7	set	btemp+8
  7822                           
  7823                           	psect	idloc
  7824                           
  7825                           ;Config register IDLOC0 @ 0x200000
  7826                           ;	unspecified, using default values
  7827   200000                     	org	2097152
  7828   200000  FF                 	db	255
  7829                           
  7830                           ;Config register IDLOC1 @ 0x200001
  7831                           ;	unspecified, using default values
  7832   200001                     	org	2097153
  7833   200001  FF                 	db	255
  7834                           
  7835                           ;Config register IDLOC2 @ 0x200002
  7836                           ;	unspecified, using default values
  7837   200002                     	org	2097154
  7838   200002  FF                 	db	255
  7839                           
  7840                           ;Config register IDLOC3 @ 0x200003
  7841                           ;	unspecified, using default values
  7842   200003                     	org	2097155
  7843   200003  FF                 	db	255
  7844                           
  7845                           ;Config register IDLOC4 @ 0x200004
  7846                           ;	unspecified, using default values
  7847   200004                     	org	2097156
  7848   200004  FF                 	db	255
  7849                           
  7850                           ;Config register IDLOC5 @ 0x200005
  7851                           ;	unspecified, using default values
  7852   200005                     	org	2097157
  7853   200005  FF                 	db	255
  7854                           
  7855                           ;Config register IDLOC6 @ 0x200006
  7856                           ;	unspecified, using default values
  7857   200006                     	org	2097158
  7858   200006  FF                 	db	255
  7859                           
  7860                           ;Config register IDLOC7 @ 0x200007
  7861                           ;	unspecified, using default values
  7862   200007                     	org	2097159
  7863   200007  FF                 	db	255
  7864                           
  7865                           	psect	config
  7866                           
  7867                           ; Padding undefined space
  7868   300000                     	org	3145728
  7869   300000  FF                 	db	255
  7870                           
  7871                           ;Config register CONFIG1H @ 0x300001
  7872                           ;	Oscillator Selection bits
  7873                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7874                           ;	Fail-Safe Clock Monitor Enable bit
  7875                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7876                           ;	Internal/External Oscillator Switchover bit
  7877                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7878   300001                     	org	3145729
  7879   300001  08                 	db	8
  7880                           
  7881                           ;Config register CONFIG2L @ 0x300002
  7882                           ;	Power-up Timer Enable bit
  7883                           ;	PWRT = OFF, PWRT disabled
  7884                           ;	Brown-out Reset Enable bits
  7885                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7886                           ;	Brown Out Reset Voltage bits
  7887                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7888   300002                     	org	3145730
  7889   300002  1F                 	db	31
  7890                           
  7891                           ;Config register CONFIG2H @ 0x300003
  7892                           ;	Watchdog Timer Enable bit
  7893                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7894                           ;	Watchdog Timer Postscale Select bits
  7895                           ;	WDTPS = 32768, 1:32768
  7896   300003                     	org	3145731
  7897   300003  1E                 	db	30
  7898                           
  7899                           ; Padding undefined space
  7900   300004                     	org	3145732
  7901   300004  FF                 	db	255
  7902                           
  7903                           ;Config register CONFIG3H @ 0x300005
  7904                           ;	CCP2 MUX bit
  7905                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7906                           ;	PORTB A/D Enable bit
  7907                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7908                           ;	Low-Power Timer1 Oscillator Enable bit
  7909                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7910                           ;	HFINTOSC Fast Start-up
  7911                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7912                           ;	MCLR Pin Enable bit
  7913                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7914   300005                     	org	3145733
  7915   300005  8B                 	db	139
  7916                           
  7917                           ;Config register CONFIG4L @ 0x300006
  7918                           ;	Stack Full/Underflow Reset Enable bit
  7919                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7920                           ;	Single-Supply ICSP Enable bit
  7921                           ;	LVP = OFF, Single-Supply ICSP disabled
  7922                           ;	Extended Instruction Set Enable bit
  7923                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7924                           ;	Background Debugger Enable bit
  7925                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7926   300006                     	org	3145734
  7927   300006  81                 	db	129
  7928                           
  7929                           ; Padding undefined space
  7930   300007                     	org	3145735
  7931   300007  FF                 	db	255
  7932                           
  7933                           ;Config register CONFIG5L @ 0x300008
  7934                           ;	Code Protection Block 0
  7935                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7936                           ;	Code Protection Block 1
  7937                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7938                           ;	Code Protection Block 2
  7939                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7940                           ;	Code Protection Block 3
  7941                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7942   300008                     	org	3145736
  7943   300008  0F                 	db	15
  7944                           
  7945                           ;Config register CONFIG5H @ 0x300009
  7946                           ;	Boot Block Code Protection bit
  7947                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7948                           ;	Data EEPROM Code Protection bit
  7949                           ;	CPD = OFF, Data EEPROM not code-protected
  7950   300009                     	org	3145737
  7951   300009  C0                 	db	192
  7952                           
  7953                           ;Config register CONFIG6L @ 0x30000A
  7954                           ;	Write Protection Block 0
  7955                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7956                           ;	Write Protection Block 1
  7957                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7958                           ;	Write Protection Block 2
  7959                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7960                           ;	Write Protection Block 3
  7961                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7962   30000A                     	org	3145738
  7963   30000A  0F                 	db	15
  7964                           
  7965                           ;Config register CONFIG6H @ 0x30000B
  7966                           ;	Configuration Register Write Protection bit
  7967                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7968                           ;	Boot Block Write Protection bit
  7969                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7970                           ;	Data EEPROM Write Protection bit
  7971                           ;	WRTD = OFF, Data EEPROM not write-protected
  7972   30000B                     	org	3145739
  7973   30000B  E0                 	db	224
  7974                           
  7975                           ;Config register CONFIG7L @ 0x30000C
  7976                           ;	Table Read Protection Block 0
  7977                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7978                           ;	Table Read Protection Block 1
  7979                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7980                           ;	Table Read Protection Block 2
  7981                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7982                           ;	Table Read Protection Block 3
  7983                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7984   30000C                     	org	3145740
  7985   30000C  0F                 	db	15
  7986                           
  7987                           ;Config register CONFIG7H @ 0x30000D
  7988                           ;	Boot Block Table Read Protection bit
  7989                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7990   30000D                     	org	3145741
  7991   30000D  40                 	db	64
  7992                           tosu	equ	0xFFF
  7993                           tosh	equ	0xFFE
  7994                           tosl	equ	0xFFD
  7995                           stkptr	equ	0xFFC
  7996                           pclatu	equ	0xFFB
  7997                           pclath	equ	0xFFA
  7998                           pcl	equ	0xFF9
  7999                           tblptru	equ	0xFF8
  8000                           tblptrh	equ	0xFF7
  8001                           tblptrl	equ	0xFF6
  8002                           tablat	equ	0xFF5
  8003                           prodh	equ	0xFF4
  8004                           prodl	equ	0xFF3
  8005                           indf0	equ	0xFEF
  8006                           postinc0	equ	0xFEE
  8007                           postdec0	equ	0xFED
  8008                           preinc0	equ	0xFEC
  8009                           plusw0	equ	0xFEB
  8010                           fsr0h	equ	0xFEA
  8011                           fsr0l	equ	0xFE9
  8012                           wreg	equ	0xFE8
  8013                           indf1	equ	0xFE7
  8014                           postinc1	equ	0xFE6
  8015                           postdec1	equ	0xFE5
  8016                           preinc1	equ	0xFE4
  8017                           plusw1	equ	0xFE3
  8018                           fsr1h	equ	0xFE2
  8019                           fsr1l	equ	0xFE1
  8020                           bsr	equ	0xFE0
  8021                           indf2	equ	0xFDF
  8022                           postinc2	equ	0xFDE
  8023                           postdec2	equ	0xFDD
  8024                           preinc2	equ	0xFDC
  8025                           plusw2	equ	0xFDB
  8026                           fsr2h	equ	0xFDA
  8027                           fsr2l	equ	0xFD9
  8028                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        6
    BSS         145
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      82
    BANK0           160     11     129
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2756$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2762$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2768$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2774$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2773	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2768	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2767	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2762	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2761	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2756	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2755	const PTR FTN()enum E2846 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Read_analog_input@Massiv	PTR unsigned char  size(2) Largest target is 20
		 -> Danie_ModbasRtu_analog_Output(BANK0[20]), Danie_ModbasRtu_analog_input(BANK0[20]), Read_analog_input@Danie(COMRAM[2]), 

    Reading_Discrete_Output@Massiv	PTR unsigned char  size(2) Largest target is 2
		 -> Danie_ModbasRtu_Binary_input(COMRAM[2]), Danie_ModbasRtu_Binary_Output(COMRAM[2]), 

    _Bin_input_Output@Masiv	PTR volatile unsigned char  size(2) Largest target is 2
		 -> Danie_ModbasRtu_Binary_input(COMRAM[2]), Danie_ModbasRtu_Binary_Output(COMRAM[2]), 

    crc_chk@data	PTR unsigned char  size(2) Largest target is 30
		 -> Danie_Rx_ModbasRtu(BANK0[30]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_RXC_vect(), EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_RXC_vect(), EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_TXC_vect(), EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_TXC_vect(), EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> main@red2(BANK0[3]), main@red(BANK0[3]), main@dat(BANK0[3]), I2C_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@red2(BANK0[3]), main@red(BANK0[3]), main@dat(BANK0[3]), I2C_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> main@red2(BANK0[3]), main@red(BANK0[3]), main@dat(BANK0[3]), I2C_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E2846[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(2) Largest target is 3
		 -> main@red2(BANK0[3]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 3
		 -> main@red(BANK0[3]), main@dat(BANK0[3]), 


Critical Paths under _main in COMRAM

    _modbasRtu_Slave->_modbasRtu_Answer
    _modbasRtu_Answer->_Reading_Discrete_Output
    _analog_output_recording->_Error_modbasRtu
    _Reading_Discrete_Output->_Error_modbasRtu
    _Read_analog_input->_Error_modbasRtu
    _Changing_Discrete_Output->_Error_modbasRtu
    _Error_modbasRtu->_check_sum
    _check_sum->_crc_chk
    _Data_integrity->_crc_chk
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USART_RXC_vect

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  233877
                                              0 BANK0     11    11      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                  _SYSTEM_Initialize
                    _USART_UDRE_vect
                    _modbasRtu_Slave
 ---------------------------------------------------------------------------------
 (1) _modbasRtu_Slave                                      0     0      0   12229
                     _Data_integrity
                    _Error_modbasRtu
                   _modbasRtu_Answer
 ---------------------------------------------------------------------------------
 (2) _modbasRtu_Answer                                     2     2      0   10615
                                             33 COMRAM     2     2      0
           _Changing_Discrete_Output
                    _Error_modbasRtu
                  _Read_analog_input
            _Reading_Discrete_Output
            _analog_output_recording
 ---------------------------------------------------------------------------------
 (3) _analog_output_recording                              2     2      0    1013
                                             19 COMRAM     2     2      0
                    _Error_modbasRtu
         _ModbasRtu_Register_address
 ---------------------------------------------------------------------------------
 (3) _Reading_Discrete_Output                             14    11      3    2843
                                             19 COMRAM    14    11      3
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                          _check_sum
 ---------------------------------------------------------------------------------
 (3) _Read_analog_input                                   13     9      4    2782
                                             19 COMRAM    13     9      4
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                          _check_sum
 ---------------------------------------------------------------------------------
 (3) _Changing_Discrete_Output                             2     2      0    3125
                                             19 COMRAM     2     2      0
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                  __Bin_input_Output
 ---------------------------------------------------------------------------------
 (4) __Bin_input_Output                                    9     5      4    2081
                                              6 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) _ModbasRtu_Register_address                           8     6      2      96
                                              6 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _Error_modbasRtu                                      1     1      0     852
                                             18 COMRAM     1     1      0
                          _check_sum
 ---------------------------------------------------------------------------------
 (5) _check_sum                                            3     3      0     821
                                             15 COMRAM     3     3      0
                            _crc_chk
 ---------------------------------------------------------------------------------
 (2) _Data_integrity                                       4     4      0     762
                                             15 COMRAM     4     4      0
                            _crc_chk
 ---------------------------------------------------------------------------------
 (6) _crc_chk                                              9     6      3     629
                                              6 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (1) _USART_UDRE_vect                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     906
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     785
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     211
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     211
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_WriteNBytes                                      5     1      4  111264
                                             23 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_SetAddressNackCallback                           4     0      4    2259
                                             11 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWrite                                      0     0      0  106225
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (1) _I2C_ReadNBytes                                       5     1      4  108825
                                             23 COMRAM     5     1      4
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Open                                             2     2      0      68
                                              6 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterRead                                       0     0      0  106225
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOperation                                  2     2      0  106225
                                             21 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (4) _I2C_Poller                                           0     0      0  106157
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterFsm                                        2     2      0  106157
                                             19 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX_EMPTY                                      2     2      0   26516
                                             17 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX                                            2     2      0   26547
                                             17 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendTxData                                 1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX                                            2     2      0   26516
                                             17 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_ADDRESS_NACK                                  2     2      0   26516
                                             17 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    5232
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    5232
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    5263
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    5232
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    5232
                                             15 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _I2C_SetDataCompleteCallback                          4     0      4    2979
                                             11 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetCallback                                      5     1      4    1117
                                              6 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _I2C_SetBuffer                                        4     0      4    2222
                                              6 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnStop                               2     0      2       0
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnReset                              2     0      2     325
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Close                                            1     1      0      37
                                              6 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0      45
                                              2 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                     _USART_RXC_vect *
                     _USART_TXC_vect *
 ---------------------------------------------------------------------------------
 (11) _USART_TXC_vect                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USART_RXC_vect                                      2     2      0      45
                                              0 COMRAM     2     2      0
                        _TMR0_Reload
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (12) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_Reload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                   _TIMER0_COMP_vect
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TIMER0_COMP_vect                                    0     0      0       0
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (13) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_SetRxInterruptHandler
   _EUSART_SetTxInterruptHandler
   _I2C_ReadNBytes
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterRead
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
             _I2C_DO_RX_NACK_STOP *
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
               _I2C_DO_SEND_RESTART_WRITE *
               _I2C_DO_SEND_STOP *
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_STOP *
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetBuffer
   _I2C_WriteNBytes
     _I2C_Close
     _I2C_MasterWrite
       _I2C_MasterOperation
     _I2C_Open
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _USART_UDRE_vect
   _modbasRtu_Slave
     _Data_integrity
       _crc_chk
     _Error_modbasRtu
       _check_sum
         _crc_chk
     _modbasRtu_Answer
       _Changing_Discrete_Output
         _Error_modbasRtu
         _ModbasRtu_Register_address
         __Bin_input_Output
       _Error_modbasRtu
       _Read_analog_input
         _Error_modbasRtu
         _ModbasRtu_Register_address
         _check_sum
       _Reading_Discrete_Output
         _Error_modbasRtu
         _ModbasRtu_Register_address
         _check_sum
       _analog_output_recording
         _Error_modbasRtu
         _ModbasRtu_Register_address

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TIMER0_COMP_vect *
       _TMR0_StopTimer
     _TMR0_DefaultInterruptHandler *
   _USART_RXC_vect *
     _TMR0_Reload
     _TMR0_StartTimer
   _USART_TXC_vect *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      81       5       80.6%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      52       1       87.2%
BITBIGSFRllllll     1C      0       0      51        0.0%
BITBIGSFRhlhh       19      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhh         C      0       0      42        0.0%
BITBIGSFRlhll        9      0       0      44        0.0%
BITBIGSFRllllh       8      0       0      49        0.0%
BITBIGSFRlhlhh       7      0       0      43        0.0%
BITBIGSFRlllhhl      6      0       0      47        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRhlll        6      0       0      41        0.0%
BITBIGSFRhllh        2      0       0      40        0.0%
BITBIGSFRllh         2      0       0      45        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      39        0.0%
BITBIGSFRlllllh      1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      28        0.0%
DATA                 0      0      D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jan 31 13:46:22 2023

                ?_EUSART_SetRxInterruptHandler 0007                         ??_I2C_DO_SEND_ADR_READ 0007  
                                            _D 003B                    ?_ModbasRtu_Register_address 0007  
                      ??_I2C_DO_SEND_ADR_WRITE 0008                                    _SSPSTATbits 000FC7  
                                           l90 1FEA                                             l93 1FBE  
                                           l69 1CA6                                             l78 1D42  
                                           l96 1F92                                             l99 2016  
                  Reading_Discrete_Output@Temp 001A                                _timer0ReloadVal 004C  
                        ??_I2C_DO_SEND_RESTART 0007                                            l102 1E4A  
                                          l213 18A6                                            l223 1D86  
                                          l312 19A8                                            l217 2042  
                                          l209 2190                                            l402 22E0  
                                          l306 21FE                                            l330 2298  
                                          l226 2260                                            l411 22B2  
                                          l236 20B6                                            l405 21A4  
                                          l333 2290                                            l229 2258  
                                          l245 2164                                            l342 2278  
                                          l262 2118                                            l239 217C  
                                          l351 21F2                                            l256 1A22  
                                          l408 22AC                                            l432 22CC  
                                          l272 21E6                                            l336 2288  
                                          l281 1622                                            l345 2270  
                                          l426 22EC                                            l266 1B78  
                                          l275 21D6                                            l339 2280  
                                          l435 21B8                                            l348 2268  
                                          l532 20D8                                            l429 22F4  
                                          l381 22F0                                            l365 22DC  
                                          l269 220A                                            l357 1C4C  
                                          l701 2232                                            l390 22E4  
                                          l278 15EA                                            l294 1714  
                                          l295 1782                                            l439 21C6  
                                          l368 22D8                                            l384 22D0  
                                          l632 1A96                                            l464 2092  
                                          l800 1818                                            l378 20FA  
                                          l554 2214                                            l387 22A0  
                                          l803 1F00                                            l396 22D4  
                                          l820 147C                                            l718 22C8  
                                          l486 2132                                            l399 22E8  
                                          l808 1BE6                                            l489 221E  
                                          l817 147A                                            l842 1196  
                                          l827 1B08                                            l907 1EC6  
                                          l692 223C                                            l860 21B6  
                                          l852 129E                                            l790 1F66  
                                          l695 2250                                            l863 1E0A  
                                          l689 2246                                            l857 1CFC  
                                          l698 2228                                            l874 14EE  
                                          l795 17A8                                            l875 14F0  
                                          l963 1348                                            l964 12FC  
                                          l877 155E                                            l966 136A  
                                          l799 1810                                            l968 1366  
                                          l969 1368                         ??_EUSART_RxDataHandler 0001  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 21B8  
               ?_EUSART_SetFramingErrorHandler 0007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                  main@address 00DB                   ??_I2C_SetAddressNackCallback 0010  
                     ??_I2C_CallbackReturnStop 0012                                   _I2C_DO_RESET 21E8  
                      ??_rd2RegCompleteHandler 0012                                           l4001 22DA  
                                         l4011 2200                                           l4005 22D6  
                                         l4013 2204                                           l4021 21DC  
                                         l4101 21F8                                           l4015 2208  
                                         l4023 21E4                                           l4031 21D4  
                                         l4103 21FC                                           l4009 22F2  
                                         l4113 193E                                           l4201 1DE4  
                                         l4115 1942                                           l4107 192E  
                                         l4019 21D8                                           l4027 21C8  
                                         l4043 1580                                           l4035 1560  
                                         l4131 2272                                           l4211 20FC  
                                         l4203 1DF4                                           l4109 1936  
                                         l4125 1950                                           l4029 21CC  
                                         l4061 1620                                           l4053 1590  
                                         l4133 2276                                           l4141 21F0  
                                         l4213 2100                                           l4301 2234  
                                         l4205 1DF6                                           l4221 1ECE  
                                         l4119 1948                                           l4055 15EE  
                                         l4047 1588                                           l4039 1578  
                                         l4071 16EC                                           l4215 2104  
                                         l4303 2248                                           l4207 1E06  
                                         l4231 13AE                                           l4311 1AC6  
                                         l4209 22E6                                           l4057 1600  
                                         l4073 16F2                                           l4137 21E8  
                                         l4153 1BFC                                           l4145 1BE8  
                                         l4217 2108                                           l4241 1410  
                                         l4233 13BE                                           l4225 139A  
                                         l4313 1AD8                                           l4305 1A98  
                                         l4401 125E                                           l4321 1040  
                                         l4059 161A                                           l4083 171A  
                                         l4075 170A                                           l4139 21EC  
                                         l4147 1BEC                                           l4171 17A0  
                                         l4219 1ECA                                           l4243 142E  
                                         l4235 13CE                                           l4227 13A6  
                                         l4315 1AF2                                           l4307 1AA6  
                                         l4411 1298                                           l4403 1260  
                                         l4331 1086                                           l4323 105C  
                                         l4093 172A                                           l4077 170E  
                                         l4069 16DE                                           l4149 1BF4  
                                         l4261 20E8                                           l4421 181C  
                                         l4501 2090                                           l4181 17DE  
                                         l4165 1784                                           l4253 21A8  
                                         l4237 13E0                                           l4245 1442  
                                         l4229 13AC                                           l4309 1ABC  
                                         l4405 1278                                           l4341 10FE  
                                         l4333 109C                                           l4325 1066  
                                         l4317 1022                                           l4413 1CA8  
                                         l4087 1722                                           l4159 1C04  
                                         l4191 1B0E                                           l4271 1D46  
                                         l4263 20F8                                           l4431 1838  
                                         l4423 1820                                           l4503 22C6  
                                         l4511 20C6                                           l4183 17E2  
                                         l4167 178C                                           l4255 21AC  
                                         l4247 146E                                           l4239 13F0  
                                         l4407 127A                                           l4351 112C  
                                         l4343 1100                                           l4335 10B0  
                                         l4327 1078                                           l4319 1032  
                                         l4415 1CB6                                           l4193 1B1E  
                                         l4281 1D70                                           l4273 1D4A  
                                         l4441 1850                                           l4433 183A  
                                         l4425 1830                                           l4601 1C92  
                                         l4521 1A32                                           l4505 2216  
                                         l4513 20C8                                           l4177 17B6  
                                         l4169 179C                                           l4185 17FE  
                                         l4257 21B0                                           l4249 1476  
                                         l4409 1286                                           l4345 1116  
                                         l4353 1130                                           l4337 10B6  
                                         l4361 1152                                           l4329 1084  
                                         l4417 1CD2                                           l4267 22EA  
                                         l4099 21F4                                           l4195 1B32  
                                         l4283 1D78                                           l4275 1D5A  
                                         l4259 20DA                                           l4451 1878  
                                         l4443 1858                                           l4435 183E  
                                         l4427 1834                                           l4611 1D2E  
                                         l4603 1D00                                           l4531 1A50  
                                         l4523 1A40                                           l4515 20D4  
                                         l4507 20B8                                           l4179 17D0  
                                         l4371 118E                                           l4363 1164  
                                         l4355 1144                                           l4347 111A  
                                         l4339 10E2                                           l4419 1CDC  
                                         l4269 22EE                                           l3901 20B4  
                                         l4197 1B38                                           l4189 1B0A  
                                         l4285 1D7C                                           l4277 1D5C  
                                         l4461 189C                                           l4453 1880  
                                         l4445 1860                                           l4437 1846  
                                         l4429 1836                                           l4605 1D00  
                                         l4533 1A54                                           l4525 1A44  
                                         l4517 1A24                                           l4293 220C  
                                         l4509 20C4                                           l4621 212A  
                                         l4613 211A                                           l4541 1B7A  
                                         l4381 11C6                                           l4373 1190  
                                         l4365 1174                                           l4357 114C  
                                         l4349 111C                                           l3903 22E2  
                                         l3911 1FD4                                           l4287 1D80  
                                         l4279 1D60                                           l4463 18A0  
                                         l4455 1888                                           l4447 1868  
                                         l4439 1848                                           l4607 1D16  
                                         l4471 2252                                           l4295 222A  
                                         l4535 1A60                                           l4527 1A48  
                                         l4519 1A26                                           l4623 212E  
                                         l4615 211E                                           l4631 1F60  
                                         l4551 1BBC                                           l4543 1B80  
                                         l4199 1DCC                                           l4391 11FE  
                                         l4383 11D0                                           l4375 1198  
                                         l4367 1176                                           l4481 2030  
                                         l3905 22DE                                           l3913 1FE8  
                                         l3921 1FBC                                           l4289 1D84  
                                         l4457 1890                                           l4449 1870  
                                         l4465 18A4                                           l4609 1D2A  
                                         l4297 2220                                           l4537 1A6C  
                                         l4529 1A4C                                           l4617 2122  
                                         l4633 1F64                                           l4625 1F38  
                                         l4553 1BC0                                           l4545 1B98  
                                         l4393 121C                                           l4385 11DE  
                                         l4377 119C                                           l4369 1186  
                                         l4641 1EB4                                           l4483 203C  
                                         l4475 2018                                           l3907 22AE  
                                         l4459 1898                                           l4299 223E  
                                         l4539 1A94                                           l4619 2126  
                                         l4627 1F4A                                           l4555 1BDE  
                                         l4547 1B9C                                           l4395 1236  
                                         l4387 11E6                                           l4379 11AA  
                                         l4571 14C6                                           l4563 147E  
                                         l4643 1EB8                                           l4635 1E8C  
                                         l4485 2040                                           l4477 201C  
                                         l3933 1FEC                                           l3909 1FC0  
                                         l3917 1F94                                           l3925 1F68  
                                         l3941 1E0C                                           l4901 175C  
                                         l4469 214E                                           l4493 217E  
                                         l4629 1F5A                                           l4549 1BBA  
                                         l4397 123A                                           l4389 11EE  
                                         l4573 14DE                                           l4565 1486  
                                         l4581 14FC                                           l4645 1EBC  
                                         l4637 1E9A                                           l4479 202C  
                                         l3935 2000                                           l3919 1FA8  
                                         l3927 1F7C                                           l3943 1E34  
                                         l4903 15C4                                           l4591 1C50  
                                         l4495 218E                                           l4559 1BE4  
                                         l4399 1242                                           l4575 14E6  
                                         l4567 149A                                           l4583 1558  
                                         l4639 1EAE                                           l4647 1EC2  
                                         l3937 2014                                           l3929 1F90  
                                         l3945 1E48                                           l3953 229C  
                                         l4905 1982                                           l3961 228A  
                                         l4489 225A                                           l4593 1C50  
                                         l4497 206E                                           l4585 155C  
                                         l4577 14F2                                           l4569 14AE  
                                         l3891 19F2                                           l3955 2292  
                                         l3963 228E                                           l4595 1C66  
                                         l4499 207E                                           l4771 12BE  
                                         l3893 2166                                           l3973 22CE  
                                         l3949 2192                                           l3957 2296  
                                         l3981 2266                                           l4597 1C7A  
                                         l4781 12DE                                           l4773 12C0  
                                         l3895 2094                                           l3887 19AC  
                                         l3991 22D2                                           l3967 227A  
                                         l4599 1C8E                                           l4791 1378  
                                         l4783 12EC                                           l4775 12C0  
                                         l4767 12A0                                           l3897 20A4  
                                         l3889 19BE                                           l3977 22A8  
                                         l3993 2282                                           l3969 227E  
                                         l3985 226A                                           l4793 1388  
                                         l4785 12FE                                           l4777 12C6  
                                         l4769 12BC                                           l3899 20AC  
                                         l3995 2286                                           l3987 226E  
                                         l3979 2262                                           l4795 138C  
                                         l4787 1340                                           l4779 12D2  
                                         l4789 1356                                           l3999 22CA  
                                         l4897 1512                                           l4899 1C36  
                              ?_USART_RXC_vect 0001                                           u2000 20A4  
                                         u2001 20A0                                           u2010 21A2  
                                         u2011 219C                                           u2020 1574  
                                         u2100 17FE                                           u2021 1570  
                                         u2101 17FA                                           u2110 1810  
                                         u2111 180C                                           u2016 21A4  
                                         u2040 161A                                           u2120 21C6  
                                         u2041 1616                                           u2121 21C2  
                                         u2050 170A                                           u2130 1B1E  
                                         u2051 1706                                           u2131 1B1A  
                                         u2140 1B32                                           u2204 1402  
                                         u2300 109C                                           u2141 1B2E  
                                         u2205 13FE                                           u2301 1098  
                                         _LATA 000F89                                           u2038 159E  
                                         u2230 146E                                           u2214 1422  
                                         _LATB 000F8A                                           u2039 15B2  
                                         u2231 146A                                           u2215 141E  
                                         _LATC 000F8B                                           u2160 2118  
                                         u2240 20E8                                           u2224 1454  
                                         u2400 1298                                           u2320 10E2  
                                         u2161 2114                                           u2241 20E4  
                                         u2225 1450                                           u2401 1294  
                                         u2321 10DE                                           u2250 1D5A  
                                         u2090 17B6                                           u2170 13BE  
                                         u2314 10C8                                           u2410 1CD2  
                                         u2251 1D56                                           u2091 17B2  
                                         u2171 13BA                                           u2315 10C4  
                                         u2411 1CCE                                           u2068 1738  
                                         u2260 1D70                                           u2420 1830  
                                         u2500 1F4A                                           u2180 13E0  
                                         u2340 1116                                           u2069 174A  
                                         u2261 1D6C                                           u2421 182C  
                                         u2501 1F46                                           u2181 13DC  
                                         u2341 1112                                           u2430 202C  
                                         u2078 195E                                           u2158 1B62  
                                         u2190 13F0                                           u2270 1ABC  
                                         u2350 1144                                           u2334 10F4  
                                         u2510 1E9A                                           u2431 2028  
                                         u2079 1970                                           u2159 1B74  
                                         u2191 13EC                                           u2271 1AB8  
                                         u2351 1140                                           u2335 10F0  
                                         u2511 1E96                                           u2088 1C12  
                                         u2440 1BBA                                           u2280 1AD8  
                                         u2360 1164                                           u2520 1EAE  
                                         u2089 1C24                                           u2441 1BB6  
                                         u2281 1AD4                                           u2361 1160  
                                         u2521 1EAA                                           u2450 1BDE  
                                         u2370 1174                                           u2290 105C  
                                         u2451 1BDA                                           u2371 1170  
                                         u2291 1058                                           u2460 1C66  
                                         u2380 11C6                                           u2700 1388  
                                         u2461 1C62                                           u2381 11C2  
                                         u2701 1384                                           u2470 1CA6  
                                         u2390 11FE                                           u2471 1CA2  
                                         u2391 11FA                                           u2480 1D16  
                                         u2481 1D12                                           u2490 1D42  
                                         u2650 12EC                                           u2491 1D3E  
                                         u2651 12E8                                           u2660 12FC  
                                         u2661 12F8                                           u2670 1356  
                                         u2671 1352                                           u2680 1366  
                                         u2681 1362                                           u2690 1378  
                                         u2691 1374                                           u1990 19BE  
                                         u1991 19BA                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0012                                ?_USART_TXC_vect 0001  
               Reading_Discrete_Output@Number_ 0016                                           _main 12A0  
                     ?_I2C_CallbackReturnReset 0010                                _TMR0_StartTimer 22FA  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                               __end_of_I2C_Open 18A8  
                                         btemp 0053                               ?_USART_UDRE_vect 0001  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00D0                               _modbasRtu_Answer 147E  
               Reading_Discrete_Output@address 0020                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 ___param_bank 000000                               ?_I2C_MasterClose 0001  
                      __end_of_TMR0_Initialize 20DA                                _I2C_WriteNBytes 1C4E  
               ??_TMR0_DefaultInterruptHandler 0001                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 2272                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 2220                                          ?_main 0001  
                    ??_analog_output_recording 0014                                          _ANSEL 000F7E  
                                        _T0CON 000FD5                                          i2l551 1F36  
                                        i2l535 22FC                                          i2l538 2300  
                                        i2l730 00BC                                          i2l547 22B8  
                                        i2l731 00BC                                          i2l723 003E  
                                        i2l557 2302                                          i2l726 0084  
                                        i2l663 1E88                                          i2l680 2304  
                                        i2l673 16DC                                          i2l666 1E8A  
                                        i2l683 22BE                                          i2l677 206C  
                                        i2l773 214C                                          i2l686 22C4  
                                        i2l782 192C                                          i2l785 22F8  
                                        _RCREG 000FAE                                          _RCSTA 000FAB  
                                        _TMR0H 000FD7                                          _TMR0L 000FD6  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0012  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                      ?_TMR0_SetInterruptHandler 0007  
                              __end_of_crc_chk 181A                               __end_of_TMR0_ISR 1F38  
                            __end_of_I2C_DO_RX 1784                              __end_of_I2C_DO_TX 1624  
                               _Temp_ModbasRtu 003D                       ?_Reading_Discrete_Output 0014  
                            __end_of_I2C_Close 2044                 I2C_MasterOperation@returnValue 0017  
                      _I2C_MasterEnableRestart 22E2                                          pclath 000FFA  
                                        pclatu 000FFB             Reading_Discrete_Output@Number_bits 001E  
                                        tablat 000FF5                               ?_I2C_SetCallback 0007  
                 I2C_SetAddressNackCallback@cb 000C                                          ttemp5 0054  
                                        ttemp6 0057                                          ttemp7 005B  
                                        status 000FD8                                          wtemp8 0054  
                            ?_I2C_DO_SEND_STOP 0001                 analog_output_recording@address 0014  
                           ??_I2C_DO_SEND_STOP 0007                       fp__rd1RegCompleteHandler 0000  
                              __initialization 1D88                                   __end_of_main 1398  
                     fp__wr1RegCompleteHandler 0000                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0009                                         ??_main 0024  
             __end_of_Changing_Discrete_Output 1B0A                              ?_I2C_MasterIsNack 0001  
                                __activetblptr 000003                              ?_I2C_MasterSetIrq 0001  
                           ??_I2C_MasterIsNack 0007                               ??_Data_integrity 0010  
                           ??_I2C_MasterSetIrq 0007           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 2306            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 2304  
                      __end_of_TMR0_StartTimer 22FE                     _EUSART_OverrunErrorHandler 00DF  
              __end_of_I2C_CallbackReturnReset 22DA                  I2C_SetDataCompleteCallback@cb 000C  
                                       _ANSELH 000F7F                                   ??_I2C_Poller 0016  
                                       i2l3201 2066                                         i2l2057 22FE  
                                       i2l2321 2136                                         i2l3203 206A  
                                       i2l2323 213A                                         i2l2325 2148  
                                       i2l2421 1F0C                                         i2l2319 2134  
                                       i2l2423 1F1E                                         i2l2415 1F02  
                                       i2l2431 1E6E                                         i2l2417 1F06  
                                       i2l2433 1E7E                                         i2l2425 1E4C  
                                       i2l2419 1F08                                         i2l2435 1E82  
                                       i2l2427 1E5C                                         i2l2429 1E6C  
                                       i2l3431 22BA                                         i2l3433 22C0  
                                       i2l3521 1634                                         i2l3195 2044  
                                       i2l3427 22FA                                         i2l3531 1684  
                                       i2l3523 1642                                         i2l2483 22F6  
                                       i2l3197 2054                                         i2l3429 22B4  
                                       i2l3541 18AC                                         i2l3533 169E  
                                       i2l3525 1650                                         i2l3199 2056  
                                       i2l3551 18E0                                         i2l3543 18B0  
                                       i2l3535 16BA                                         i2l3527 1668  
                                       i2l3519 1624                                         i2l3561 191A  
                                       i2l3553 18E2                                         i2l3545 18BE  
                                       i2l3537 16D8                                         i2l3529 1676  
                                       i2l3563 192A                                         i2l3555 1904  
                                       i2l3547 18CC                                         i2l3539 18A8  
                                       i2l3731 004C                                         i2l3557 1908  
                                       i2l3549 18CE                                         i2l3733 005A  
                                       i2l3725 001A                                         i2l3559 190C  
                                       i2l3735 0068                                         i2l3727 0028  
                                       i2l3737 0092                                         i2l3729 0036  
                                       i2l3739 00A0                                         _OSCCON 000FD3  
              __end_of_analog_output_recording 1CFE                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                          _I2C_MasterGetRxData 22CE                        __end_of_I2C_WriteNBytes 1CA8  
                                 ?_TMR0_Reload 0001                                  _I2C_MasterFsm 1B0A  
                          _EUSART_Transmit_ISR 1E4C                               ?_TMR0_Initialize 0001  
                                       clear_0 1DAE                                         clear_1 1DBA  
                            I2C_SetCallback@cb 0007                        fp__I2C_DO_SEND_ADR_READ 0000  
                                       isa$std 000001                                      ??_crc_chk 000A  
                                _I2C_SetBuffer 2094                             __end_of_I2C_Poller 211A  
                 __end_of_I2C_MasterDisableIrq 22EE                  Reading_Discrete_Output@Massiv 0014  
                          _I2C_DO_ADDRESS_NACK 1BE8                                   __pdataCOMRAM 004D  
              __end_of_Reading_Discrete_Output 1198                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 2166  
                   _I2C_SetAddressNackCallback 214E                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                      ??_I2C_MasterEnableRestart 0007  
     TMR0_SetInterruptHandler@InterruptHandler 0007                           ?_EUSART_Transmit_ISR 0001  
                            _SYSTEM_Initialize 211A                                     __accesstop 0060  
                      __end_of__initialization 1DC0                            _I2C_MasterOperation 1D44  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                check_sum@Adress 0012  
         __end_of_EUSART_SetTxInterruptHandler 222A                   _EUSART_SetTxInterruptHandler 2220  
                      _rdBlkRegCompleteHandler 1E0C                     fp__rdBlkRegCompleteHandler 0000  
                               __pcstackCOMRAM 0001                                 ?_I2C_MasterFsm 0001  
                              ??_I2C_DO_RX_ACK 0007                         _I2C_CallbackReturnStop 22DA  
                          ??_SYSTEM_Initialize 0009                                      ?_TMR0_ISR 0001  
                 Read_analog_input@Number_bits 001E                                 ?_I2C_SetBuffer 0007  
                      ?_I2C_MasterWaitForEvent 0001                  __end_of_I2C_DO_SEND_ADR_WRITE 21D8  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                            ??_modbasRtu_Slave 0024                          ??_I2C_MasterGetRxData 0007  
                        I2C_ReadNBytes@address 001C                                     ??_I2C_Open 0007  
                     __end_of_modbasRtu_Answer 1560                           _eusartRxStatusBuffer 0024  
                             ??_USART_RXC_vect 0001                     __end_of_I2C_MasterClearIrq 22F6  
                     _Changing_Discrete_Output 1A98                               ??_USART_TXC_vect 0001  
              ??_EUSART_SetOverrunErrorHandler 0009                               ?_TMR0_StartTimer 0001  
                    __end_of_SYSTEM_Initialize 2134                          ??_EUSART_Transmit_ISR 0001  
                            _I2C_MasterSendAck 22A8                                     __pbssBANK0 0060  
                             _TIMER0_COMP_vect 2134                                  ??_I2C_DO_IDLE 0007  
                                ??_I2C_DO_RCEN 0007                  __end_of_rd2RegCompleteHandler 1FC0  
                 __end_of_I2C_MasterSendTxData 22A2                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 22D2                                     __pnvCOMRAM 0043  
                        ??_I2C_DO_ADDRESS_NACK 0012                  __end_of_wr2RegCompleteHandler 2018  
                          _I2C_DO_RX_NACK_STOP 226A                          _rd1RegCompleteHandler 1FC0  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 22B4  
                             ?_I2C_WriteNBytes 0018                         I2C_WriteNBytes@address 001C  
                        _wr1RegCompleteHandler 1F68                            ??_I2C_MasterSendAck 0007  
                     rd1RegCompleteHandler@ptr 0010                            Read_analog_input@Vt 0017  
                ?_EUSART_SetTxInterruptHandler 0007               _EUSART_TxDefaultInterruptHandler 0047  
                  __end_of_I2C_DO_SEND_RESTART 228A                                _I2C_DO_TX_EMPTY 192E  
             __end_of_TMR0_SetInterruptHandler 2216                            I2C_SetBuffer@buffer 0007  
                                   ??_TMR0_ISR 0001                 __end_of_I2C_MasterWaitForEvent 21C8  
                          ??_I2C_MasterStartRx 0007                                        _BAUDCON 000FB8  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0016  
               I2C_SetDataCompleteCallback@ptr 000E                       ??_I2C_DO_RX_NACK_RESTART 0007  
            __end_of_I2C_DO_SEND_RESTART_WRITE 2292                           ?_I2C_DO_RX_NACK_STOP 0001  
                                _eusartRxCount 0035                        Read_analog_input@Adress 0020  
                      Read_analog_input@Massiv 0014                      __end_of_I2C_MasterSendAck 22AE  
                                      i2u54_40 1F1E                                        i2u54_41 1F1A  
                                      _OSCTUNE 000F9B                                        i2u47_40 2148  
                                      i2u47_41 2144                                        i2u55_48 1F24  
                                      i2u56_40 1E5C                                        i2u55_49 1F36  
                                      i2u56_41 1E58                                        i2u57_40 1E7E  
                                      i2u57_41 1E7A                       ??_EUSART_SetErrorHandler 0009  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                           _Bit_action_ModbasRtu 003C  
                    __end_of_I2C_MasterStartRx 22D6                              __end_of_check_sum 1E0C  
                         I2C_Close@returnValue 0007                   ?_I2C_SetDataCompleteCallback 000C  
                                    _I2C_DO_RX 16DE                                      _I2C_DO_TX 1560  
             __end_of_I2C_DO_SEND_RESTART_READ 229A                                      _I2C_Close 2018  
                    ??_rdBlkRegCompleteHandler 0012                           _I2C_MasterDisableIrq 22EA  
                              ??_I2C_MasterFsm 0014                                        __Hparam 0000  
                                      __Lparam 0000                                 _I2C_ReadNBytes 1CFE  
                          __end_of_I2C_DO_IDLE 220C                            __end_of_I2C_DO_RCEN 2200  
                              ??_I2C_SetBuffer 000B                        I2C_SetBuffer@bufferSize 0009  
                                 __psmallconst 1000                             I2C_ReadNBytes@data 0018  
                               _I2C_MasterRead 225A                                 _I2C_MasterOpen 20DA  
                                      __pcinit 1D88                                 _I2C_MasterStop 22DE  
                               _I2C_Initialize 217E                                        __ramtop 1000  
                                      _crc_chk 1784                                        __ptext0 12A0  
                                      __ptext1 1E8C                                        __ptext2 147E  
                                      __ptext3 1CA8                                        __ptext4 1022  
                                      __ptext5 1198                                        __ptext6 1A98  
                                      __ptext7 1398                                        __ptext8 1EC8  
                                      __ptext9 21A6                          ??_I2C_DO_RX_NACK_STOP 0007  
                                    _T0CONbits 000FD5                          _OSCILLATOR_Initialize 2216  
                           I2C_SetCallback@idx 000B                       ??_PIN_MANAGER_Initialize 0007  
                I2C_CallbackReturnReset@funPtr 0010                             I2C_SetCallback@ptr 0009  
                     wr1RegCompleteHandler@ptr 0010                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                                      main@dat 00D5                                        main@red 00D8  
                         end_of_initialization 1DC0                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 223E  
                _EUSART_SetOverrunErrorHandler 2234                                     ?_I2C_Close 0001  
                       ?_rd1RegCompleteHandler 0010                        __end_of_I2C_DO_TX_EMPTY 19AA  
                        ?_I2C_MasterDisableIrq 0001                         __end_of_I2C_ReadNBytes 1D44  
                            _EUSART_Initialize 1A24                         ?_wr1RegCompleteHandler 0010  
                            ??_Error_modbasRtu 0013                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                                      _RCSTAbits 000FAB  
                                      postdec1 000FE5                                        postdec2 000FDD  
                       __end_of_I2C_MasterRead 2262                         __end_of_I2C_MasterOpen 20FC  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 000FEE  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 22E2  
                       __end_of_I2C_Initialize 2192                       ?_analog_output_recording 0001  
                      __Bin_input_Output@Masiv 0008                        __Bin_input_Output@Temp1 000F  
                    fp__I2C_CallbackReturnStop 0000                            ??_EUSART_Initialize 0009  
               ??_EUSART_SetTxInterruptHandler 0009                       _TMR0_SetInterruptHandler 220C  
                                    _PORTAbits 000F80                __end_of_rdBlkRegCompleteHandler 1E4C  
                      __Bin_input_Output@state 0007                           _I2C_MasterSendTxData 229A  
                              fp__I2C_DO_RESET 0000                    ?_I2C_SetAddressNackCallback 000C  
                            _Read_analog_input 1198                             ?_Read_analog_input 0014  
                    __end_of_EUSART_Initialize 1A98                                    _I2C_DO_IDLE 2200  
                                  _I2C_DO_RCEN 21F4                     rdBlkRegCompleteHandler@ptr 0010  
                                    _TXSTAbits 000FAC                                ?_I2C_ReadNBytes 0018  
                      ?_I2C_CallbackReturnStop 0010                       _I2C_DO_SEND_RESTART_READ 2292  
                      _quantity_Data_ModbasRtu 003E                            ??_Read_analog_input 0018  
                  fp__I2C_DO_SEND_RESTART_READ 0000                                _modbasRtu_Slave 1E8C  
                               _TMR0_StopTimer 22FE                   I2C_CallbackReturnStop@funPtr 0010  
                              ?_I2C_MasterRead 0001                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 22CA                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 22D6  
                               crc_chk@reg_crc 000E                     fp__I2C_CallbackReturnReset 0000  
           __end_of_EUSART_DefaultErrorHandler 22C6                   ??_ModbasRtu_Register_address 0009  
                   _EUSART_DefaultErrorHandler 22C0                     ??_Changing_Discrete_Output 0014  
                     __end_of_TIMER0_COMP_vect 214E                                  __pidataCOMRAM 22A2  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                  ??_I2C_DO_SEND_RESTART_WRITE 0007                              ??_USART_UDRE_vect 0007  
                          start_initialization 1D88                      __end_of_Read_analog_input 12A0  
                            ?_modbasRtu_Answer 0001                                  ?_I2C_DO_RESET 0001  
              Changing_Discrete_Output@address 0014                             ??_modbasRtu_Answer 0022  
 EUSART_SetRxInterruptHandler@interruptHandler 0007   EUSART_SetTxInterruptHandler@interruptHandler 0007  
                                  ??_I2C_DO_RX 0012                                    ??_I2C_DO_TX 0012  
                            ??_I2C_MasterClose 0007                         ??_I2C_MasterDisableIrq 0007  
                                  ??_I2C_Close 0007                              ??_I2C_MasterStart 0007  
                            __Bin_input_Output 1398                              ??_I2C_MasterWrite 0018  
               __end_of_I2C_CallbackReturnStop 22DE                         _I2C_DO_RX_NACK_RESTART 2262  
                             ?_I2C_DO_TX_EMPTY 0001                             _I2C_MasterClearIrq 22F2  
                       __end_of_TMR0_StopTimer 2302                             ?__Bin_input_Output 0007  
                      _Reading_Discrete_Output 1022                 ?_EUSART_SetOverrunErrorHandler 0007  
                         Data_integrity@Temp22 0011                           Data_integrity@Temp33 0013  
                   _EUSART_FramingErrorHandler 0043                         _EUSART_SetErrorHandler 2248  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 22D2  
                 Reading_Discrete_Output@Danie 0019                            ??__Bin_input_Output 000B  
                        __end_of_I2C_DO_RX_ACK 227A                   Reading_Discrete_Output@Temp2 001B  
                 Reading_Discrete_Output@Temp3 001D                               _I2C_DO_SEND_STOP 227A  
                            ??_I2C_SetCallback 000B                             _Danie_Rx_ModbasRtu 008C  
                          I2C_Open@returnValue 0008                             _I2C_MasterSendNack 22AE  
                     ?_I2C_MasterEnableRestart 0001                              _i2c_fsmStateTable 1001  
                       fp__I2C_DO_SEND_RESTART 0000                    __end_of_EUSART_Transmit_ISR 1E8C  
                        _I2C_DO_SEND_ADR_WRITE 21C8                                    __pbssCOMRAM 0024  
                                __pcstackBANK0 00D2                                 ??_I2C_DO_RESET 0007  
                          ?_I2C_MasterSendNack 0001                       USART_RXC_vect@TempModbas 0002  
                 __end_of_I2C_DO_SEND_ADR_READ 21E8                           ??_I2C_MasterClearIrq 0007  
                  __end_of_I2C_DO_ADDRESS_NACK 1C4E                  _Danie_ModbasRtu_Binary_Output 003F  
                    __end_of__Bin_input_Output 147E                     __end_of_EUSART_Receive_ISR 16DE  
                             _I2C_MasterIsNack 2192                        __end_of_modbasRtu_Slave 1EC8  
                    _I2C_DO_SEND_RESTART_WRITE 228A               _EUSART_RxDefaultInterruptHandler 0045  
                             _I2C_MasterSetIrq 22CA                          _TMR0_InterruptHandler 0049  
                                    __pnvBANK0 00DD                                      _check_sum 1DCA  
                        _rd2RegCompleteHandler 1F94                                ?_TMR0_StopTimer 0001  
                 __end_of_EUSART_RxDataHandler 206E                         _PIN_MANAGER_Initialize 206E  
                        _wr2RegCompleteHandler 1FEC                      ??_I2C_CallbackReturnReset 0012  
                  __end_of_I2C_MasterOperation 1D88                           ??_I2C_MasterSendNack 0007  
                     rd2RegCompleteHandler@ptr 0010                                      __pintcode 0008  
                                 _eusartRxHead 0037                                   _eusartTxHead 0039  
                       Read_analog_input@Danie 001A                                   _eusartRxTail 0036  
                       ??_I2C_MasterSendTxData 0007                                   _eusartTxTail 0038  
                    __end_of_i2c_fsmStateTable 1021                   ??_INTERRUPT_InterruptManager 0003  
                         __Bin_input_Output@Sd 000A                                       ?_crc_chk 0007  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 004B                                    __smallconst 1000  
                      I2C_MasterOperation@read 0016                                       _I2C_Open 181A  
                              _Error_modbasRtu 21A6                              I2C_ReadNBytes@len 001A  
                      ??_rd1RegCompleteHandler 0012                Reading_Discrete_Output@address2 001C  
                         _INTERRUPT_Initialize 22C6                                 _eusartRxBuffer 0084  
                      ??_wr1RegCompleteHandler 0012                              ??_TMR0_Initialize 0009  
                               _eusartTxBuffer 002C                      ??_Reading_Discrete_Output 0017  
                                     _LATAbits 000F89         EUSART_SetErrorHandler@interruptHandler 0007  
                            fp__USART_RXC_vect 0000                                     ?_check_sum 0001  
                                     _PIE1bits 000F9D                              fp__USART_TXC_vect 0000  
                            _eusartRxLastError 0034                                       i2u132_40 2066  
                                     i2u132_41 2062                                       i2u160_40 16BA  
                                     i2u160_41 16B6                                       i2u162_40 18BE  
                                     i2u161_48 16C0                                       i2u162_41 18BA  
                                     i2u161_49 16D4                                       i2u163_40 18CC  
                                     i2u163_41 18C8                                       i2u164_40 18E0  
                                     i2u156_40 1642                                       i2u164_41 18DC  
                                     i2u156_41 163E                                       i2u165_40 18F2  
                   ??_TMR0_SetInterruptHandler 0009                                       i2u165_41 18EC  
                                     i2u165_46 18F4                                       i2u166_40 191A  
                                     i2u158_40 1676                                       i2u157_48 1656  
                                     i2u190_40 0092                                       i2u166_41 1916  
                                     i2u158_41 1672                                       i2u157_49 1668  
                                     i2u190_41 008E                                       i2u191_40 00A0  
                                     i2u191_41 009C                                       i2u159_48 168A  
                                     i2u184_40 0028                                       i2u159_49 169E  
                                     i2u184_41 0024                                       i2u192_48 00A6  
                                     i2u185_40 0036                                       i2u192_49 00B8  
                                     i2u185_41 0032                                       _PIR1bits 000F9E  
                                     i2u186_40 004C                                       i2u186_41 0048  
              ??_EUSART_SetFramingErrorHandler 0009                                       i2u187_40 005A  
                                     i2u187_41 0056                                       _PIR2bits 000FA1  
                                     i2u188_40 0068                                       i2u188_41 0064  
                _Danie_ModbasRtu_analog_Output 00AA                                       i2u189_48 006E  
                                     i2u189_49 0080                                  ??_TMR0_Reload 0001  
                        __end_of_I2C_MasterFsm 1B7A                                       _RCONbits 000FD0  
                     Read_analog_input@Number_ 0016                                      main@F3020 004D  
                                    main@F3018 0050                         __Bin_input_Output@Temp 000E  
                  __end_of_I2C_DO_RX_NACK_STOP 2272             __end_of_ModbasRtu_Register_address 1F02  
                   _ModbasRtu_Register_address 1EC8                                       _TMR0_ISR 1F02  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 22C0  
          ??_EUSART_DefaultOverrunErrorHandler 0001             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 22BA                __end_of_I2C_MasterEnableRestart 22E6  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
                     Read_analog_input@address 001C                          __end_of_I2C_SetBuffer 20B8  
                       ?_I2C_DO_SEND_ADR_WRITE 0001                       I2C_MasterSendTxData@data 0007  
                     wr2RegCompleteHandler@ptr 0010                                  crc_chk@length 0009  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0007  
                                    copy_data0 1D9C                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 0010                               ??_I2C_ReadNBytes 001C  
                                   _I2C_Poller 20FC                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                             ?_modbasRtu_Slave 0001                         ?_rd2RegCompleteHandler 0010  
                               _Data_integrity 1B7A                               ??_I2C_MasterRead 0018  
                        fp__EUSART_Receive_ISR 0000                            I2C_WriteNBytes@data 0018  
                             ??_I2C_MasterOpen 0007                         ?_wr2RegCompleteHandler 0010  
                             ??_I2C_MasterStop 0007                       ??_I2C_MasterWaitForEvent 0007  
                             ??_I2C_Initialize 0007                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                       __Lrparam 0000  
                         __end_of_I2C_DO_RESET 21F4                                _USART_UDRE_vect 1F38  
                      ??_OSCILLATOR_Initialize 0007                            _EUSART_ErrorHandler 00DD  
                            ??_TMR0_StartTimer 0001                           _I2C_DO_SEND_ADR_READ 21D8  
                  ?_EUSART_DefaultErrorHandler 0001                              ?_TIMER0_COMP_vect 0001  
                          __end_of_TMR0_Reload 22BA                        __end_of_Error_modbasRtu 21B8  
                           ??_TIMER0_COMP_vect 0001                                _I2C_MasterClose 22EE  
                I2C_SetAddressNackCallback@ptr 000E                   _Danie_ModbasRtu_Binary_input 0041  
                              I2C_Open@address 0007                                    check_sum@RC 0010  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 22E6  
                              _I2C_MasterWrite 2252                           _EUSART_RxDataHandler 2044  
                            ??_I2C_WriteNBytes 001C                                       __ptext10 1DCA  
                                     __ptext11 1B7A                                       __ptext20 217E  
                                     __ptext12 1784                                       __ptext21 1A24  
                                     __ptext13 1F38                                       __ptext30 1CFE  
                                     __ptext22 2220                                       __ptext14 211A  
                                     __ptext31 181A                                       __ptext23 222A  
                                     __ptext15 20B8                                       __ptext40 2262  
                                     __ptext32 20DA                                       __ptext24 2234  
                                     __ptext16 220C                                       __ptext41 226A  
                                     __ptext33 225A                                       __ptext25 223E  
                                     __ptext17 206E                                       __ptext50 21C8  
                                     __ptext42 2272                                       __ptext34 1D44  
                                     __ptext26 2248                                       __ptext18 2216  
                                     __ptext51 21D8                                       __ptext43 227A  
                                     __ptext35 20FC                                       __ptext27 1C4E  
                                     __ptext19 22C6                                       __ptext60 22D2  
                                     __ptext52 2200                                       __ptext44 2282  
                                     __ptext36 21B8                                       __ptext28 214E  
                                     __ptext61 22D6                                       __ptext53 192E  
                                     __ptext45 228A                                       __ptext37 1B0A  
                                     __ptext29 2252                                       __ptext70 2094  
                                     __ptext62 22DA                                       __ptext54 22CA  
                                     __ptext46 2292                                       __ptext38 1BE8  
                                     __ptext71 22DE                                       __ptext63 1E0C  
                                     __ptext55 2192                                       __ptext47 21F4  
                                     __ptext39 21E8                                       __ptext80 22F6  
                                     __ptext72 22E2                                       __ptext64 1F68  
                                     __ptext56 229A                                       __ptext48 16DE  
                                     __ptext81 1624                                       __ptext73 22E6  
                                     __ptext65 1F94                                       __ptext57 22A8  
                                     __ptext49 1560                                       __ptext90 2304  
                                     __ptext82 18A8                                       __ptext74 2018  
                                     __ptext66 1FC0                                       __ptext58 22CE  
                                     __ptext91 22C0                                       __ptext83 22FA  
                                     __ptext75 22EA                                       __ptext67 1FEC  
                                     __ptext59 22AE                                       __ptext92 2044  
                                     __ptext84 22B4                                       __ptext76 22EE  
                                     __ptext68 2166                                       __ptext93 0000  
                                     __ptext85 1F02                                       __ptext77 22F2  
                                     __ptext69 19AA                                       __ptext86 2302  
                                     __ptext87 2134                                       __ptext79 1E4C  
                                     __ptext88 22FE                                       __ptext89 22BA  
          __end_of_I2C_SetDataCompleteCallback 217E                    _I2C_SetDataCompleteCallback 2166  
                      ?_I2C_DO_RX_NACK_RESTART 0001                         __end_of_Data_integrity 1BE8  
                     __end_of_I2C_DO_SEND_STOP 2282                                    ??_check_sum 0010  
         __end_of_TMR0_DefaultInterruptHandler 2304                   _TMR0_DefaultInterruptHandler 2302  
                      ?_EUSART_SetErrorHandler 0007                                _I2C_SetCallback 19AA  
                ??_I2C_SetDataCompleteCallback 0010                                       crc_chk@j 000C  
EUSART_SetOverrunErrorHandler@interruptHandler 0007                                       isa$xinst 000000  
                 _Danie_ModbasRtu_analog_input 00BE                                       int$flags 0053  
                        ?_I2C_DO_SEND_ADR_READ 0001             __end_of_INTERRUPT_InterruptManager 00D0  
                   _INTERRUPT_InterruptManager 0008          __end_of_EUSART_SetFramingErrorHandler 2248  
                _EUSART_SetFramingErrorHandler 223E                                       main@bitt 00DC  
                                     main@red2 00D2                       __end_of_I2C_MasterIsNack 21A6  
                     __end_of_I2C_MasterSetIrq 22CE                                     _INTCONbits 000FF2  
                           I2C_WriteNBytes@len 001A                          ?_EUSART_RxDataHandler 0001  
                       ??_INTERRUPT_Initialize 0007                 __end_of_I2C_DO_RX_NACK_RESTART 226A  
                               _USART_UDR_vect 003A                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                      ?_Changing_Discrete_Output 0001  
                             ??_TMR0_StopTimer 0001                         fp__EUSART_Transmit_ISR 0000  
                              ?_Data_integrity 0001                                 _USART_RXC_vect 18A8  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 2252  
                      __end_of_USART_UDRE_vect 1F68                                 _USART_TXC_vect 22F6  
                          _I2C_DO_SEND_RESTART 2282                         fp__I2C_DO_ADDRESS_NACK 0000  
         __end_of_EUSART_SetRxInterruptHandler 2234                   _EUSART_SetRxInterruptHandler 222A  
              fp__TMR0_DefaultInterruptHandler 0000                  ?_TMR0_DefaultInterruptHandler 0001  
                                  _TMR0_Reload 22B4                       __Bin_input_Output@NUMBER 000D  
                           _EUSART_Receive_ISR 1624                                    crc_chk@data 0007  
EUSART_SetFramingErrorHandler@interruptHandler 0007                        __end_of_I2C_MasterClose 22F2  
                           fp__I2C_DO_TX_EMPTY 0000                        __end_of_I2C_MasterStart 22EA  
                      __end_of_I2C_MasterWrite 225A                           ?_I2C_DO_SEND_RESTART 0001  
                             ?_Error_modbasRtu 0001                            ?_EUSART_Receive_ISR 0001  
                fp__EUSART_DefaultErrorHandler 0000                                _TMR0_Initialize 20B8  
                      _analog_output_recording 1CA8                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                   ModbasRtu_Register_address@Hi 000D  
                 ModbasRtu_Register_address@Li 000E                         __end_of_USART_RXC_vect 192E  
                      __end_of_I2C_SetCallback 1A24                 __end_of_PIN_MANAGER_Initialize 2094  
                       __end_of_USART_TXC_vect 22FA                      Error_modbasRtu@Temp_Error 0013  
                __end_of_rd1RegCompleteHandler 1FEC                               fp__I2C_DO_RX_ACK 0000  
                         ??_EUSART_Receive_ISR 0001                  __end_of_wr1RegCompleteHandler 1F94  
