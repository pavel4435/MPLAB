

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jun 20 16:24:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   114                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   115                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   116                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   117   000000                     
   118                           ; Version 2.35
   119                           ; Generated 05/05/2021 GMT
   120                           ; 
   121                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   122                           ; All rights reserved.
   123                           ; 
   124                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   125                           ; 
   126                           ; Redistribution and use in source and binary forms, with or without modification, are
   127                           ; permitted provided that the following conditions are met:
   128                           ; 
   129                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   130                           ;        conditions and the following disclaimer.
   131                           ; 
   132                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   133                           ;        of conditions and the following disclaimer in the documentation and/or other
   134                           ;        materials provided with the distribution. Publication is not required when
   135                           ;        this file is used in an embedded application.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC18F26K20 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153   000000                     
   154                           	psect	idataBANK0
   155   00237A                     __pidataBANK0:
   156                           	callstack 0
   157                           
   158                           ;initializer for main@F3036
   159   00237A  1C                 	db	28
   160   00237B  00                 	db	0
   161   00237C  00                 	db	0
   162                           
   163                           ;initializer for main@F3034
   164   00237D  30                 	db	48
   165   00237E  64                 	db	100
   166   00237F  C0                 	db	192
   167                           
   168                           	psect	smallconst
   169   001000                     __psmallconst:
   170                           	callstack 0
   171   001000  00                 	db	0
   172   001001                     _i2c_fsmStateTable:
   173                           	callstack 0
   174   001001  CC                 	db	low _I2C_DO_IDLE
   175   001002  22                 	db	high _I2C_DO_IDLE
   176   001003  A4                 	db	low _I2C_DO_SEND_ADR_READ
   177   001004  22                 	db	high _I2C_DO_SEND_ADR_READ
   178   001005  94                 	db	low _I2C_DO_SEND_ADR_WRITE
   179   001006  22                 	db	high _I2C_DO_SEND_ADR_WRITE
   180   001007  94                 	db	low _I2C_DO_TX
   181   001008  15                 	db	high _I2C_DO_TX
   182   001009  16                 	db	low _I2C_DO_RX
   183   00100A  17                 	db	high _I2C_DO_RX
   184   00100B  C0                 	db	low _I2C_DO_RCEN
   185   00100C  22                 	db	high _I2C_DO_RCEN
   186   00100D  E8                 	db	low _I2C_DO_TX_EMPTY
   187   00100E  19                 	db	high _I2C_DO_TX_EMPTY
   188   00100F  72                 	db	low _I2C_DO_SEND_RESTART_READ
   189   001010  23                 	db	high _I2C_DO_SEND_RESTART_READ
   190   001011  6A                 	db	low _I2C_DO_SEND_RESTART_WRITE
   191   001012  23                 	db	high _I2C_DO_SEND_RESTART_WRITE
   192   001013  62                 	db	low _I2C_DO_SEND_RESTART
   193   001014  23                 	db	high _I2C_DO_SEND_RESTART
   194   001015  5A                 	db	low _I2C_DO_SEND_STOP
   195   001016  23                 	db	high _I2C_DO_SEND_STOP
   196   001017  52                 	db	low _I2C_DO_RX_ACK
   197   001018  23                 	db	high _I2C_DO_RX_ACK
   198   001019  4A                 	db	low _I2C_DO_RX_NACK_STOP
   199   00101A  23                 	db	high _I2C_DO_RX_NACK_STOP
   200   00101B  42                 	db	low _I2C_DO_RX_NACK_RESTART
   201   00101C  23                 	db	high _I2C_DO_RX_NACK_RESTART
   202   00101D  B4                 	db	low _I2C_DO_RESET
   203   00101E  22                 	db	high _I2C_DO_RESET
   204   00101F  34                 	db	low _I2C_DO_ADDRESS_NACK
   205   001020  1C                 	db	high _I2C_DO_ADDRESS_NACK
   206   001021                     __end_of_i2c_fsmStateTable:
   207                           	callstack 0
   208   000000                     _T2CON	set	4042
   209   000000                     _PR2	set	4043
   210   000000                     _RCONbits	set	4048
   211   000000                     _RCREG	set	4014
   212   000000                     _TXREG	set	4013
   213   000000                     _SPBRG	set	4015
   214   000000                     _TXSTA	set	4012
   215   000000                     _OSCCON	set	4051
   216   000000                     _INTCON2bits	set	4081
   217   000000                     _SSPBUF	set	4041
   218   000000                     _SSPADD	set	4040
   219   001021  00                 	db	0	; dummy byte at the end
   220   000000                     
   221                           	psect	nvCOMRAM
   222   000042                     __pnvCOMRAM:
   223                           	callstack 0
   224   000042                     _TMR2_InterruptHandler:
   225                           	callstack 0
   226   000042                     	ds	2
   227   000044                     _TMR0_InterruptHandler:
   228                           	callstack 0
   229   000044                     	ds	2
   230   000046                     _eusartTxBufferRemaining:
   231                           	callstack 0
   232   000046                     	ds	1
   233   000047                     _timer0ReloadVal:
   234                           	callstack 0
   235   000047                     	ds	1
   236                           
   237                           	psect	nvBANK0
   238   0000E9                     __pnvBANK0:
   239                           	callstack 0
   240   0000E9                     _EUSART_ErrorHandler:
   241                           	callstack 0
   242   0000E9                     	ds	2
   243   0000EB                     _EUSART_OverrunErrorHandler:
   244                           	callstack 0
   245   0000EB                     	ds	2
   246   0000ED                     _EUSART_FramingErrorHandler:
   247                           	callstack 0
   248   0000ED                     	ds	2
   249   0000EF                     _EUSART_RxDefaultInterruptHandler:
   250                           	callstack 0
   251   0000EF                     	ds	2
   252   0000F1                     _EUSART_TxDefaultInterruptHandler:
   253                           	callstack 0
   254   0000F1                     	ds	2
   255   000000                     _T2CONbits	set	4042
   256   000000                     _LATAbits	set	3977
   257   000000                     _RCSTAbits	set	4011
   258   000000                     _TXSTAbits	set	4012
   259   000000                     _T0CONbits	set	4053
   260   000000                     _SSPSTATbits	set	4039
   261   000000                     _SSPCON2bits	set	4037
   262   000000                     _SSPCON1bits	set	4038
   263   000000                     _WPUB	set	3964
   264   000000                     _ANSEL	set	3966
   265   000000                     _LATA	set	3977
   266   000000                     _PIE1bits	set	3997
   267   000000                     _PIR2bits	set	4001
   268   000000                     _SSPCON2	set	4037
   269   000000                     _SSPCON1	set	4038
   270   000000                     _SSPSTAT	set	4039
   271   000000                     _RCSTA	set	4011
   272   000000                     _BAUDCON	set	4024
   273   000000                     _PIR1bits	set	3998
   274   000000                     _TRISA	set	3986
   275   000000                     _LATC	set	3979
   276   000000                     _LATB	set	3978
   277   000000                     _OSCTUNE	set	3995
   278   000000                     _TRISC	set	3988
   279   000000                     _TRISB	set	3987
   280   000000                     _PORTAbits	set	3968
   281   000000                     _ANSELH	set	3967
   282   000000                     _INTCONbits	set	4082
   283   000000                     _T0CON	set	4053
   284   000000                     _TMR0L	set	4054
   285   000000                     _TMR0H	set	4055
   286   000000                     _SPBRGH	set	4016
   287   000000                     _TMR2	set	4044
   288                           
   289                           ; #config settings
   290                           
   291                           	psect	cinit
   292   001E28                     __pcinit:
   293                           	callstack 0
   294   001E28                     start_initialization:
   295                           	callstack 0
   296   001E28                     __initialization:
   297                           	callstack 0
   298                           
   299                           ; Initialize objects allocated to BANK0 (6 bytes)
   300                           ; load TBLPTR registers with __pidataBANK0
   301   001E28  0E7A               	movlw	low __pidataBANK0
   302   001E2A  6EF6               	movwf	tblptrl,c
   303   001E2C  0E23               	movlw	high __pidataBANK0
   304   001E2E  6EF7               	movwf	tblptrh,c
   305   001E30  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   306   001E32  6EF8               	movwf	tblptru,c
   307   001E34  EE00  F0F3         	lfsr	0,__pdataBANK0
   308   001E38  EE10 F006          	lfsr	1,6
   309   001E3C                     copy_data0:
   310   001E3C  0009               	tblrd		*+
   311   001E3E  CFF5 FFEE          	movff	tablat,postinc0
   312   001E42  50E5               	movf	postdec1,w,c
   313   001E44  50E1               	movf	fsr1l,w,c
   314   001E46  E1FA               	bnz	copy_data0
   315                           
   316                           ; Clear objects allocated to BANK0 (115 bytes)
   317   001E48  EE00  F060         	lfsr	0,__pbssBANK0
   318   001E4C  0E73               	movlw	115
   319   001E4E                     clear_0:
   320   001E4E  6AEE               	clrf	postinc0,c
   321   001E50  06E8               	decf	wreg,f,c
   322   001E52  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to COMRAM (30 bytes)
   325   001E54  EE00  F024         	lfsr	0,__pbssCOMRAM
   326   001E58  0E1E               	movlw	30
   327   001E5A                     clear_1:
   328   001E5A  6AEE               	clrf	postinc0,c
   329   001E5C  06E8               	decf	wreg,f,c
   330   001E5E  E1FD               	bnz	clear_1
   331   001E60                     end_of_initialization:
   332                           	callstack 0
   333   001E60                     __end_of__initialization:
   334                           	callstack 0
   335   001E60  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   336   001E62  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   337   001E64  0100               	movlb	0
   338   001E66  EFD6  F009         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMRAM
   341   000024                     __pbssCOMRAM:
   342                           	callstack 0
   343   000024                     _eusartRxStatusBuffer:
   344                           	callstack 0
   345   000024                     	ds	8
   346   00002C                     _eusartTxBuffer:
   347                           	callstack 0
   348   00002C                     	ds	8
   349   000034                     _eusartRxLastError:
   350                           	callstack 0
   351   000034                     	ds	1
   352   000035                     _eusartRxCount:
   353                           	callstack 0
   354   000035                     	ds	1
   355   000036                     _eusartRxTail:
   356                           	callstack 0
   357   000036                     	ds	1
   358   000037                     _eusartRxHead:
   359                           	callstack 0
   360   000037                     	ds	1
   361   000038                     _eusartTxTail:
   362                           	callstack 0
   363   000038                     	ds	1
   364   000039                     _eusartTxHead:
   365                           	callstack 0
   366   000039                     	ds	1
   367   00003A                     _D:
   368                           	callstack 0
   369   00003A                     	ds	1
   370   00003B                     _Bit_action_ModbasRtu:
   371                           	callstack 0
   372   00003B                     	ds	1
   373   00003C                     _Temp_ModbasRtu:
   374                           	callstack 0
   375   00003C                     	ds	1
   376   00003D                     _quantity_Data_ModbasRtu:
   377                           	callstack 0
   378   00003D                     	ds	1
   379   00003E                     _Danie_ModbasRtu_Binary_Output:
   380                           	callstack 0
   381   00003E                     	ds	2
   382   000040                     _Danie_ModbasRtu_Binary_input:
   383                           	callstack 0
   384   000040                     	ds	2
   385                           
   386                           	psect	bssBANK0
   387   000060                     __pbssBANK0:
   388                           	callstack 0
   389   000060                     _I2C_Status:
   390                           	callstack 0
   391   000060                     	ds	36
   392   000084                     _eusartRxBuffer:
   393                           	callstack 0
   394   000084                     	ds	8
   395   00008C                     _USART_UDR_vect:
   396                           	callstack 0
   397   00008C                     	ds	1
   398   00008D                     _Danie_Rx_ModbasRtu:
   399                           	callstack 0
   400   00008D                     	ds	30
   401   0000AB                     _Danie_ModbasRtu_analog_Output:
   402                           	callstack 0
   403   0000AB                     	ds	20
   404   0000BF                     _Danie_ModbasRtu_analog_input:
   405                           	callstack 0
   406   0000BF                     	ds	20
   407                           
   408                           	psect	dataBANK0
   409   0000F3                     __pdataBANK0:
   410                           	callstack 0
   411   0000F3                     main@F3036:
   412                           	callstack 0
   413   0000F3                     	ds	3
   414   0000F6                     main@F3034:
   415                           	callstack 0
   416   0000F6                     	ds	3
   417                           
   418                           	psect	cstackBANK1
   419   000100                     __pcstackBANK1:
   420                           	callstack 0
   421   000100                     main@red2:
   422                           	callstack 0
   423                           
   424                           ; 3 bytes @ 0x0
   425   000100                     	ds	3
   426   000103                     main@dat:
   427                           	callstack 0
   428                           
   429                           ; 3 bytes @ 0x3
   430   000103                     	ds	3
   431   000106                     main@red:
   432                           	callstack 0
   433                           
   434                           ; 3 bytes @ 0x6
   435   000106                     	ds	3
   436   000109                     main@address:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x9
   440   000109                     	ds	1
   441   00010A                     main@bitt:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0xA
   445   00010A                     	ds	1
   446                           
   447                           	psect	cstackBANK0
   448   0000D3                     __pcstackBANK0:
   449                           	callstack 0
   450   0000D3                     I2C_Open@address:
   451                           	callstack 0
   452   0000D3                     I2C_Close@returnValue:
   453                           	callstack 0
   454   0000D3                     I2C_MasterSendTxData@data:
   455                           	callstack 0
   456   0000D3                     I2C_SetBuffer@buffer:
   457                           	callstack 0
   458   0000D3                     I2C_SetCallback@cb:
   459                           	callstack 0
   460   0000D3                     TMR0_SetInterruptHandler@InterruptHandler:
   461                           	callstack 0
   462   0000D3                     EUSART_SetFramingErrorHandler@interruptHandler:
   463                           	callstack 0
   464   0000D3                     EUSART_SetOverrunErrorHandler@interruptHandler:
   465                           	callstack 0
   466   0000D3                     EUSART_SetErrorHandler@interruptHandler:
   467                           	callstack 0
   468   0000D3                     EUSART_SetTxInterruptHandler@interruptHandler:
   469                           	callstack 0
   470   0000D3                     EUSART_SetRxInterruptHandler@interruptHandler:
   471                           	callstack 0
   472   0000D3                     TMR2_SetInterruptHandler@InterruptHandler:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x0
   476   0000D3                     	ds	1
   477   0000D4                     I2C_Open@returnValue:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x1
   481   0000D4                     	ds	1
   482   0000D5                     I2C_SetBuffer@bufferSize:
   483                           	callstack 0
   484   0000D5                     I2C_SetCallback@ptr:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x2
   488   0000D5                     	ds	2
   489   0000D7                     I2C_SetCallback@idx:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x4
   493   0000D7                     	ds	1
   494   0000D8                     I2C_SetDataCompleteCallback@cb:
   495                           	callstack 0
   496   0000D8                     I2C_SetAddressNackCallback@cb:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x5
   500   0000D8                     	ds	2
   501   0000DA                     I2C_SetDataCompleteCallback@ptr:
   502                           	callstack 0
   503   0000DA                     I2C_SetAddressNackCallback@ptr:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x7
   507   0000DA                     	ds	2
   508   0000DC                     rd1RegCompleteHandler@ptr:
   509                           	callstack 0
   510   0000DC                     rd2RegCompleteHandler@ptr:
   511                           	callstack 0
   512   0000DC                     wr1RegCompleteHandler@ptr:
   513                           	callstack 0
   514   0000DC                     wr2RegCompleteHandler@ptr:
   515                           	callstack 0
   516   0000DC                     rdBlkRegCompleteHandler@ptr:
   517                           	callstack 0
   518   0000DC                     I2C_CallbackReturnReset@funPtr:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x9
   522   0000DC                     	ds	2
   523   0000DE                     ??_I2C_DO_TX:
   524   0000DE                     ??_I2C_DO_RX:
   525   0000DE                     ??_I2C_DO_TX_EMPTY:
   526   0000DE                     ??_I2C_DO_ADDRESS_NACK:
   527   0000DE                     
   528                           ; 1 bytes @ 0xB
   529   0000DE                     	ds	2
   530   0000E0                     ??_I2C_MasterFsm:
   531                           
   532                           ; 1 bytes @ 0xD
   533   0000E0                     	ds	2
   534   0000E2                     I2C_MasterOperation@read:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0xF
   538   0000E2                     	ds	1
   539   0000E3                     I2C_MasterOperation@returnValue:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x10
   543   0000E3                     	ds	1
   544   0000E4                     I2C_WriteNBytes@data:
   545                           	callstack 0
   546   0000E4                     I2C_ReadNBytes@data:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x11
   550   0000E4                     	ds	2
   551   0000E6                     I2C_WriteNBytes@len:
   552                           	callstack 0
   553   0000E6                     I2C_ReadNBytes@len:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x13
   557   0000E6                     	ds	2
   558   0000E8                     I2C_WriteNBytes@address:
   559                           	callstack 0
   560   0000E8                     I2C_ReadNBytes@address:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x15
   564   0000E8                     	ds	1
   565   0000E9                     
   566                           ; 1 bytes @ 0x16
   567                           
   568                           	psect	cstackCOMRAM
   569   000001                     __pcstackCOMRAM:
   570                           	callstack 0
   571   000001                     ??_USART_RXC_vect:
   572   000001                     ?_crc_chk:
   573                           	callstack 0
   574   000001                     ?_ModbasRtu_Register_address:
   575                           	callstack 0
   576   000001                     __Bin_input_Output@state:
   577                           	callstack 0
   578   000001                     crc_chk@data:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x0
   582   000001                     	ds	1
   583   000002                     USART_RXC_vect@TempModbas:
   584                           	callstack 0
   585   000002                     __Bin_input_Output@Masiv:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x1
   589   000002                     	ds	1
   590   000003                     ??_ModbasRtu_Register_address:
   591   000003                     crc_chk@length:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x2
   595   000003                     	ds	1
   596   000004                     ??_crc_chk:
   597   000004                     __Bin_input_Output@Sd:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x3
   601   000004                     	ds	1
   602   000005                     ??__Bin_input_Output:
   603                           
   604                           ; 1 bytes @ 0x4
   605   000005                     	ds	1
   606   000006                     crc_chk@j:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x5
   610   000006                     	ds	1
   611   000007                     ModbasRtu_Register_address@Hi:
   612                           	callstack 0
   613   000007                     __Bin_input_Output@NUMBER:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x6
   617   000007                     	ds	1
   618   000008                     ModbasRtu_Register_address@Li:
   619                           	callstack 0
   620   000008                     __Bin_input_Output@Temp:
   621                           	callstack 0
   622   000008                     crc_chk@reg_crc:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x7
   626   000008                     	ds	1
   627   000009                     __Bin_input_Output@Temp1:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x8
   631   000009                     	ds	1
   632   00000A                     check_sum@RC:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x9
   636   00000A                     	ds	1
   637   00000B                     Data_integrity@Temp22:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0xA
   641   00000B                     	ds	1
   642   00000C                     check_sum@Adress:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0xB
   646   00000C                     	ds	1
   647   00000D                     Data_integrity@Temp33:
   648                           	callstack 0
   649   00000D                     Error_modbasRtu@Temp_Error:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0xC
   653   00000D                     	ds	1
   654   00000E                     Changing_Discrete_Output@address:
   655                           	callstack 0
   656   00000E                     Reading_Discrete_Output@Massiv:
   657                           	callstack 0
   658   00000E                     Read_analog_input@Massiv:
   659                           	callstack 0
   660   00000E                     analog_output_recording@address:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0xD
   664   00000E                     	ds	2
   665   000010                     Reading_Discrete_Output@Number_:
   666                           	callstack 0
   667   000010                     Read_analog_input@Number_:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0xF
   671   000010                     	ds	1
   672   000011                     ??_Reading_Discrete_Output:
   673   000011                     Read_analog_input@Vt:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x10
   677   000011                     	ds	1
   678   000012                     ??_Read_analog_input:
   679                           
   680                           ; 1 bytes @ 0x11
   681   000012                     	ds	1
   682   000013                     Reading_Discrete_Output@Danie:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x12
   686   000013                     	ds	1
   687   000014                     Reading_Discrete_Output@Temp:
   688                           	callstack 0
   689   000014                     Read_analog_input@Danie:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x13
   693   000014                     	ds	1
   694   000015                     Reading_Discrete_Output@Temp2:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x14
   698   000015                     	ds	1
   699   000016                     Reading_Discrete_Output@address2:
   700                           	callstack 0
   701   000016                     Read_analog_input@address:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x15
   705   000016                     	ds	1
   706   000017                     Reading_Discrete_Output@Temp3:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x16
   710   000017                     	ds	1
   711   000018                     Reading_Discrete_Output@Number_bits:
   712                           	callstack 0
   713   000018                     Read_analog_input@Number_bits:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x17
   717   000018                     	ds	2
   718   00001A                     Read_analog_input@Adress:
   719                           	callstack 0
   720   00001A                     Reading_Discrete_Output@address:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x19
   724   00001A                     	ds	2
   725   00001C                     ??_modbasRtu_Answer:
   726                           
   727                           ; 1 bytes @ 0x1B
   728   00001C                     	ds	2
   729   00001E                     ??_INTERRUPT_InterruptManager:
   730                           
   731                           ; 1 bytes @ 0x1D
   732   00001E                     	ds	6
   733                           
   734 ;;
   735 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   736 ;;
   737 ;; *************** function _main *****************
   738 ;; Defined at:
   739 ;;		line 60 in file "main.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  red             3    6[BANK1 ] unsigned char [3]
   744 ;;  dat             3    3[BANK1 ] unsigned char [3]
   745 ;;  red2            3    0[BANK1 ] unsigned char [3]
   746 ;;  bitt            1   10[BANK1 ] struct .
   747 ;;  address         1    9[BANK1 ] unsigned char 
   748 ;;  toggle          1    0        unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;Total ram usage:       11 bytes
   763 ;; Hardware stack levels required when called: 18
   764 ;; This function calls:
   765 ;;		_EUSART_SetRxInterruptHandler
   766 ;;		_EUSART_SetTxInterruptHandler
   767 ;;		_I2C_ReadNBytes
   768 ;;		_I2C_WriteNBytes
   769 ;;		_SYSTEM_Initialize
   770 ;;		_USART_UDRE_vect
   771 ;; This function is called by:
   772 ;;		Startup code after reset
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text0
   777   0013AC                     __ptext0:
   778                           	callstack 0
   779   0013AC                     _main:
   780                           	callstack 13
   781   0013AC                     
   782                           ;main.c: 63:     SYSTEM_Initialize();
   783   0013AC  ECE1  F010         	call	_SYSTEM_Initialize	;wreg free
   784                           
   785                           ;main.c: 65:    EUSART_SetRxInterruptHandler(USART_RXC_vect);
   786   0013B0  0EE6               	movlw	low _USART_RXC_vect
   787   0013B2  0100               	movlb	0	; () banked
   788   0013B4  6FD3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler& (0+255),b
   789   0013B6  0E18               	movlw	high _USART_RXC_vect
   790   0013B8  6FD4               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
   791   0013BA  EC80  F011         	call	_EUSART_SetRxInterruptHandler	;wreg free
   792                           
   793                           ;main.c: 66:    EUSART_SetTxInterruptHandler(USART_TXC_vect);
   794   0013BE  0ECE               	movlw	low _USART_TXC_vect
   795   0013C0  0100               	movlb	0	; () banked
   796   0013C2  6FD3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler& (0+255),b
   797   0013C4  0E23               	movlw	high _USART_TXC_vect
   798   0013C6  6FD4               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
   799   0013C8  EC7B  F011         	call	_EUSART_SetTxInterruptHandler	;wreg free
   800   0013CC                     
   801                           ;main.c: 72:    (INTCONbits.GIE = 1);
   802   0013CC  8EF2               	bsf	242,7,c	;volatile
   803   0013CE                     
   804                           ;main.c: 78:    (INTCONbits.PEIE = 1);
   805   0013CE  8CF2               	bsf	242,6,c	;volatile
   806   0013D0                     
   807                           ;main.c: 86:    uint8_t address = (0XE6)>>1;
   808   0013D0  0E73               	movlw	115
   809   0013D2  0101               	movlb	1	; () banked
   810   0013D4  6F09               	movwf	main@address& (0+255),b
   811   0013D6                     
   812                           ; BSR set to: 1
   813                           ;main.c: 87:    uint8_t dat[3]={0X30,0X64,0XC0};
   814   0013D6  C0F6  F103         	movff	main@F3034,main@dat
   815   0013DA  C0F7  F104         	movff	main@F3034+1,main@dat+1
   816   0013DE  C0F8  F105         	movff	main@F3034+2,main@dat+2
   817   0013E2                     
   818                           ; BSR set to: 1
   819                           ;main.c: 88:    uint8_t red[3]={0x1C};
   820   0013E2  C0F3  F106         	movff	main@F3036,main@red
   821   0013E6  C0F4  F107         	movff	main@F3036+1,main@red+1
   822   0013EA  C0F5  F108         	movff	main@F3036+2,main@red+2
   823   0013EE                     l4743:
   824                           
   825                           ;main.c: 93:     {;main.c: 96:          if(PORTAbits.RA2 && !bitt.b0 )
   826   0013EE  A480               	btfss	128,2,c	;volatile
   827   0013F0  EFFC  F009         	goto	u2491
   828   0013F4  EFFE  F009         	goto	u2490
   829   0013F8                     u2491:
   830   0013F8  EF30  F00A         	goto	l791
   831   0013FC                     u2490:
   832   0013FC  0101               	movlb	1	; () banked
   833   0013FE  B10A               	btfsc	main@bitt& (0+255),0,b
   834   001400  EF04  F00A         	goto	u2501
   835   001404  EF06  F00A         	goto	u2500
   836   001408                     u2501:
   837   001408  EF30  F00A         	goto	l791
   838   00140C                     u2500:
   839   00140C                     
   840                           ; BSR set to: 1
   841   00140C  8089               	bsf	137,0,c	;volatile
   842   00140E                     
   843                           ; BSR set to: 1
   844                           ;main.c: 100:               I2C_WriteNBytes(address,dat,3);
   845   00140E  0E03               	movlw	low main@dat
   846   001410  0100               	movlb	0	; () banked
   847   001412  6FE4               	movwf	I2C_WriteNBytes@data& (0+255),b
   848   001414  0E01               	movlw	high main@dat
   849   001416  6FE5               	movwf	(I2C_WriteNBytes@data+1)& (0+255),b
   850   001418  0E00               	movlw	0
   851   00141A  6FE7               	movwf	(I2C_WriteNBytes@len+1)& (0+255),b
   852   00141C  0E03               	movlw	3
   853   00141E  6FE6               	movwf	I2C_WriteNBytes@len& (0+255),b
   854   001420  0101               	movlb	1	; () banked
   855   001422  5109               	movf	main@address& (0+255),w,b
   856   001424  EC4E  F00E         	call	_I2C_WriteNBytes
   857                           
   858                           ;main.c: 102:               I2C_WriteNBytes((0xD0)>>1,red,1);
   859   001428  0E06               	movlw	low main@red
   860   00142A  0100               	movlb	0	; () banked
   861   00142C  6FE4               	movwf	I2C_WriteNBytes@data& (0+255),b
   862   00142E  0E01               	movlw	high main@red
   863   001430  6FE5               	movwf	(I2C_WriteNBytes@data+1)& (0+255),b
   864   001432  0E00               	movlw	0
   865   001434  6FE7               	movwf	(I2C_WriteNBytes@len+1)& (0+255),b
   866   001436  0E01               	movlw	1
   867   001438  6FE6               	movwf	I2C_WriteNBytes@len& (0+255),b
   868   00143A  0E68               	movlw	104
   869   00143C  EC4E  F00E         	call	_I2C_WriteNBytes
   870                           
   871                           ;main.c: 104:               I2C_ReadNBytes((0xD1)>>1, red2 , 3);
   872   001440  0E00               	movlw	low main@red2
   873   001442  0100               	movlb	0	; () banked
   874   001444  6FE4               	movwf	I2C_ReadNBytes@data& (0+255),b
   875   001446  0E01               	movlw	high main@red2
   876   001448  6FE5               	movwf	(I2C_ReadNBytes@data+1)& (0+255),b
   877   00144A  0E00               	movlw	0
   878   00144C  6FE7               	movwf	(I2C_ReadNBytes@len+1)& (0+255),b
   879   00144E  0E03               	movlw	3
   880   001450  6FE6               	movwf	I2C_ReadNBytes@len& (0+255),b
   881   001452  0E68               	movlw	104
   882   001454  ECA9  F00E         	call	_I2C_ReadNBytes
   883   001458                     
   884                           ;main.c: 106:               bitt.b0=1;
   885   001458  0101               	movlb	1	; () banked
   886   00145A  810A               	bsf	main@bitt& (0+255),0,b
   887                           
   888                           ;main.c: 108:          }
   889   00145C  EF41  F00A         	goto	l794
   890   001460                     l791:
   891   001460  B480               	btfsc	128,2,c	;volatile
   892   001462  EF35  F00A         	goto	u2511
   893   001466  EF37  F00A         	goto	u2510
   894   00146A                     u2511:
   895   00146A  EF41  F00A         	goto	l794
   896   00146E                     u2510:
   897   00146E  0101               	movlb	1	; () banked
   898   001470  A10A               	btfss	main@bitt& (0+255),0,b
   899   001472  EF3D  F00A         	goto	u2521
   900   001476  EF3F  F00A         	goto	u2520
   901   00147A                     u2521:
   902   00147A  EF41  F00A         	goto	l794
   903   00147E                     u2520:
   904   00147E                     
   905                           ; BSR set to: 1
   906   00147E  9089               	bcf	137,0,c	;volatile
   907   001480                     
   908                           ; BSR set to: 1
   909                           ;main.c: 112:              bitt.b0=0;
   910   001480  910A               	bcf	main@bitt& (0+255),0,b
   911   001482                     l794:
   912                           
   913                           ;main.c: 114:          if(TXSTAbits.TRMT && USART_UDR_vect)
   914   001482  A2AC               	btfss	172,1,c	;volatile
   915   001484  EF46  F00A         	goto	u2531
   916   001488  EF48  F00A         	goto	u2530
   917   00148C                     u2531:
   918   00148C  EFF7  F009         	goto	l4743
   919   001490                     u2530:
   920   001490  0100               	movlb	0	; () banked
   921   001492  518C               	movf	_USART_UDR_vect& (0+255),w,b
   922   001494  B4D8               	btfsc	status,2,c
   923   001496  EF4F  F00A         	goto	u2541
   924   00149A  EF51  F00A         	goto	u2540
   925   00149E                     u2541:
   926   00149E  EFF7  F009         	goto	l4743
   927   0014A2                     u2540:
   928   0014A2                     
   929                           ; BSR set to: 0
   930                           ;main.c: 115:          {;main.c: 116:              USART_UDRE_vect ();
   931   0014A2  ECCD  F00F         	call	_USART_UDRE_vect	;wreg free
   932   0014A6  EFF7  F009         	goto	l4743
   933   0014AA  EF84  F000         	goto	start
   934   0014AE                     __end_of_main:
   935                           	callstack 0
   936                           
   937 ;; *************** function _USART_UDRE_vect *****************
   938 ;; Defined at:
   939 ;;		line 79 in file "Modbas_RTU.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 9
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text1
   968   001F9A                     __ptext1:
   969                           	callstack 0
   970   001F9A                     _USART_UDRE_vect:
   971                           	callstack 21
   972   001F9A                     
   973                           ;Modbas_RTU.c: 82:    if (quantity_Data_ModbasRtu >= Temp_ModbasRtu )
   974   001F9A  503C               	movf	_Temp_ModbasRtu^0,w,c
   975   001F9C  5C3D               	subwf	_quantity_Data_ModbasRtu^0,w,c
   976   001F9E  A0D8               	btfss	status,0,c
   977   001FA0  EFD4  F00F         	goto	u2361
   978   001FA4  EFD6  F00F         	goto	u2360
   979   001FA8                     u2361:
   980   001FA8  EFE1  F00F         	goto	l4619
   981   001FAC                     u2360:
   982   001FAC                     
   983                           ;Modbas_RTU.c: 83:     {;Modbas_RTU.c: 84:    TXREG = Danie_Rx_ModbasRtu[Temp_ModbasRtu+
      +                          +];
   984   001FAC  0E8D               	movlw	low _Danie_Rx_ModbasRtu
   985   001FAE  243C               	addwf	_Temp_ModbasRtu^0,w,c
   986   001FB0  6ED9               	movwf	fsr2l,c
   987   001FB2  6ADA               	clrf	fsr2h,c
   988   001FB4  0E00               	movlw	high _Danie_Rx_ModbasRtu
   989   001FB6  22DA               	addwfc	fsr2h,f,c
   990   001FB8  50DF               	movf	indf2,w,c
   991   001FBA  6EAD               	movwf	173,c	;volatile
   992   001FBC  2A3C               	incf	_Temp_ModbasRtu^0,f,c
   993                           
   994                           ;Modbas_RTU.c: 85:     }
   995   001FBE  EFE5  F00F         	goto	l914
   996   001FC2                     l4619:
   997                           
   998                           ;Modbas_RTU.c: 87:     {;Modbas_RTU.c: 91:       USART_UDR_vect=0;
   999   001FC2  0E00               	movlw	0
  1000   001FC4  0100               	movlb	0	; () banked
  1001   001FC6  6F8C               	movwf	_USART_UDR_vect& (0+255),b
  1002   001FC8                     
  1003                           ; BSR set to: 0
  1004   001FC8  889D               	bsf	157,4,c	;volatile
  1005   001FCA                     l914:
  1006   001FCA  0012               	return		;funcret
  1007   001FCC                     __end_of_USART_UDRE_vect:
  1008                           	callstack 0
  1009                           
  1010 ;; *************** function _SYSTEM_Initialize *****************
  1011 ;; Defined at:
  1012 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 11
  1033 ;; This function calls:
  1034 ;;		_EUSART_Initialize
  1035 ;;		_I2C_Initialize
  1036 ;;		_INTERRUPT_Initialize
  1037 ;;		_OSCILLATOR_Initialize
  1038 ;;		_PIN_MANAGER_Initialize
  1039 ;;		_TMR0_Initialize
  1040 ;;		_TMR2_Initialize
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text2
  1047   0021C2                     __ptext2:
  1048                           	callstack 0
  1049   0021C2                     _SYSTEM_Initialize:
  1050                           	callstack 19
  1051   0021C2                     
  1052                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1053   0021C2  ECCF  F011         	call	_INTERRUPT_Initialize	;wreg free
  1054   0021C6                     
  1055                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  1056   0021C6  EC25  F011         	call	_I2C_Initialize	;wreg free
  1057   0021CA                     
  1058                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  1059   0021CA  EC89  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1060   0021CE                     
  1061                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  1062   0021CE  EC76  F011         	call	_OSCILLATOR_Initialize	;wreg free
  1063   0021D2                     
  1064                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  1065   0021D2  ECD1  F010         	call	_TMR2_Initialize	;wreg free
  1066   0021D6                     
  1067                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  1068   0021D6  EC9C  F010         	call	_TMR0_Initialize	;wreg free
  1069   0021DA                     
  1070                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  1071   0021DA  ECB5  F00C         	call	_EUSART_Initialize	;wreg free
  1072   0021DE  0012               	return		;funcret
  1073   0021E0                     __end_of_SYSTEM_Initialize:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _TMR2_Initialize *****************
  1077 ;; Defined at:
  1078 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 10
  1099 ;; This function calls:
  1100 ;;		_TMR2_SetInterruptHandler
  1101 ;; This function is called by:
  1102 ;;		_SYSTEM_Initialize
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text3
  1107   0021A2                     __ptext3:
  1108                           	callstack 0
  1109   0021A2                     _TMR2_Initialize:
  1110                           	callstack 19
  1111   0021A2                     
  1112                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x3E;
  1113   0021A2  0E3E               	movlw	62
  1114   0021A4  6ECB               	movwf	203,c	;volatile
  1115                           
  1116                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  1117   0021A6  0E00               	movlw	0
  1118   0021A8  6ECC               	movwf	204,c	;volatile
  1119   0021AA                     
  1120                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  1121   0021AA  929E               	bcf	158,1,c	;volatile
  1122   0021AC                     
  1123                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  1124   0021AC  829D               	bsf	157,1,c	;volatile
  1125   0021AE                     
  1126                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1127   0021AE  0ED2               	movlw	low _TMR2_DefaultInterruptHandler
  1128   0021B0  0100               	movlb	0	; () banked
  1129   0021B2  6FD3               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  1130   0021B4  0E23               	movlw	high _TMR2_DefaultInterruptHandler
  1131   0021B6  6FD4               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1132   0021B8  EC6C  F011         	call	_TMR2_SetInterruptHandler	;wreg free
  1133   0021BC                     
  1134                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x3A;
  1135   0021BC  0E3A               	movlw	58
  1136   0021BE  6ECA               	movwf	202,c	;volatile
  1137   0021C0  0012               	return		;funcret
  1138   0021C2                     __end_of_TMR2_Initialize:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _TMR2_SetInterruptHandler *****************
  1142 ;; Defined at:
  1143 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1146 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 9
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_TMR2_Initialize
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text4
  1173   0022D8                     __ptext4:
  1174                           	callstack 0
  1175   0022D8                     _TMR2_SetInterruptHandler:
  1176                           	callstack 19
  1177   0022D8                     
  1178                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  1179   0022D8  C0D3  F042         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1180   0022DC  C0D4  F043         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1181   0022E0  0012               	return		;funcret
  1182   0022E2                     __end_of_TMR2_SetInterruptHandler:
  1183                           	callstack 0
  1184                           
  1185 ;; *************** function _TMR0_Initialize *****************
  1186 ;; Defined at:
  1187 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;Total ram usage:        0 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 10
  1208 ;; This function calls:
  1209 ;;		_TMR0_SetInterruptHandler
  1210 ;; This function is called by:
  1211 ;;		_SYSTEM_Initialize
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text5
  1216   002138                     __ptext5:
  1217                           	callstack 0
  1218   002138                     _TMR0_Initialize:
  1219                           	callstack 19
  1220   002138                     
  1221                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x00;
  1222   002138  0E00               	movlw	0
  1223   00213A  6ED7               	movwf	215,c	;volatile
  1224                           
  1225                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xE1;
  1226   00213C  0EE1               	movlw	225
  1227   00213E  6ED6               	movwf	214,c	;volatile
  1228                           
  1229                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal = 225;
  1230   002140  0EE1               	movlw	225
  1231   002142  6E47               	movwf	_timer0ReloadVal^0,c	;volatile
  1232   002144                     
  1233                           ;mcc_generated_files/tmr0.c: 83:     INTCONbits.TMR0IF = 0;
  1234   002144  94F2               	bcf	242,2,c	;volatile
  1235   002146                     
  1236                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IE = 1;
  1237   002146  8AF2               	bsf	242,5,c	;volatile
  1238   002148                     
  1239                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1240   002148  0ED4               	movlw	low _TMR0_DefaultInterruptHandler
  1241   00214A  0100               	movlb	0	; () banked
  1242   00214C  6FD3               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1243   00214E  0E23               	movlw	high _TMR0_DefaultInterruptHandler
  1244   002150  6FD4               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1245   002152  EC71  F011         	call	_TMR0_SetInterruptHandler	;wreg free
  1246   002156                     
  1247                           ;mcc_generated_files/tmr0.c: 92:     T0CON = 0x57;
  1248   002156  0E57               	movlw	87
  1249   002158  6ED5               	movwf	213,c	;volatile
  1250   00215A  0012               	return		;funcret
  1251   00215C                     __end_of_TMR0_Initialize:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _TMR0_SetInterruptHandler *****************
  1255 ;; Defined at:
  1256 ;;		line 149 in file "mcc_generated_files/tmr0.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1259 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1271 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;Total ram usage:        2 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 9
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_TMR0_Initialize
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text6
  1286   0022E2                     __ptext6:
  1287                           	callstack 0
  1288   0022E2                     _TMR0_SetInterruptHandler:
  1289                           	callstack 19
  1290   0022E2                     
  1291                           ;mcc_generated_files/tmr0.c: 150:     TMR0_InterruptHandler = InterruptHandler;
  1292   0022E2  C0D3  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1293   0022E6  C0D4  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1294   0022EA  0012               	return		;funcret
  1295   0022EC                     __end_of_TMR0_SetInterruptHandler:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _PIN_MANAGER_Initialize *****************
  1299 ;; Defined at:
  1300 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;Total ram usage:        0 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 9
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_SYSTEM_Initialize
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text7
  1329   002112                     __ptext7:
  1330                           	callstack 0
  1331   002112                     _PIN_MANAGER_Initialize:
  1332                           	callstack 20
  1333   002112                     
  1334                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1335   002112  0E00               	movlw	0
  1336   002114  6E89               	movwf	137,c	;volatile
  1337                           
  1338                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1339   002116  0E00               	movlw	0
  1340   002118  6E8A               	movwf	138,c	;volatile
  1341                           
  1342                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1343   00211A  0E00               	movlw	0
  1344   00211C  6E8B               	movwf	139,c	;volatile
  1345                           
  1346                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFC;
  1347   00211E  0EFC               	movlw	252
  1348   002120  6E92               	movwf	146,c	;volatile
  1349   002122                     
  1350                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1351   002122  6893               	setf	147,c	;volatile
  1352                           
  1353                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  1354   002124  0EBF               	movlw	191
  1355   002126  6E94               	movwf	148,c	;volatile
  1356                           
  1357                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x13;
  1358   002128  0E13               	movlw	19
  1359   00212A  6E7E               	movwf	126,c	;volatile
  1360                           
  1361                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
  1362   00212C  0E1F               	movlw	31
  1363   00212E  6E7F               	movwf	127,c	;volatile
  1364                           
  1365                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  1366   002130  0E00               	movlw	0
  1367   002132  6E7C               	movwf	124,c	;volatile
  1368   002134                     
  1369                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  1370   002134  8EF1               	bsf	241,7,c	;volatile
  1371   002136  0012               	return		;funcret
  1372   002138                     __end_of_PIN_MANAGER_Initialize:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _OSCILLATOR_Initialize *****************
  1376 ;; Defined at:
  1377 ;;		line 62 in file "mcc_generated_files/mcc.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 9
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_SYSTEM_Initialize
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text8
  1406   0022EC                     __ptext8:
  1407                           	callstack 0
  1408   0022EC                     _OSCILLATOR_Initialize:
  1409                           	callstack 20
  1410   0022EC                     
  1411                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x60;
  1412   0022EC  0E60               	movlw	96
  1413   0022EE  6ED3               	movwf	211,c	;volatile
  1414                           
  1415                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  1416   0022F0  0E00               	movlw	0
  1417   0022F2  6E9B               	movwf	155,c	;volatile
  1418   0022F4  0012               	return		;funcret
  1419   0022F6                     __end_of_OSCILLATOR_Initialize:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _INTERRUPT_Initialize *****************
  1423 ;; Defined at:
  1424 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		None
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 9
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_SYSTEM_Initialize
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text9
  1453   00239E                     __ptext9:
  1454                           	callstack 0
  1455   00239E                     _INTERRUPT_Initialize:
  1456                           	callstack 20
  1457   00239E                     
  1458                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1459   00239E  9ED0               	bcf	208,7,c	;volatile
  1460   0023A0  0012               	return		;funcret
  1461   0023A2                     __end_of_INTERRUPT_Initialize:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _I2C_Initialize *****************
  1465 ;; Defined at:
  1466 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 9
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_SYSTEM_Initialize
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text10
  1495   00224A                     __ptext10:
  1496                           	callstack 0
  1497   00224A                     _I2C_Initialize:
  1498                           	callstack 20
  1499   00224A                     
  1500                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  1501   00224A  0E00               	movlw	0
  1502   00224C  6EC7               	movwf	199,c	;volatile
  1503                           
  1504                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  1505   00224E  0E08               	movlw	8
  1506   002250  6EC6               	movwf	198,c	;volatile
  1507                           
  1508                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  1509   002252  0E00               	movlw	0
  1510   002254  6EC5               	movwf	197,c	;volatile
  1511                           
  1512                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  1513   002256  0E13               	movlw	19
  1514   002258  6EC8               	movwf	200,c	;volatile
  1515   00225A                     
  1516                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  1517   00225A  9AC6               	bcf	198,5,c	;volatile
  1518   00225C  0012               	return		;funcret
  1519   00225E                     __end_of_I2C_Initialize:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _EUSART_Initialize *****************
  1523 ;; Defined at:
  1524 ;;		line 88 in file "mcc_generated_files/eusart.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 10
  1545 ;; This function calls:
  1546 ;;		_EUSART_SetErrorHandler
  1547 ;;		_EUSART_SetFramingErrorHandler
  1548 ;;		_EUSART_SetOverrunErrorHandler
  1549 ;;		_EUSART_SetRxInterruptHandler
  1550 ;;		_EUSART_SetTxInterruptHandler
  1551 ;; This function is called by:
  1552 ;;		_SYSTEM_Initialize
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text11
  1557   00196A                     __ptext11:
  1558                           	callstack 0
  1559   00196A                     _EUSART_Initialize:
  1560                           	callstack 19
  1561   00196A                     
  1562                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  1563   00196A  9A9D               	bcf	157,5,c	;volatile
  1564   00196C                     
  1565                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  1566   00196C  0E5A               	movlw	low _EUSART_Receive_ISR
  1567   00196E  0100               	movlb	0	; () banked
  1568   001970  6FD3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler& (0+255),b
  1569   001972  0E16               	movlw	high _EUSART_Receive_ISR
  1570   001974  6FD4               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  1571   001976  EC80  F011         	call	_EUSART_SetRxInterruptHandler	;wreg free
  1572   00197A                     
  1573                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  1574   00197A  989D               	bcf	157,4,c	;volatile
  1575                           
  1576                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  1577   00197C  0EAC               	movlw	low _EUSART_Transmit_ISR
  1578   00197E  0100               	movlb	0	; () banked
  1579   001980  6FD3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler& (0+255),b
  1580   001982  0E1E               	movlw	high _EUSART_Transmit_ISR
  1581   001984  6FD4               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  1582   001986  EC7B  F011         	call	_EUSART_SetTxInterruptHandler	;wreg free
  1583   00198A                     
  1584                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  1585   00198A  0E08               	movlw	8
  1586   00198C  6EB8               	movwf	184,c	;volatile
  1587   00198E                     
  1588                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  1589   00198E  0E90               	movlw	144
  1590   001990  6EAB               	movwf	171,c	;volatile
  1591   001992                     
  1592                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  1593   001992  0E24               	movlw	36
  1594   001994  6EAC               	movwf	172,c	;volatile
  1595   001996                     
  1596                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  1597   001996  0ECF               	movlw	207
  1598   001998  6EAF               	movwf	175,c	;volatile
  1599   00199A                     
  1600                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  1601   00199A  0E00               	movlw	0
  1602   00199C  6EB0               	movwf	176,c	;volatile
  1603   00199E                     
  1604                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  1605   00199E  0ED6               	movlw	low _EUSART_DefaultFramingErrorHandler
  1606   0019A0  0100               	movlb	0	; () banked
  1607   0019A2  6FD3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler& (0+255),b
  1608   0019A4  0E23               	movlw	high _EUSART_DefaultFramingErrorHandler
  1609   0019A6  6FD4               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  1610   0019A8  EC8A  F011         	call	_EUSART_SetFramingErrorHandler	;wreg free
  1611   0019AC                     
  1612                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  1613   0019AC  0E92               	movlw	low _EUSART_DefaultOverrunErrorHandler
  1614   0019AE  0100               	movlb	0	; () banked
  1615   0019B0  6FD3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler& (0+255),b
  1616   0019B2  0E23               	movlw	high _EUSART_DefaultOverrunErrorHandler
  1617   0019B4  6FD4               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  1618   0019B6  EC85  F011         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  1619   0019BA                     
  1620                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  1621   0019BA  0E98               	movlw	low _EUSART_DefaultErrorHandler
  1622   0019BC  0100               	movlb	0	; () banked
  1623   0019BE  6FD3               	movwf	EUSART_SetErrorHandler@interruptHandler& (0+255),b
  1624   0019C0  0E23               	movlw	high _EUSART_DefaultErrorHandler
  1625   0019C2  6FD4               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)& (0+255),b
  1626   0019C4  EC8F  F011         	call	_EUSART_SetErrorHandler	;wreg free
  1627                           
  1628                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  1629   0019C8  0E00               	movlw	0
  1630   0019CA  6E34               	movwf	_eusartRxLastError^0,c	;volatile
  1631                           
  1632                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  1633   0019CC  0E00               	movlw	0
  1634   0019CE  6E39               	movwf	_eusartTxHead^0,c	;volatile
  1635                           
  1636                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  1637   0019D0  0E00               	movlw	0
  1638   0019D2  6E38               	movwf	_eusartTxTail^0,c	;volatile
  1639                           
  1640                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  1641   0019D4  0E08               	movlw	8
  1642   0019D6  6E46               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  1643                           
  1644                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  1645   0019D8  0E00               	movlw	0
  1646   0019DA  6E37               	movwf	_eusartRxHead^0,c	;volatile
  1647                           
  1648                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  1649   0019DC  0E00               	movlw	0
  1650   0019DE  6E36               	movwf	_eusartRxTail^0,c	;volatile
  1651                           
  1652                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  1653   0019E0  0E00               	movlw	0
  1654   0019E2  6E35               	movwf	_eusartRxCount^0,c	;volatile
  1655   0019E4                     
  1656                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  1657   0019E4  8A9D               	bsf	157,5,c	;volatile
  1658   0019E6  0012               	return		;funcret
  1659   0019E8                     __end_of_EUSART_Initialize:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  1663 ;; Defined at:
  1664 ;;		line 276 in file "mcc_generated_files/eusart.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1667 ;;		 -> USART_TXC_vect(1), EUSART_Transmit_ISR(1), 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 9
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_EUSART_Initialize
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text12
  1695   0022F6                     __ptext12:
  1696                           	callstack 0
  1697   0022F6                     _EUSART_SetTxInterruptHandler:
  1698                           	callstack 19
  1699   0022F6                     
  1700                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  1701   0022F6  C0D3  F0F1         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  1702   0022FA  C0D4  F0F2         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  1703   0022FE  0012               	return		;funcret
  1704   002300                     __end_of_EUSART_SetTxInterruptHandler:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  1708 ;; Defined at:
  1709 ;;		line 280 in file "mcc_generated_files/eusart.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1712 ;;		 -> USART_RXC_vect(1), EUSART_Receive_ISR(1), 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1724 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;Total ram usage:        2 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; Hardware stack levels required when called: 9
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_EUSART_Initialize
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text13
  1740   002300                     __ptext13:
  1741                           	callstack 0
  1742   002300                     _EUSART_SetRxInterruptHandler:
  1743                           	callstack 19
  1744   002300                     
  1745                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  1746   002300  C0D3  F0EF         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  1747   002304  C0D4  F0F0         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  1748   002308  0012               	return		;funcret
  1749   00230A                     __end_of_EUSART_SetRxInterruptHandler:
  1750                           	callstack 0
  1751                           
  1752 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1753 ;; Defined at:
  1754 ;;		line 268 in file "mcc_generated_files/eusart.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1757 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1769 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;Total ram usage:        2 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 9
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_EUSART_Initialize
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text14
  1784   00230A                     __ptext14:
  1785                           	callstack 0
  1786   00230A                     _EUSART_SetOverrunErrorHandler:
  1787                           	callstack 19
  1788   00230A                     
  1789                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  1790   00230A  C0D3  F0EB         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1791   00230E  C0D4  F0EC         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1792   002312  0012               	return		;funcret
  1793   002314                     __end_of_EUSART_SetOverrunErrorHandler:
  1794                           	callstack 0
  1795                           
  1796 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1797 ;; Defined at:
  1798 ;;		line 264 in file "mcc_generated_files/eusart.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1801 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;Total ram usage:        2 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 9
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_EUSART_Initialize
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text15
  1828   002314                     __ptext15:
  1829                           	callstack 0
  1830   002314                     _EUSART_SetFramingErrorHandler:
  1831                           	callstack 19
  1832   002314                     
  1833                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  1834   002314  C0D3  F0ED         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1835   002318  C0D4  F0EE         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1836   00231C  0012               	return		;funcret
  1837   00231E                     __end_of_EUSART_SetFramingErrorHandler:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _EUSART_SetErrorHandler *****************
  1841 ;; Defined at:
  1842 ;;		line 272 in file "mcc_generated_files/eusart.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1845 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 9
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_EUSART_Initialize
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text16
  1872   00231E                     __ptext16:
  1873                           	callstack 0
  1874   00231E                     _EUSART_SetErrorHandler:
  1875                           	callstack 19
  1876   00231E                     
  1877                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  1878   00231E  C0D3  F0E9         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  1879   002322  C0D4  F0EA         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  1880   002326  0012               	return		;funcret
  1881   002328                     __end_of_EUSART_SetErrorHandler:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _I2C_WriteNBytes *****************
  1885 ;; Defined at:
  1886 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  address         1    wreg     unsigned char 
  1889 ;;  data            2   17[BANK0 ] PTR unsigned char 
  1890 ;;		 -> SetDAC@DAC8574_Data(3), main@red(3), main@dat(3), 
  1891 ;;  len             2   19[BANK0 ] unsigned int 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  address         1   21[BANK0 ] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:        5 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 17
  1910 ;; This function calls:
  1911 ;;		_I2C_Close
  1912 ;;		_I2C_MasterWrite
  1913 ;;		_I2C_Open
  1914 ;;		_I2C_SetAddressNackCallback
  1915 ;;		_I2C_SetBuffer
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;;		_SetDAC
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text17
  1923   001C9C                     __ptext17:
  1924                           	callstack 0
  1925   001C9C                     _I2C_WriteNBytes:
  1926                           	callstack 13
  1927                           
  1928                           ;incstack = 0
  1929                           ;I2C_WriteNBytes@address stored from wreg
  1930   001C9C  0100               	movlb	0	; () banked
  1931   001C9E  6FE8               	movwf	I2C_WriteNBytes@address& (0+255),b
  1932   001CA0                     l4579:
  1933   001CA0  0100               	movlb	0	; () banked
  1934   001CA2  51E8               	movf	I2C_WriteNBytes@address& (0+255),w,b
  1935   001CA4  EC2A  F00C         	call	_I2C_Open
  1936   001CA8  0900               	iorlw	0
  1937   001CAA  B4D8               	btfsc	status,2,c
  1938   001CAC  EF5A  F00E         	goto	u2321
  1939   001CB0  EF5C  F00E         	goto	u2320
  1940   001CB4                     u2321:
  1941   001CB4  EF50  F00E         	goto	l4579
  1942   001CB8                     u2320:
  1943   001CB8                     
  1944                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  1945   001CB8  C0E4  F0D3         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  1946   001CBC  C0E5  F0D4         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  1947   001CC0  C0E6  F0D5         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  1948   001CC4  C0E7  F0D6         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  1949   001CC8  ECAE  F010         	call	_I2C_SetBuffer	;wreg free
  1950   001CCC                     
  1951                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  1952   001CCC  0E00               	movlw	0
  1953   001CCE  0100               	movlb	0	; () banked
  1954   001CD0  6FD8               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
  1955   001CD2  0E00               	movlw	0
  1956   001CD4  6FD9               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
  1957   001CD6  0E00               	movlw	0
  1958   001CD8  6FDA               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
  1959   001CDA  0E00               	movlw	0
  1960   001CDC  6FDB               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
  1961   001CDE  EC0D  F011         	call	_I2C_SetAddressNackCallback	;wreg free
  1962   001CE2                     
  1963                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  1964   001CE2  EC99  F011         	call	_I2C_MasterWrite	;wreg free
  1965   001CE6                     l4587:
  1966   001CE6  EC46  F010         	call	_I2C_Close	;wreg free
  1967   001CEA  06E8               	decf	wreg,f,c
  1968   001CEC  B4D8               	btfsc	status,2,c
  1969   001CEE  EF7B  F00E         	goto	u2331
  1970   001CF2  EF7D  F00E         	goto	u2330
  1971   001CF6                     u2331:
  1972   001CF6  EF73  F00E         	goto	l4587
  1973   001CFA                     u2330:
  1974   001CFA  0012               	return		;funcret
  1975   001CFC                     __end_of_I2C_WriteNBytes:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _I2C_SetAddressNackCallback *****************
  1979 ;; Defined at:
  1980 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  1983 ;;		 -> Absolute function(1), 
  1984 ;;  ptr             2    7[BANK0 ] PTR void 
  1985 ;;		 -> NULL(0), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;Total ram usage:        4 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 10
  2004 ;; This function calls:
  2005 ;;		_I2C_SetCallback
  2006 ;; This function is called by:
  2007 ;;		_I2C_WriteNBytes
  2008 ;;		_I2C_Read1ByteRegister
  2009 ;;		_I2C_Read2ByteRegister
  2010 ;;		_I2C_Write1ByteRegister
  2011 ;;		_I2C_Write2ByteRegister
  2012 ;;		_I2C_ReadDataBlock
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text18
  2017   00221A                     __ptext18:
  2018                           	callstack 0
  2019   00221A                     _I2C_SetAddressNackCallback:
  2020                           	callstack 19
  2021   00221A                     
  2022                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  2023   00221A  C0D8  F0D3         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  2024   00221E  C0D9  F0D4         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  2025   002222  C0DA  F0D5         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  2026   002226  C0DB  F0D6         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  2027   00222A  0E02               	movlw	2
  2028   00222C  EC33  F00D         	call	_I2C_SetCallback
  2029   002230  0012               	return		;funcret
  2030   002232                     __end_of_I2C_SetAddressNackCallback:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _I2C_MasterWrite *****************
  2034 ;; Defined at:
  2035 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      enum E355
  2042 ;; Registers used:
  2043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 16
  2056 ;; This function calls:
  2057 ;;		_I2C_MasterOperation
  2058 ;; This function is called by:
  2059 ;;		_I2C_WriteNBytes
  2060 ;;		_I2C_Read1ByteRegister
  2061 ;;		_I2C_Read2ByteRegister
  2062 ;;		_I2C_Write1ByteRegister
  2063 ;;		_I2C_Write2ByteRegister
  2064 ;;		_I2C_ReadDataBlock
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text19
  2069   002332                     __ptext19:
  2070                           	callstack 0
  2071   002332                     _I2C_MasterWrite:
  2072                           	callstack 13
  2073   002332                     
  2074                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  2075   002332  0E00               	movlw	0
  2076   002334  ECCE  F00E         	call	_I2C_MasterOperation
  2077   002338  0012               	return		;funcret
  2078   00233A                     __end_of_I2C_MasterWrite:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _I2C_ReadNBytes *****************
  2082 ;; Defined at:
  2083 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  address         1    wreg     unsigned char 
  2086 ;;  data            2   17[BANK0 ] PTR unsigned char 
  2087 ;;		 -> main@red2(3), 
  2088 ;;  len             2   19[BANK0 ] unsigned int 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  address         1   21[BANK0 ] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;Total ram usage:        5 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 17
  2107 ;; This function calls:
  2108 ;;		_I2C_Close
  2109 ;;		_I2C_MasterRead
  2110 ;;		_I2C_Open
  2111 ;;		_I2C_SetBuffer
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text20
  2118   001D52                     __ptext20:
  2119                           	callstack 0
  2120   001D52                     _I2C_ReadNBytes:
  2121                           	callstack 13
  2122                           
  2123                           ;incstack = 0
  2124                           ;I2C_ReadNBytes@address stored from wreg
  2125   001D52  0100               	movlb	0	; () banked
  2126   001D54  6FE8               	movwf	I2C_ReadNBytes@address& (0+255),b
  2127   001D56                     l4591:
  2128   001D56  0100               	movlb	0	; () banked
  2129   001D58  51E8               	movf	I2C_ReadNBytes@address& (0+255),w,b
  2130   001D5A  EC2A  F00C         	call	_I2C_Open
  2131   001D5E  0900               	iorlw	0
  2132   001D60  B4D8               	btfsc	status,2,c
  2133   001D62  EFB5  F00E         	goto	u2341
  2134   001D66  EFB7  F00E         	goto	u2340
  2135   001D6A                     u2341:
  2136   001D6A  EFAB  F00E         	goto	l4591
  2137   001D6E                     u2340:
  2138   001D6E                     
  2139                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  2140   001D6E  C0E4  F0D3         	movff	I2C_ReadNBytes@data,I2C_SetBuffer@buffer
  2141   001D72  C0E5  F0D4         	movff	I2C_ReadNBytes@data+1,I2C_SetBuffer@buffer+1
  2142   001D76  C0E6  F0D5         	movff	I2C_ReadNBytes@len,I2C_SetBuffer@bufferSize
  2143   001D7A  C0E7  F0D6         	movff	I2C_ReadNBytes@len+1,I2C_SetBuffer@bufferSize+1
  2144   001D7E  ECAE  F010         	call	_I2C_SetBuffer	;wreg free
  2145   001D82                     
  2146                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  2147   001D82  EC9D  F011         	call	_I2C_MasterRead	;wreg free
  2148   001D86                     l4597:
  2149   001D86  EC46  F010         	call	_I2C_Close	;wreg free
  2150   001D8A  06E8               	decf	wreg,f,c
  2151   001D8C  B4D8               	btfsc	status,2,c
  2152   001D8E  EFCB  F00E         	goto	u2351
  2153   001D92  EFCD  F00E         	goto	u2350
  2154   001D96                     u2351:
  2155   001D96  EFC3  F00E         	goto	l4597
  2156   001D9A                     u2350:
  2157   001D9A  0012               	return		;funcret
  2158   001D9C                     __end_of_I2C_ReadNBytes:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _I2C_Open *****************
  2162 ;; Defined at:
  2163 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  address         1    wreg     unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  address         1    0[BANK0 ] unsigned char 
  2168 ;;  returnValue     1    1[BANK0 ] enum E355
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      enum E355
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;Total ram usage:        2 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 10
  2185 ;; This function calls:
  2186 ;;		_I2C_MasterClearIrq
  2187 ;;		_I2C_MasterOpen
  2188 ;; This function is called by:
  2189 ;;		_I2C_WriteNBytes
  2190 ;;		_I2C_ReadNBytes
  2191 ;;		_I2C_Read1ByteRegister
  2192 ;;		_I2C_Read2ByteRegister
  2193 ;;		_I2C_Write1ByteRegister
  2194 ;;		_I2C_Write2ByteRegister
  2195 ;;		_I2C_ReadDataBlock
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text21
  2200   001854                     __ptext21:
  2201                           	callstack 0
  2202   001854                     _I2C_Open:
  2203                           	callstack 19
  2204                           
  2205                           ;incstack = 0
  2206                           ;I2C_Open@address stored from wreg
  2207   001854  0100               	movlb	0	; () banked
  2208   001856  6FD3               	movwf	I2C_Open@address& (0+255),b
  2209   001858                     
  2210                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  2211   001858  0E01               	movlw	1
  2212   00185A  0100               	movlb	0	; () banked
  2213   00185C  6FD4               	movwf	I2C_Open@returnValue& (0+255),b
  2214   00185E                     
  2215                           ; BSR set to: 0
  2216                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  2217   00185E  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  2218   001860  EF34  F00C         	goto	u2301
  2219   001864  EF36  F00C         	goto	u2300
  2220   001868                     u2301:
  2221   001868  EF71  F00C         	goto	l4491
  2222   00186C                     u2300:
  2223   00186C                     
  2224                           ; BSR set to: 0
  2225                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  2226   00186C  C0D3  F07C         	movff	I2C_Open@address,_I2C_Status+28
  2227   001870                     
  2228                           ; BSR set to: 0
  2229                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  2230   001870  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  2231   001872                     
  2232                           ; BSR set to: 0
  2233                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  2234   001872  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  2235   001874                     
  2236                           ; BSR set to: 0
  2237                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  2238   001874  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  2239   001876                     
  2240                           ; BSR set to: 0
  2241                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  2242   001876  0E0E               	movlw	14
  2243   001878  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  2244   00187A                     
  2245                           ; BSR set to: 0
  2246                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  2247   00187A  0E01               	movlw	1
  2248   00187C  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  2249   00187E  0EF4               	movlw	244
  2250   001880  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  2251   001882                     
  2252                           ; BSR set to: 0
  2253                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  2254   001882  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  2255   001884                     
  2256                           ; BSR set to: 0
  2257                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  2258   001884  0EB2               	movlw	low _I2C_CallbackReturnStop
  2259   001886  6F60               	movwf	_I2C_Status& (0+255),b
  2260   001888  0E23               	movlw	high _I2C_CallbackReturnStop
  2261   00188A  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  2262   00188C                     
  2263                           ; BSR set to: 0
  2264                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  2265   00188C  0E00               	movlw	0
  2266   00188E  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  2267   001890  0E00               	movlw	0
  2268   001892  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  2269   001894                     
  2270                           ; BSR set to: 0
  2271                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  2272   001894  0EB2               	movlw	low _I2C_CallbackReturnStop
  2273   001896  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  2274   001898  0E23               	movlw	high _I2C_CallbackReturnStop
  2275   00189A  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  2276   00189C                     
  2277                           ; BSR set to: 0
  2278                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  2279   00189C  0E00               	movlw	0
  2280   00189E  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  2281   0018A0  0E00               	movlw	0
  2282   0018A2  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  2283   0018A4                     
  2284                           ; BSR set to: 0
  2285                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  2286   0018A4  0EB2               	movlw	low _I2C_CallbackReturnStop
  2287   0018A6  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  2288   0018A8  0E23               	movlw	high _I2C_CallbackReturnStop
  2289   0018AA  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  2290   0018AC                     
  2291                           ; BSR set to: 0
  2292                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  2293   0018AC  0E00               	movlw	0
  2294   0018AE  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  2295   0018B0  0E00               	movlw	0
  2296   0018B2  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  2297   0018B4                     
  2298                           ; BSR set to: 0
  2299                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  2300   0018B4  0EB2               	movlw	low _I2C_CallbackReturnStop
  2301   0018B6  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  2302   0018B8  0E23               	movlw	high _I2C_CallbackReturnStop
  2303   0018BA  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  2304   0018BC                     
  2305                           ; BSR set to: 0
  2306                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  2307   0018BC  0E00               	movlw	0
  2308   0018BE  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  2309   0018C0  0E00               	movlw	0
  2310   0018C2  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  2311   0018C4                     
  2312                           ; BSR set to: 0
  2313                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  2314   0018C4  0EAE               	movlw	low _I2C_CallbackReturnReset
  2315   0018C6  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  2316   0018C8  0E23               	movlw	high _I2C_CallbackReturnReset
  2317   0018CA  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  2318   0018CC                     
  2319                           ; BSR set to: 0
  2320                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  2321   0018CC  0E00               	movlw	0
  2322   0018CE  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  2323   0018D0  0E00               	movlw	0
  2324   0018D2  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  2325   0018D4                     
  2326                           ; BSR set to: 0
  2327                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  2328   0018D4  ECE5  F011         	call	_I2C_MasterClearIrq	;wreg free
  2329   0018D8                     
  2330                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  2331   0018D8  ECC0  F010         	call	_I2C_MasterOpen	;wreg free
  2332   0018DC                     
  2333                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  2334   0018DC  0E00               	movlw	0
  2335   0018DE  0100               	movlb	0	; () banked
  2336   0018E0  6FD4               	movwf	I2C_Open@returnValue& (0+255),b
  2337   0018E2                     l4491:
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  2341   0018E2  51D4               	movf	I2C_Open@returnValue& (0+255),w,b
  2342   0018E4                     
  2343                           ; BSR set to: 0
  2344   0018E4  0012               	return		;funcret
  2345   0018E6                     __end_of_I2C_Open:
  2346                           	callstack 0
  2347                           
  2348 ;; *************** function _I2C_MasterOpen *****************
  2349 ;; Defined at:
  2350 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      _Bool 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; Hardware stack levels required when called: 9
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_I2C_Open
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text22
  2379   002180                     __ptext22:
  2380                           	callstack 0
  2381   002180                     _I2C_MasterOpen:
  2382                           	callstack 19
  2383   002180                     
  2384                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  2385   002180  BAC6               	btfsc	198,5,c	;volatile
  2386   002182  EFC5  F010         	goto	u2271
  2387   002186  EFC7  F010         	goto	u2270
  2388   00218A                     u2271:
  2389   00218A  EFD0  F010         	goto	l378
  2390   00218E                     u2270:
  2391   00218E                     
  2392                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  2393   00218E  0E00               	movlw	0
  2394   002190  6EC7               	movwf	199,c	;volatile
  2395                           
  2396                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  2397   002192  0E08               	movlw	8
  2398   002194  6EC6               	movwf	198,c	;volatile
  2399                           
  2400                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  2401   002196  0E00               	movlw	0
  2402   002198  6EC5               	movwf	197,c	;volatile
  2403                           
  2404                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  2405   00219A  0E13               	movlw	19
  2406   00219C  6EC8               	movwf	200,c	;volatile
  2407   00219E                     
  2408                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  2409   00219E  8AC6               	bsf	198,5,c	;volatile
  2410   0021A0                     l378:
  2411   0021A0  0012               	return		;funcret
  2412   0021A2                     __end_of_I2C_MasterOpen:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _I2C_MasterRead *****************
  2416 ;; Defined at:
  2417 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      enum E355
  2424 ;; Registers used:
  2425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 16
  2438 ;; This function calls:
  2439 ;;		_I2C_MasterOperation
  2440 ;; This function is called by:
  2441 ;;		_I2C_ReadNBytes
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text23
  2446   00233A                     __ptext23:
  2447                           	callstack 0
  2448   00233A                     _I2C_MasterRead:
  2449                           	callstack 13
  2450   00233A                     
  2451                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  2452   00233A  0E01               	movlw	1
  2453   00233C  ECCE  F00E         	call	_I2C_MasterOperation
  2454   002340  0012               	return		;funcret
  2455   002342                     __end_of_I2C_MasterRead:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _I2C_MasterOperation *****************
  2459 ;; Defined at:
  2460 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  read            1    wreg     _Bool 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  read            1   15[BANK0 ] _Bool 
  2465 ;;  returnValue     1   16[BANK0 ] enum E355
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      enum E355
  2468 ;; Registers used:
  2469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;Total ram usage:        2 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 15
  2482 ;; This function calls:
  2483 ;;		_I2C_MasterStart
  2484 ;;		_I2C_Poller
  2485 ;; This function is called by:
  2486 ;;		_I2C_MasterRead
  2487 ;;		_I2C_MasterWrite
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text24
  2492   001D9C                     __ptext24:
  2493                           	callstack 0
  2494   001D9C                     _I2C_MasterOperation:
  2495                           	callstack 13
  2496                           
  2497                           ;incstack = 0
  2498                           ;I2C_MasterOperation@read stored from wreg
  2499   001D9C  0100               	movlb	0	; () banked
  2500   001D9E  6FE2               	movwf	I2C_MasterOperation@read& (0+255),b
  2501   001DA0                     
  2502                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  2503   001DA0  0E01               	movlw	1
  2504   001DA2  0100               	movlb	0	; () banked
  2505   001DA4  6FE3               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  2506   001DA6                     
  2507                           ; BSR set to: 0
  2508                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  2509   001DA6  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  2510   001DA8  EFD8  F00E         	goto	u2281
  2511   001DAC  EFDA  F00E         	goto	u2280
  2512   001DB0                     u2281:
  2513   001DB0  EFEF  F00E         	goto	l4429
  2514   001DB4                     u2280:
  2515   001DB4                     
  2516                           ; BSR set to: 0
  2517                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  2518   001DB4  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  2519   001DB6                     
  2520                           ; BSR set to: 0
  2521                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  2522   001DB6  0E00               	movlw	0
  2523   001DB8  6FE3               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  2524   001DBA                     
  2525                           ; BSR set to: 0
  2526                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  2527   001DBA  51E2               	movf	I2C_MasterOperation@read& (0+255),w,b
  2528   001DBC  B4D8               	btfsc	status,2,c
  2529   001DBE  EFE3  F00E         	goto	u2291
  2530   001DC2  EFE5  F00E         	goto	u2290
  2531   001DC6                     u2291:
  2532   001DC6  EFE9  F00E         	goto	l4423
  2533   001DCA                     u2290:
  2534   001DCA                     
  2535                           ; BSR set to: 0
  2536                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  2537   001DCA  0E01               	movlw	1
  2538   001DCC  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  2539                           
  2540                           ;mcc_generated_files/i2c_master.c: 235:         }
  2541   001DCE  EFEB  F00E         	goto	l4425
  2542   001DD2                     l4423:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  2546   001DD2  0E02               	movlw	2
  2547   001DD4  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  2548   001DD6                     l4425:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  2552   001DD6  ECDF  F011         	call	_I2C_MasterStart	;wreg free
  2553   001DDA                     
  2554                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  2555   001DDA  ECF0  F010         	call	_I2C_Poller	;wreg free
  2556   001DDE                     l4429:
  2557                           
  2558                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  2559   001DDE  0100               	movlb	0	; () banked
  2560   001DE0  51E3               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
  2561   001DE2                     
  2562                           ; BSR set to: 0
  2563   001DE2  0012               	return		;funcret
  2564   001DE4                     __end_of_I2C_MasterOperation:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _I2C_Poller *****************
  2568 ;; Defined at:
  2569 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 14
  2590 ;; This function calls:
  2591 ;;		_I2C_MasterFsm
  2592 ;;		_I2C_MasterWaitForEvent
  2593 ;; This function is called by:
  2594 ;;		_I2C_MasterOperation
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text25
  2599   0021E0                     __ptext25:
  2600                           	callstack 0
  2601   0021E0                     _I2C_Poller:
  2602                           	callstack 13
  2603   0021E0                     
  2604                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  2605   0021E0  EFF6  F010         	goto	l4397
  2606   0021E4                     l4393:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  2610   0021E4  EC42  F011         	call	_I2C_MasterWaitForEvent	;wreg free
  2611   0021E8                     
  2612                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  2613   0021E8  ECAB  F00D         	call	_I2C_MasterFsm	;wreg free
  2614   0021EC                     l4397:
  2615                           
  2616                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  2617   0021EC  0100               	movlb	0	; () banked
  2618   0021EE  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  2619   0021F0  EFFC  F010         	goto	u2261
  2620   0021F4  EFFE  F010         	goto	u2260
  2621   0021F8                     u2261:
  2622   0021F8  EFF2  F010         	goto	l4393
  2623   0021FC                     u2260:
  2624   0021FC                     
  2625                           ; BSR set to: 0
  2626   0021FC  0012               	return		;funcret
  2627   0021FE                     __end_of_I2C_Poller:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _I2C_MasterWaitForEvent *****************
  2631 ;; Defined at:
  2632 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		None
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 9
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_I2C_Poller
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text26
  2661   002284                     __ptext26:
  2662                           	callstack 0
  2663   002284                     _I2C_MasterWaitForEvent:
  2664                           	callstack 17
  2665   002284                     l435:
  2666                           
  2667                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  2668   002284  A69E               	btfss	158,3,c	;volatile
  2669   002286  EF47  F011         	goto	u2221
  2670   00228A  EF49  F011         	goto	u2220
  2671   00228E                     u2221:
  2672   00228E  EF42  F011         	goto	l435
  2673   002292                     u2220:
  2674   002292  0012               	return		;funcret
  2675   002294                     __end_of_I2C_MasterWaitForEvent:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function _I2C_MasterFsm *****************
  2679 ;; Defined at:
  2680 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;Total ram usage:        2 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 13
  2701 ;; This function calls:
  2702 ;;		_I2C_DO_ADDRESS_NACK
  2703 ;;		_I2C_DO_IDLE
  2704 ;;		_I2C_DO_RCEN
  2705 ;;		_I2C_DO_RESET
  2706 ;;		_I2C_DO_RX
  2707 ;;		_I2C_DO_RX_ACK
  2708 ;;		_I2C_DO_RX_NACK_RESTART
  2709 ;;		_I2C_DO_RX_NACK_STOP
  2710 ;;		_I2C_DO_SEND_ADR_READ
  2711 ;;		_I2C_DO_SEND_ADR_WRITE
  2712 ;;		_I2C_DO_SEND_RESTART
  2713 ;;		_I2C_DO_SEND_RESTART_READ
  2714 ;;		_I2C_DO_SEND_RESTART_WRITE
  2715 ;;		_I2C_DO_SEND_STOP
  2716 ;;		_I2C_DO_TX
  2717 ;;		_I2C_DO_TX_EMPTY
  2718 ;;		_I2C_MasterClearIrq
  2719 ;;		_I2C_MasterIsNack
  2720 ;; This function is called by:
  2721 ;;		_I2C_Poller
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text27
  2726   001B56                     __ptext27:
  2727                           	callstack 0
  2728   001B56                     _I2C_MasterFsm:
  2729                           	callstack 13
  2730   001B56                     
  2731                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  2732   001B56  ECE5  F011         	call	_I2C_MasterClearIrq	;wreg free
  2733   001B5A                     
  2734                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  2735   001B5A  0100               	movlb	0	; () banked
  2736   001B5C  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  2737   001B5E  EFB3  F00D         	goto	u2231
  2738   001B62  EFB5  F00D         	goto	u2230
  2739   001B66                     u2231:
  2740   001B66  EFC2  F00D         	goto	l4387
  2741   001B6A                     u2230:
  2742   001B6A                     
  2743                           ; BSR set to: 0
  2744   001B6A  EC2F  F011         	call	_I2C_MasterIsNack	;wreg free
  2745   001B6E  0900               	iorlw	0
  2746   001B70  B4D8               	btfsc	status,2,c
  2747   001B72  EFBD  F00D         	goto	u2241
  2748   001B76  EFBF  F00D         	goto	u2240
  2749   001B7A                     u2241:
  2750   001B7A  EFC2  F00D         	goto	l4387
  2751   001B7E                     u2240:
  2752   001B7E                     
  2753                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  2754   001B7E  0E0F               	movlw	15
  2755   001B80  0100               	movlb	0	; () banked
  2756   001B82  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  2757   001B84                     l4387:
  2758                           
  2759                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  2760   001B84  0100               	movlb	0	; () banked
  2761   001B86  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  2762   001B88  0D02               	mullw	2
  2763   001B8A  0E01               	movlw	low _i2c_fsmStateTable
  2764   001B8C  24F3               	addwf	243,w,c
  2765   001B8E  6EF6               	movwf	tblptrl,c
  2766   001B90  0E10               	movlw	high _i2c_fsmStateTable
  2767   001B92  20F4               	addwfc	244,w,c
  2768   001B94  6EF7               	movwf	tblptrh,c
  2769   001B96                     	if	1	;There are 3 active tblptr bytes
  2770   001B96  6AF8               	clrf	tblptru,c
  2771   001B98  0E00               	movlw	low (__mediumconst shr (0+16))
  2772   001B9A  22F8               	addwfc	tblptru,f,c
  2773   001B9C                     	endif
  2774   001B9C  0009               	tblrd		*+
  2775   001B9E  CFF5 F0E0          	movff	tablat,??_I2C_MasterFsm
  2776   001BA2  0009               	tblrd		*+
  2777   001BA4  CFF5 F0E1          	movff	tablat,??_I2C_MasterFsm+1
  2778   001BA8  D802               	call	u2258
  2779   001BAA  EFE0  F00D         	goto	u2259
  2780   001BAE                     u2258:
  2781   001BAE  0005               	push	
  2782   001BB0  6EFA               	movwf	pclath,c
  2783   001BB2  51E0               	movf	??_I2C_MasterFsm& (0+255),w,b
  2784   001BB4  6EFD               	movwf	tosl,c
  2785   001BB6  51E1               	movf	(??_I2C_MasterFsm+1)& (0+255),w,b
  2786   001BB8  6EFE               	movwf	tosh,c
  2787   001BBA  6AFF               	clrf	tosu,c
  2788   001BBC  50FA               	movf	pclath,w,c
  2789   001BBE  0012               	return		;indir
  2790   001BC0                     u2259:
  2791   001BC0  0100               	movlb	0	; () banked
  2792   001BC2  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  2793   001BC4                     
  2794                           ; BSR set to: 0
  2795   001BC4  0012               	return		;funcret
  2796   001BC6                     __end_of_I2C_MasterFsm:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  2800 ;; Defined at:
  2801 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      enum E2846
  2808 ;; Registers used:
  2809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        2 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 12
  2822 ;; This function calls:
  2823 ;;		Absolute function
  2824 ;;		_I2C_CallbackReturnReset
  2825 ;;		_I2C_CallbackReturnStop
  2826 ;;		_I2C_DO_SEND_RESTART
  2827 ;;		_I2C_DO_SEND_STOP
  2828 ;;		_rd1RegCompleteHandler
  2829 ;;		_rd2RegCompleteHandler
  2830 ;;		_rdBlkRegCompleteHandler
  2831 ;;		_wr1RegCompleteHandler
  2832 ;;		_wr2RegCompleteHandler
  2833 ;; This function is called by:
  2834 ;;		_I2C_MasterFsm
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text28
  2839   001C34                     __ptext28:
  2840                           	callstack 0
  2841   001C34                     _I2C_DO_ADDRESS_NACK:
  2842                           	callstack 13
  2843   001C34                     
  2844                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  2845   001C34  0100               	movlb	0	; () banked
  2846   001C36  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  2847   001C38                     
  2848                           ; BSR set to: 0
  2849                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  2850   001C38  0E02               	movlw	2
  2851   001C3A  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  2852                           
  2853                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  2854   001C3C  EF28  F00E         	goto	l4371
  2855   001C40                     l4361:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  2859   001C40  ECB1  F011         	call	_I2C_DO_SEND_RESTART	;wreg free
  2860   001C44  EF4D  F00E         	goto	l357
  2861   001C48                     l4365:
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  2865   001C48  ECAD  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  2866   001C4C  EF4D  F00E         	goto	l357
  2867   001C50                     l4371:
  2868                           
  2869                           ; BSR set to: 0
  2870   001C50  C070  F0DC         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  2871   001C54  C071  F0DD         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  2872   001C58  D802               	call	u2218
  2873   001C5A  EF38  F00E         	goto	u2219
  2874   001C5E                     u2218:
  2875   001C5E  0005               	push	
  2876   001C60  6EFA               	movwf	pclath,c
  2877   001C62  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  2878   001C64  6EFD               	movwf	tosl,c
  2879   001C66  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  2880   001C68  6EFE               	movwf	tosh,c
  2881   001C6A  6AFF               	clrf	tosu,c
  2882   001C6C  50FA               	movf	pclath,w,c
  2883   001C6E  0012               	return		;indir
  2884   001C70                     u2219:
  2885   001C70  0100               	movlb	0	; () banked
  2886   001C72  6FDE               	movwf	??_I2C_DO_ADDRESS_NACK& (0+255),b
  2887   001C74  6BDF               	clrf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),b
  2888                           
  2889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2890                           ; Switch size 1, requested type "simple"
  2891                           ; Number of cases is 1, Range of values is 0 to 0
  2892                           ; switch strategies available:
  2893                           ; Name         Instructions Cycles
  2894                           ; simple_byte            4     3 (average)
  2895                           ;	Chosen strategy is simple_byte
  2896   001C76  51DF               	movf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),w,b
  2897   001C78  0A00               	xorlw	0	; case 0
  2898   001C7A  B4D8               	btfsc	status,2,c
  2899   001C7C  EF42  F00E         	goto	l4881
  2900   001C80  EF24  F00E         	goto	l4365
  2901   001C84                     l4881:
  2902                           
  2903                           ; BSR set to: 0
  2904                           ; Switch size 1, requested type "simple"
  2905                           ; Number of cases is 2, Range of values is 2 to 3
  2906                           ; switch strategies available:
  2907                           ; Name         Instructions Cycles
  2908                           ; simple_byte            7     4 (average)
  2909                           ;	Chosen strategy is simple_byte
  2910   001C84  51DE               	movf	??_I2C_DO_ADDRESS_NACK& (0+255),w,b
  2911   001C86  0A02               	xorlw	2	; case 2
  2912   001C88  B4D8               	btfsc	status,2,c
  2913   001C8A  EF20  F00E         	goto	l4361
  2914   001C8E  0A01               	xorlw	1	; case 3
  2915   001C90  B4D8               	btfsc	status,2,c
  2916   001C92  EF20  F00E         	goto	l4361
  2917   001C96  EF24  F00E         	goto	l4365
  2918   001C9A                     l357:
  2919   001C9A  0012               	return		;funcret
  2920   001C9C                     __end_of_I2C_DO_ADDRESS_NACK:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function _I2C_DO_RESET *****************
  2924 ;; Defined at:
  2925 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      enum E2846
  2932 ;; Registers used:
  2933 ;;		wreg, status,2
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 9
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_I2C_MasterFsm
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text29
  2954   0022B4                     __ptext29:
  2955                           	callstack 0
  2956   0022B4                     _I2C_DO_RESET:
  2957                           	callstack 16
  2958   0022B4                     
  2959                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  2960   0022B4  0100               	movlb	0	; () banked
  2961   0022B6  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  2962   0022B8                     
  2963                           ; BSR set to: 0
  2964                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  2965   0022B8  0E00               	movlw	0
  2966   0022BA  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  2967   0022BC                     
  2968                           ; BSR set to: 0
  2969                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  2970   0022BC  0E0E               	movlw	14
  2971   0022BE                     
  2972                           ; BSR set to: 0
  2973   0022BE  0012               	return		;funcret
  2974   0022C0                     __end_of_I2C_DO_RESET:
  2975                           	callstack 0
  2976                           
  2977 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  2978 ;; Defined at:
  2979 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      enum E2846
  2986 ;; Registers used:
  2987 ;;		wreg, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 10
  3000 ;; This function calls:
  3001 ;;		_I2C_MasterSendNack
  3002 ;; This function is called by:
  3003 ;;		_I2C_DO_RX
  3004 ;;		_I2C_MasterFsm
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text30
  3009   002342                     __ptext30:
  3010                           	callstack 0
  3011   002342                     _I2C_DO_RX_NACK_RESTART:
  3012                           	callstack 15
  3013   002342                     
  3014                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  3015   002342  ECC3  F011         	call	_I2C_MasterSendNack	;wreg free
  3016   002346                     
  3017                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  3018   002346  0E09               	movlw	9
  3019   002348  0012               	return		;funcret
  3020   00234A                     __end_of_I2C_DO_RX_NACK_RESTART:
  3021                           	callstack 0
  3022                           
  3023 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3024 ;; Defined at:
  3025 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      enum E2846
  3032 ;; Registers used:
  3033 ;;		wreg, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; Hardware stack levels required when called: 10
  3046 ;; This function calls:
  3047 ;;		_I2C_MasterSendNack
  3048 ;; This function is called by:
  3049 ;;		_I2C_DO_RX
  3050 ;;		_I2C_MasterFsm
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text31
  3055   00234A                     __ptext31:
  3056                           	callstack 0
  3057   00234A                     _I2C_DO_RX_NACK_STOP:
  3058                           	callstack 15
  3059   00234A                     
  3060                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  3061   00234A  ECC3  F011         	call	_I2C_MasterSendNack	;wreg free
  3062   00234E                     
  3063                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  3064   00234E  0E0A               	movlw	10
  3065   002350  0012               	return		;funcret
  3066   002352                     __end_of_I2C_DO_RX_NACK_STOP:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _I2C_DO_RX_ACK *****************
  3070 ;; Defined at:
  3071 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      enum E2846
  3078 ;; Registers used:
  3079 ;;		wreg, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 10
  3092 ;; This function calls:
  3093 ;;		_I2C_MasterSendAck
  3094 ;; This function is called by:
  3095 ;;		_I2C_MasterFsm
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text32
  3100   002352                     __ptext32:
  3101                           	callstack 0
  3102   002352                     _I2C_DO_RX_ACK:
  3103                           	callstack 15
  3104   002352                     
  3105                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  3106   002352  ECC0  F011         	call	_I2C_MasterSendAck	;wreg free
  3107   002356                     
  3108                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  3109   002356  0E05               	movlw	5
  3110   002358  0012               	return		;funcret
  3111   00235A                     __end_of_I2C_DO_RX_ACK:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _I2C_DO_SEND_STOP *****************
  3115 ;; Defined at:
  3116 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      enum E2846
  3123 ;; Registers used:
  3124 ;;		wreg, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;Total ram usage:        0 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 10
  3137 ;; This function calls:
  3138 ;;		_I2C_MasterStop
  3139 ;; This function is called by:
  3140 ;;		_I2C_DO_TX
  3141 ;;		_I2C_DO_TX_EMPTY
  3142 ;;		_I2C_DO_ADDRESS_NACK
  3143 ;;		_I2C_MasterFsm
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text33
  3148   00235A                     __ptext33:
  3149                           	callstack 0
  3150   00235A                     _I2C_DO_SEND_STOP:
  3151                           	callstack 14
  3152   00235A                     
  3153                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  3154   00235A  ECDB  F011         	call	_I2C_MasterStop	;wreg free
  3155   00235E                     
  3156                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  3157   00235E  0E00               	movlw	0
  3158   002360  0012               	return		;funcret
  3159   002362                     __end_of_I2C_DO_SEND_STOP:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3163 ;; Defined at:
  3164 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      enum E2846
  3171 ;; Registers used:
  3172 ;;		wreg, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 10
  3185 ;; This function calls:
  3186 ;;		_I2C_MasterEnableRestart
  3187 ;; This function is called by:
  3188 ;;		_I2C_DO_TX_EMPTY
  3189 ;;		_I2C_DO_ADDRESS_NACK
  3190 ;;		_I2C_MasterFsm
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text34
  3195   002362                     __ptext34:
  3196                           	callstack 0
  3197   002362                     _I2C_DO_SEND_RESTART:
  3198                           	callstack 14
  3199   002362                     
  3200                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  3201   002362  ECDD  F011         	call	_I2C_MasterEnableRestart	;wreg free
  3202   002366                     
  3203                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  3204   002366  0E01               	movlw	1
  3205   002368  0012               	return		;funcret
  3206   00236A                     __end_of_I2C_DO_SEND_RESTART:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  3210 ;; Defined at:
  3211 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      enum E2846
  3218 ;; Registers used:
  3219 ;;		wreg, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 10
  3232 ;; This function calls:
  3233 ;;		_I2C_MasterEnableRestart
  3234 ;; This function is called by:
  3235 ;;		_I2C_DO_TX
  3236 ;;		_I2C_MasterFsm
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text35
  3241   00236A                     __ptext35:
  3242                           	callstack 0
  3243   00236A                     _I2C_DO_SEND_RESTART_WRITE:
  3244                           	callstack 14
  3245   00236A                     
  3246                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  3247   00236A  ECDD  F011         	call	_I2C_MasterEnableRestart	;wreg free
  3248   00236E                     
  3249                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  3250   00236E  0E02               	movlw	2
  3251   002370  0012               	return		;funcret
  3252   002372                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  3256 ;; Defined at:
  3257 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      enum E2846
  3264 ;; Registers used:
  3265 ;;		wreg, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;Total ram usage:        0 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 10
  3278 ;; This function calls:
  3279 ;;		_I2C_MasterEnableRestart
  3280 ;; This function is called by:
  3281 ;;		_I2C_DO_TX
  3282 ;;		_I2C_MasterFsm
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text36
  3287   002372                     __ptext36:
  3288                           	callstack 0
  3289   002372                     _I2C_DO_SEND_RESTART_READ:
  3290                           	callstack 14
  3291   002372                     
  3292                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  3293   002372  ECDD  F011         	call	_I2C_MasterEnableRestart	;wreg free
  3294   002376                     
  3295                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  3296   002376  0E01               	movlw	1
  3297   002378  0012               	return		;funcret
  3298   00237A                     __end_of_I2C_DO_SEND_RESTART_READ:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function _I2C_DO_RCEN *****************
  3302 ;; Defined at:
  3303 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      enum E2846
  3310 ;; Registers used:
  3311 ;;		wreg, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;Total ram usage:        0 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 10
  3324 ;; This function calls:
  3325 ;;		_I2C_MasterStartRx
  3326 ;; This function is called by:
  3327 ;;		_I2C_MasterFsm
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text37
  3332   0022C0                     __ptext37:
  3333                           	callstack 0
  3334   0022C0                     _I2C_DO_RCEN:
  3335                           	callstack 15
  3336   0022C0                     
  3337                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  3338   0022C0  0100               	movlb	0	; () banked
  3339   0022C2  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  3340   0022C4                     
  3341                           ; BSR set to: 0
  3342                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  3343   0022C4  ECD5  F011         	call	_I2C_MasterStartRx	;wreg free
  3344   0022C8                     
  3345                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  3346   0022C8  0E04               	movlw	4
  3347   0022CA  0012               	return		;funcret
  3348   0022CC                     __end_of_I2C_DO_RCEN:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _I2C_DO_RX *****************
  3352 ;; Defined at:
  3353 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      enum E2846
  3360 ;; Registers used:
  3361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 12
  3374 ;; This function calls:
  3375 ;;		Absolute function
  3376 ;;		_I2C_CallbackReturnReset
  3377 ;;		_I2C_CallbackReturnStop
  3378 ;;		_I2C_DO_RX_NACK_RESTART
  3379 ;;		_I2C_DO_RX_NACK_STOP
  3380 ;;		_I2C_MasterGetRxData
  3381 ;;		_I2C_MasterSendAck
  3382 ;;		_rd1RegCompleteHandler
  3383 ;;		_rd2RegCompleteHandler
  3384 ;;		_rdBlkRegCompleteHandler
  3385 ;;		_wr1RegCompleteHandler
  3386 ;;		_wr2RegCompleteHandler
  3387 ;; This function is called by:
  3388 ;;		_I2C_MasterFsm
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text38
  3393   001716                     __ptext38:
  3394                           	callstack 0
  3395   001716                     _I2C_DO_RX:
  3396                           	callstack 13
  3397   001716                     
  3398                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  3399   001716  ECD3  F011         	call	_I2C_MasterGetRxData	;wreg free
  3400   00171A  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  3401   00171E  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  3402   001722  6EDF               	movwf	indf2,c
  3403   001724  0100               	movlb	0	; () banked
  3404   001726  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  3405   001728  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  3406   00172A                     
  3407                           ; BSR set to: 0
  3408                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  3409   00172A  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  3410   00172C  A0D8               	btfss	status,0,c
  3411   00172E  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  3412   001730  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  3413   001732  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  3414   001734  B4D8               	btfsc	status,2,c
  3415   001736  EF9F  F00B         	goto	u2181
  3416   00173A  EFA1  F00B         	goto	u2180
  3417   00173E                     u2181:
  3418   00173E  EFA6  F00B         	goto	l294
  3419   001742                     u2180:
  3420   001742                     
  3421                           ; BSR set to: 0
  3422                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  3423   001742  ECC0  F011         	call	_I2C_MasterSendAck	;wreg free
  3424   001746                     
  3425                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  3426   001746  0E05               	movlw	5
  3427   001748  EFDE  F00B         	goto	l295
  3428   00174C                     l294:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  3432   00174C  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  3433                           
  3434                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  3435   00174E  EFB1  F00B         	goto	l4305
  3436   001752                     l4295:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  3440   001752  ECA1  F011         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  3441   001756  EFDE  F00B         	goto	l295
  3442   00175A                     l4299:
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  3446   00175A  ECA5  F011         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  3447   00175E  EFDE  F00B         	goto	l295
  3448   001762                     l4305:
  3449                           
  3450                           ; BSR set to: 0
  3451   001762  C06C  F0DC         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  3452   001766  C06D  F0DD         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  3453   00176A  D802               	call	u2198
  3454   00176C  EFC1  F00B         	goto	u2199
  3455   001770                     u2198:
  3456   001770  0005               	push	
  3457   001772  6EFA               	movwf	pclath,c
  3458   001774  5160               	movf	_I2C_Status& (0+255),w,b
  3459   001776  6EFD               	movwf	tosl,c
  3460   001778  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  3461   00177A  6EFE               	movwf	tosh,c
  3462   00177C  6AFF               	clrf	tosu,c
  3463   00177E  50FA               	movf	pclath,w,c
  3464   001780  0012               	return		;indir
  3465   001782                     u2199:
  3466   001782  0100               	movlb	0	; () banked
  3467   001784  6FDE               	movwf	??_I2C_DO_RX& (0+255),b
  3468   001786  6BDF               	clrf	(??_I2C_DO_RX+1)& (0+255),b
  3469                           
  3470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3471                           ; Switch size 1, requested type "simple"
  3472                           ; Number of cases is 1, Range of values is 0 to 0
  3473                           ; switch strategies available:
  3474                           ; Name         Instructions Cycles
  3475                           ; simple_byte            4     3 (average)
  3476                           ;	Chosen strategy is simple_byte
  3477   001788  51DF               	movf	(??_I2C_DO_RX+1)& (0+255),w,b
  3478   00178A  0A00               	xorlw	0	; case 0
  3479   00178C  B4D8               	btfsc	status,2,c
  3480   00178E  EFCB  F00B         	goto	l4883
  3481   001792  EFAD  F00B         	goto	l4299
  3482   001796                     l4883:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ; Switch size 1, requested type "simple"
  3486                           ; Number of cases is 4, Range of values is 1 to 4
  3487                           ; switch strategies available:
  3488                           ; Name         Instructions Cycles
  3489                           ; simple_byte           13     7 (average)
  3490                           ;	Chosen strategy is simple_byte
  3491   001796  51DE               	movf	??_I2C_DO_RX& (0+255),w,b
  3492   001798  0A01               	xorlw	1	; case 1
  3493   00179A  B4D8               	btfsc	status,2,c
  3494   00179C  EFAD  F00B         	goto	l4299
  3495   0017A0  0A03               	xorlw	3	; case 2
  3496   0017A2  B4D8               	btfsc	status,2,c
  3497   0017A4  EFA9  F00B         	goto	l4295
  3498   0017A8  0A01               	xorlw	1	; case 3
  3499   0017AA  B4D8               	btfsc	status,2,c
  3500   0017AC  EFA9  F00B         	goto	l4295
  3501   0017B0  0A07               	xorlw	7	; case 4
  3502   0017B2  B4D8               	btfsc	status,2,c
  3503   0017B4  EFAD  F00B         	goto	l4299
  3504   0017B8  EFAD  F00B         	goto	l4299
  3505   0017BC                     l295:
  3506   0017BC  0012               	return		;funcret
  3507   0017BE                     __end_of_I2C_DO_RX:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _I2C_DO_TX *****************
  3511 ;; Defined at:
  3512 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      enum E2846
  3519 ;; Registers used:
  3520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;Total ram usage:        2 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 12
  3533 ;; This function calls:
  3534 ;;		Absolute function
  3535 ;;		_I2C_CallbackReturnReset
  3536 ;;		_I2C_CallbackReturnStop
  3537 ;;		_I2C_DO_SEND_RESTART_READ
  3538 ;;		_I2C_DO_SEND_RESTART_WRITE
  3539 ;;		_I2C_DO_SEND_STOP
  3540 ;;		_I2C_MasterIsNack
  3541 ;;		_I2C_MasterSendTxData
  3542 ;;		_rd1RegCompleteHandler
  3543 ;;		_rd2RegCompleteHandler
  3544 ;;		_rdBlkRegCompleteHandler
  3545 ;;		_wr1RegCompleteHandler
  3546 ;;		_wr2RegCompleteHandler
  3547 ;; This function is called by:
  3548 ;;		_I2C_MasterFsm
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text39
  3553   001594                     __ptext39:
  3554                           	callstack 0
  3555   001594                     _I2C_DO_TX:
  3556                           	callstack 13
  3557   001594                     
  3558                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  3559   001594  EC2F  F011         	call	_I2C_MasterIsNack	;wreg free
  3560   001598  0900               	iorlw	0
  3561   00159A  B4D8               	btfsc	status,2,c
  3562   00159C  EFD2  F00A         	goto	u2151
  3563   0015A0  EFD4  F00A         	goto	u2150
  3564   0015A4                     u2151:
  3565   0015A4  EF10  F00B         	goto	l278
  3566   0015A8                     u2150:
  3567   0015A8  EFE2  F00A         	goto	l4265
  3568   0015AC                     l4251:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  3572   0015AC  ECB9  F011         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  3573   0015B0  EF2C  F00B         	goto	l281
  3574   0015B4                     l4255:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  3578   0015B4  ECB5  F011         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  3579   0015B8  EF2C  F00B         	goto	l281
  3580   0015BC                     l4259:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  3584   0015BC  ECAD  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  3585   0015C0  EF2C  F00B         	goto	l281
  3586   0015C4                     l4265:
  3587   0015C4  C072  F0DC         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  3588   0015C8  C073  F0DD         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  3589   0015CC  D802               	call	u2168
  3590   0015CE  EFF3  F00A         	goto	u2169
  3591   0015D2                     u2168:
  3592   0015D2  0005               	push	
  3593   0015D4  6EFA               	movwf	pclath,c
  3594   0015D6  0100               	movlb	0	; () banked
  3595   0015D8  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  3596   0015DA  6EFD               	movwf	tosl,c
  3597   0015DC  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  3598   0015DE  6EFE               	movwf	tosh,c
  3599   0015E0  6AFF               	clrf	tosu,c
  3600   0015E2  50FA               	movf	pclath,w,c
  3601   0015E4  0012               	return		;indir
  3602   0015E6                     u2169:
  3603   0015E6  0100               	movlb	0	; () banked
  3604   0015E8  6FDE               	movwf	??_I2C_DO_TX& (0+255),b
  3605   0015EA  6BDF               	clrf	(??_I2C_DO_TX+1)& (0+255),b
  3606                           
  3607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3608                           ; Switch size 1, requested type "simple"
  3609                           ; Number of cases is 1, Range of values is 0 to 0
  3610                           ; switch strategies available:
  3611                           ; Name         Instructions Cycles
  3612                           ; simple_byte            4     3 (average)
  3613                           ;	Chosen strategy is simple_byte
  3614   0015EC  51DF               	movf	(??_I2C_DO_TX+1)& (0+255),w,b
  3615   0015EE  0A00               	xorlw	0	; case 0
  3616   0015F0  B4D8               	btfsc	status,2,c
  3617   0015F2  EFFD  F00A         	goto	l4885
  3618   0015F6  EFDE  F00A         	goto	l4259
  3619   0015FA                     l4885:
  3620                           
  3621                           ; BSR set to: 0
  3622                           ; Switch size 1, requested type "simple"
  3623                           ; Number of cases is 4, Range of values is 1 to 4
  3624                           ; switch strategies available:
  3625                           ; Name         Instructions Cycles
  3626                           ; simple_byte           13     7 (average)
  3627                           ;	Chosen strategy is simple_byte
  3628   0015FA  51DE               	movf	??_I2C_DO_TX& (0+255),w,b
  3629   0015FC  0A01               	xorlw	1	; case 1
  3630   0015FE  B4D8               	btfsc	status,2,c
  3631   001600  EFDE  F00A         	goto	l4259
  3632   001604  0A03               	xorlw	3	; case 2
  3633   001606  B4D8               	btfsc	status,2,c
  3634   001608  EFD6  F00A         	goto	l4251
  3635   00160C  0A01               	xorlw	1	; case 3
  3636   00160E  B4D8               	btfsc	status,2,c
  3637   001610  EFDA  F00A         	goto	l4255
  3638   001614  0A07               	xorlw	7	; case 4
  3639   001616  B4D8               	btfsc	status,2,c
  3640   001618  EFDE  F00A         	goto	l4259
  3641   00161C  EFDE  F00A         	goto	l4259
  3642   001620                     l278:
  3643                           
  3644                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  3645   001620  0100               	movlb	0	; () banked
  3646   001622  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  3647   001624                     
  3648                           ; BSR set to: 0
  3649                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  3650   001624  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  3651   001628  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  3652   00162C  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  3653   00162E  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  3654   001630  50DF               	movf	indf2,w,c
  3655   001632  EC94  F011         	call	_I2C_MasterSendTxData
  3656   001636                     
  3657                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  3658   001636  0100               	movlb	0	; () banked
  3659   001638  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  3660   00163A  A0D8               	btfss	status,0,c
  3661   00163C  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  3662   00163E  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  3663   001640  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  3664   001642  A4D8               	btfss	status,2,c
  3665   001644  EF26  F00B         	goto	u2171
  3666   001648  EF28  F00B         	goto	u2170
  3667   00164C                     u2171:
  3668   00164C  EF2B  F00B         	goto	l4273
  3669   001650                     u2170:
  3670   001650                     
  3671                           ; BSR set to: 0
  3672   001650  0E06               	movlw	6
  3673   001652  EF2C  F00B         	goto	l281
  3674   001656                     l4273:
  3675                           
  3676                           ; BSR set to: 0
  3677   001656  0E03               	movlw	3
  3678   001658                     l281:
  3679   001658  0012               	return		;funcret
  3680   00165A                     __end_of_I2C_DO_TX:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  3684 ;; Defined at:
  3685 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      enum E2846
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 10
  3706 ;; This function calls:
  3707 ;;		_I2C_MasterSendTxData
  3708 ;; This function is called by:
  3709 ;;		_I2C_MasterFsm
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text40
  3714   002294                     __ptext40:
  3715                           	callstack 0
  3716   002294                     _I2C_DO_SEND_ADR_WRITE:
  3717                           	callstack 15
  3718   002294                     
  3719                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  3720   002294  0100               	movlb	0	; () banked
  3721   002296  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  3722   002298                     
  3723                           ; BSR set to: 0
  3724                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  3725   002298  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  3726   00229A  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  3727   00229C  EC94  F011         	call	_I2C_MasterSendTxData
  3728   0022A0                     
  3729                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  3730   0022A0  0E03               	movlw	3
  3731   0022A2  0012               	return		;funcret
  3732   0022A4                     __end_of_I2C_DO_SEND_ADR_WRITE:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  3736 ;; Defined at:
  3737 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      enum E2846
  3744 ;; Registers used:
  3745 ;;		wreg, status,0, cstack
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;Total ram usage:        0 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; Hardware stack levels required when called: 10
  3758 ;; This function calls:
  3759 ;;		_I2C_MasterSendTxData
  3760 ;; This function is called by:
  3761 ;;		_I2C_MasterFsm
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text41
  3766   0022A4                     __ptext41:
  3767                           	callstack 0
  3768   0022A4                     _I2C_DO_SEND_ADR_READ:
  3769                           	callstack 15
  3770   0022A4                     
  3771                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  3772   0022A4  0100               	movlb	0	; () banked
  3773   0022A6  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  3774   0022A8                     
  3775                           ; BSR set to: 0
  3776                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  3777   0022A8  80D8               	bsf	status,0,c
  3778   0022AA  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  3779   0022AC  EC94  F011         	call	_I2C_MasterSendTxData
  3780   0022B0                     
  3781                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  3782   0022B0  0E05               	movlw	5
  3783   0022B2  0012               	return		;funcret
  3784   0022B4                     __end_of_I2C_DO_SEND_ADR_READ:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _I2C_DO_IDLE *****************
  3788 ;; Defined at:
  3789 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      enum E2846
  3796 ;; Registers used:
  3797 ;;		wreg, status,2
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 9
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_I2C_MasterFsm
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text42
  3818   0022CC                     __ptext42:
  3819                           	callstack 0
  3820   0022CC                     _I2C_DO_IDLE:
  3821                           	callstack 16
  3822   0022CC                     
  3823                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  3824   0022CC  0100               	movlb	0	; () banked
  3825   0022CE  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  3826   0022D0                     
  3827                           ; BSR set to: 0
  3828                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  3829   0022D0  0E00               	movlw	0
  3830   0022D2  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  3831   0022D4                     
  3832                           ; BSR set to: 0
  3833                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  3834   0022D4  0E0E               	movlw	14
  3835   0022D6                     
  3836                           ; BSR set to: 0
  3837   0022D6  0012               	return		;funcret
  3838   0022D8                     __end_of_I2C_DO_IDLE:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function _I2C_DO_TX_EMPTY *****************
  3842 ;; Defined at:
  3843 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      enum E2846
  3850 ;; Registers used:
  3851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;Total ram usage:        2 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; Hardware stack levels required when called: 12
  3864 ;; This function calls:
  3865 ;;		Absolute function
  3866 ;;		_I2C_CallbackReturnReset
  3867 ;;		_I2C_CallbackReturnStop
  3868 ;;		_I2C_DO_SEND_RESTART
  3869 ;;		_I2C_DO_SEND_STOP
  3870 ;;		_I2C_MasterSetIrq
  3871 ;;		_rd1RegCompleteHandler
  3872 ;;		_rd2RegCompleteHandler
  3873 ;;		_rdBlkRegCompleteHandler
  3874 ;;		_wr1RegCompleteHandler
  3875 ;;		_wr2RegCompleteHandler
  3876 ;; This function is called by:
  3877 ;;		_I2C_MasterFsm
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text43
  3882   0019E8                     __ptext43:
  3883                           	callstack 0
  3884   0019E8                     _I2C_DO_TX_EMPTY:
  3885                           	callstack 13
  3886   0019E8                     
  3887                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  3888   0019E8  0100               	movlb	0	; () banked
  3889   0019EA  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  3890                           
  3891                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  3892   0019EC  EF05  F00D         	goto	l4337
  3893   0019F0                     l4321:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  3897   0019F0  ECB1  F011         	call	_I2C_DO_SEND_RESTART	;wreg free
  3898   0019F4  EF32  F00D         	goto	l312
  3899   0019F8                     l4325:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  3903   0019F8  ECD1  F011         	call	_I2C_MasterSetIrq	;wreg free
  3904   0019FC                     
  3905                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  3906   0019FC  0E03               	movlw	3
  3907   0019FE  EF32  F00D         	goto	l312
  3908   001A02                     l4331:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  3912   001A02  ECAD  F011         	call	_I2C_DO_SEND_STOP	;wreg free
  3913   001A06  EF32  F00D         	goto	l312
  3914   001A0A                     l4337:
  3915                           
  3916                           ; BSR set to: 0
  3917   001A0A  C06C  F0DC         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  3918   001A0E  C06D  F0DD         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  3919   001A12  D802               	call	u2208
  3920   001A14  EF15  F00D         	goto	u2209
  3921   001A18                     u2208:
  3922   001A18  0005               	push	
  3923   001A1A  6EFA               	movwf	pclath,c
  3924   001A1C  5160               	movf	_I2C_Status& (0+255),w,b
  3925   001A1E  6EFD               	movwf	tosl,c
  3926   001A20  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  3927   001A22  6EFE               	movwf	tosh,c
  3928   001A24  6AFF               	clrf	tosu,c
  3929   001A26  50FA               	movf	pclath,w,c
  3930   001A28  0012               	return		;indir
  3931   001A2A                     u2209:
  3932   001A2A  0100               	movlb	0	; () banked
  3933   001A2C  6FDE               	movwf	??_I2C_DO_TX_EMPTY& (0+255),b
  3934   001A2E  6BDF               	clrf	(??_I2C_DO_TX_EMPTY+1)& (0+255),b
  3935                           
  3936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3937                           ; Switch size 1, requested type "simple"
  3938                           ; Number of cases is 1, Range of values is 0 to 0
  3939                           ; switch strategies available:
  3940                           ; Name         Instructions Cycles
  3941                           ; simple_byte            4     3 (average)
  3942                           ;	Chosen strategy is simple_byte
  3943   001A30  51DF               	movf	(??_I2C_DO_TX_EMPTY+1)& (0+255),w,b
  3944   001A32  0A00               	xorlw	0	; case 0
  3945   001A34  B4D8               	btfsc	status,2,c
  3946   001A36  EF1F  F00D         	goto	l4887
  3947   001A3A  EF01  F00D         	goto	l4331
  3948   001A3E                     l4887:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ; Switch size 1, requested type "simple"
  3952                           ; Number of cases is 4, Range of values is 1 to 4
  3953                           ; switch strategies available:
  3954                           ; Name         Instructions Cycles
  3955                           ; simple_byte           13     7 (average)
  3956                           ;	Chosen strategy is simple_byte
  3957   001A3E  51DE               	movf	??_I2C_DO_TX_EMPTY& (0+255),w,b
  3958   001A40  0A01               	xorlw	1	; case 1
  3959   001A42  B4D8               	btfsc	status,2,c
  3960   001A44  EF01  F00D         	goto	l4331
  3961   001A48  0A03               	xorlw	3	; case 2
  3962   001A4A  B4D8               	btfsc	status,2,c
  3963   001A4C  EFF8  F00C         	goto	l4321
  3964   001A50  0A01               	xorlw	1	; case 3
  3965   001A52  B4D8               	btfsc	status,2,c
  3966   001A54  EFF8  F00C         	goto	l4321
  3967   001A58  0A07               	xorlw	7	; case 4
  3968   001A5A  B4D8               	btfsc	status,2,c
  3969   001A5C  EFFC  F00C         	goto	l4325
  3970   001A60  EF01  F00D         	goto	l4331
  3971   001A64                     l312:
  3972   001A64  0012               	return		;funcret
  3973   001A66                     __end_of_I2C_DO_TX_EMPTY:
  3974                           	callstack 0
  3975                           
  3976 ;; *************** function _I2C_MasterSetIrq *****************
  3977 ;; Defined at:
  3978 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		None
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;Total ram usage:        0 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 9
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_I2C_DO_TX_EMPTY
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text44
  4007   0023A2                     __ptext44:
  4008                           	callstack 0
  4009   0023A2                     _I2C_MasterSetIrq:
  4010                           	callstack 15
  4011   0023A2                     
  4012                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  4013   0023A2  869E               	bsf	158,3,c	;volatile
  4014   0023A4  0012               	return		;funcret
  4015   0023A6                     __end_of_I2C_MasterSetIrq:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function _I2C_MasterIsNack *****************
  4019 ;; Defined at:
  4020 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      _Bool 
  4027 ;; Registers used:
  4028 ;;		wreg
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 9
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_I2C_MasterFsm
  4045 ;;		_I2C_DO_TX
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text45
  4050   00225E                     __ptext45:
  4051                           	callstack 0
  4052   00225E                     _I2C_MasterIsNack:
  4053                           	callstack 16
  4054   00225E                     
  4055                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  4056   00225E  BCC5               	btfsc	197,6,c	;volatile
  4057   002260  EF34  F011         	goto	u2141
  4058   002264  EF37  F011         	goto	u2140
  4059   002268                     u2141:
  4060   002268  0E01               	movlw	1
  4061   00226A  EF38  F011         	goto	u2146
  4062   00226E                     u2140:
  4063   00226E  0E00               	movlw	0
  4064   002270                     u2146:
  4065   002270  0012               	return		;funcret
  4066   002272                     __end_of_I2C_MasterIsNack:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _I2C_MasterSendTxData *****************
  4070 ;; Defined at:
  4071 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  data            1    wreg     unsigned char 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  data            1    0[BANK0 ] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        1 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 9
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_I2C_DO_SEND_ADR_READ
  4096 ;;		_I2C_DO_SEND_ADR_WRITE
  4097 ;;		_I2C_DO_TX
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text46
  4102   002328                     __ptext46:
  4103                           	callstack 0
  4104   002328                     _I2C_MasterSendTxData:
  4105                           	callstack 15
  4106                           
  4107                           ;incstack = 0
  4108                           ;I2C_MasterSendTxData@data stored from wreg
  4109   002328  0100               	movlb	0	; () banked
  4110   00232A  6FD3               	movwf	I2C_MasterSendTxData@data& (0+255),b
  4111   00232C                     
  4112                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  4113   00232C  C0D3  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  4114   002330  0012               	return		;funcret
  4115   002332                     __end_of_I2C_MasterSendTxData:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _I2C_MasterSendAck *****************
  4119 ;; Defined at:
  4120 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		None
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; Hardware stack levels required when called: 9
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_I2C_DO_RX
  4145 ;;		_I2C_DO_RX_ACK
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text47
  4150   002380                     __ptext47:
  4151                           	callstack 0
  4152   002380                     _I2C_MasterSendAck:
  4153                           	callstack 15
  4154   002380                     
  4155                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  4156   002380  9AC5               	bcf	197,5,c	;volatile
  4157                           
  4158                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  4159   002382  88C5               	bsf	197,4,c	;volatile
  4160   002384  0012               	return		;funcret
  4161   002386                     __end_of_I2C_MasterSendAck:
  4162                           	callstack 0
  4163                           
  4164 ;; *************** function _I2C_MasterGetRxData *****************
  4165 ;; Defined at:
  4166 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      unsigned char 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 9
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_I2C_DO_RX
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text48
  4195   0023A6                     __ptext48:
  4196                           	callstack 0
  4197   0023A6                     _I2C_MasterGetRxData:
  4198                           	callstack 15
  4199   0023A6                     
  4200                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  4201   0023A6  50C9               	movf	201,w,c	;volatile
  4202   0023A8  0012               	return		;funcret
  4203   0023AA                     __end_of_I2C_MasterGetRxData:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function _I2C_MasterSendNack *****************
  4207 ;; Defined at:
  4208 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		None
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;Total ram usage:        0 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 9
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_I2C_DO_RX_NACK_STOP
  4233 ;;		_I2C_DO_RX_NACK_RESTART
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text49
  4238   002386                     __ptext49:
  4239                           	callstack 0
  4240   002386                     _I2C_MasterSendNack:
  4241                           	callstack 15
  4242   002386                     
  4243                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  4244   002386  8AC5               	bsf	197,5,c	;volatile
  4245                           
  4246                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  4247   002388  88C5               	bsf	197,4,c	;volatile
  4248   00238A  0012               	return		;funcret
  4249   00238C                     __end_of_I2C_MasterSendNack:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _I2C_MasterStartRx *****************
  4253 ;; Defined at:
  4254 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		None
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 9
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_I2C_DO_RCEN
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text50
  4283   0023AA                     __ptext50:
  4284                           	callstack 0
  4285   0023AA                     _I2C_MasterStartRx:
  4286                           	callstack 15
  4287   0023AA                     
  4288                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  4289   0023AA  86C5               	bsf	197,3,c	;volatile
  4290   0023AC  0012               	return		;funcret
  4291   0023AE                     __end_of_I2C_MasterStartRx:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _I2C_CallbackReturnReset *****************
  4295 ;; Defined at:
  4296 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  funPtr          2    9[BANK0 ] PTR void 
  4299 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4300 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      enum E360
  4305 ;; Registers used:
  4306 ;;		wreg
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;Total ram usage:        2 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 9
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_I2C_Open
  4323 ;;		_I2C_DO_TX
  4324 ;;		_I2C_DO_RX
  4325 ;;		_I2C_DO_TX_EMPTY
  4326 ;;		_I2C_DO_ADDRESS_NACK
  4327 ;;		_I2C_DO_RX_EMPTY
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text51
  4332   0023AE                     __ptext51:
  4333                           	callstack 0
  4334   0023AE                     _I2C_CallbackReturnReset:
  4335                           	callstack 15
  4336   0023AE                     
  4337                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  4338   0023AE  0E05               	movlw	5
  4339   0023B0  0012               	return		;funcret
  4340   0023B2                     __end_of_I2C_CallbackReturnReset:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _I2C_CallbackReturnStop *****************
  4344 ;; Defined at:
  4345 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  funPtr          2    9[BANK0 ] PTR void 
  4348 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4349 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      enum E360
  4354 ;; Registers used:
  4355 ;;		wreg
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4361 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;Total ram usage:        2 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 9
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_I2C_Open
  4372 ;;		_I2C_SetCallback
  4373 ;;		_I2C_DO_TX
  4374 ;;		_I2C_DO_RX
  4375 ;;		_I2C_DO_TX_EMPTY
  4376 ;;		_I2C_DO_ADDRESS_NACK
  4377 ;;		_I2C_DO_RX_EMPTY
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text52
  4382   0023B2                     __ptext52:
  4383                           	callstack 0
  4384   0023B2                     _I2C_CallbackReturnStop:
  4385                           	callstack 15
  4386   0023B2                     
  4387                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  4388   0023B2  0E01               	movlw	1
  4389   0023B4  0012               	return		;funcret
  4390   0023B6                     __end_of_I2C_CallbackReturnStop:
  4391                           	callstack 0
  4392                           
  4393 ;; *************** function _rdBlkRegCompleteHandler *****************
  4394 ;; Defined at:
  4395 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  ptr             2    9[BANK0 ] PTR void 
  4398 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4399 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      enum E360
  4404 ;; Registers used:
  4405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:        2 bytes
  4416 ;; Hardware stack levels used: 1
  4417 ;; Hardware stack levels required when called: 11
  4418 ;; This function calls:
  4419 ;;		_I2C_SetBuffer
  4420 ;;		_I2C_SetDataCompleteCallback
  4421 ;; This function is called by:
  4422 ;;		_I2C_ReadDataBlock
  4423 ;;		_I2C_DO_TX
  4424 ;;		_I2C_DO_RX
  4425 ;;		_I2C_DO_TX_EMPTY
  4426 ;;		_I2C_DO_ADDRESS_NACK
  4427 ;;		_I2C_DO_RX_EMPTY
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text53
  4432   001DE4                     __ptext53:
  4433                           	callstack 0
  4434   001DE4                     _rdBlkRegCompleteHandler:
  4435                           	callstack 13
  4436   001DE4                     
  4437                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  4438   001DE4  0100               	movlb	0	; () banked
  4439   001DE6  EE20 F002          	lfsr	2,2
  4440   001DEA  51DC               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
  4441   001DEC  26D9               	addwf	fsr2l,f,c
  4442   001DEE  51DD               	movf	(rdBlkRegCompleteHandler@ptr+1)& (0+255),w,b
  4443   001DF0  22DA               	addwfc	fsr2h,f,c
  4444   001DF2  CFDE F0D3          	movff	postinc2,I2C_SetBuffer@buffer
  4445   001DF6  CFDD F0D4          	movff	postdec2,I2C_SetBuffer@buffer+1
  4446   001DFA  C0DC  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  4447   001DFE  C0DD  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  4448   001E02  CFDE F0D5          	movff	postinc2,I2C_SetBuffer@bufferSize
  4449   001E06  CFDD F0D6          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  4450   001E0A  ECAE  F010         	call	_I2C_SetBuffer	;wreg free
  4451   001E0E                     
  4452                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  4453   001E0E  0E00               	movlw	0
  4454   001E10  0100               	movlb	0	; () banked
  4455   001E12  6FD8               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  4456   001E14  0E00               	movlw	0
  4457   001E16  6FD9               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  4458   001E18  0E00               	movlw	0
  4459   001E1A  6FDA               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  4460   001E1C  0E00               	movlw	0
  4461   001E1E  6FDB               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  4462   001E20  EC19  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  4463   001E24                     
  4464                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  4465   001E24  0E02               	movlw	2
  4466   001E26  0012               	return		;funcret
  4467   001E28                     __end_of_rdBlkRegCompleteHandler:
  4468                           	callstack 0
  4469                           
  4470 ;; *************** function _wr1RegCompleteHandler *****************
  4471 ;; Defined at:
  4472 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  ptr             2    9[BANK0 ] PTR void 
  4475 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4476 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      enum E360
  4481 ;; Registers used:
  4482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:        2 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 11
  4495 ;; This function calls:
  4496 ;;		_I2C_SetBuffer
  4497 ;;		_I2C_SetDataCompleteCallback
  4498 ;; This function is called by:
  4499 ;;		_I2C_Write1ByteRegister
  4500 ;;		_I2C_DO_TX
  4501 ;;		_I2C_DO_RX
  4502 ;;		_I2C_DO_TX_EMPTY
  4503 ;;		_I2C_DO_ADDRESS_NACK
  4504 ;;		_I2C_DO_RX_EMPTY
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text54
  4509   001FCC                     __ptext54:
  4510                           	callstack 0
  4511   001FCC                     _wr1RegCompleteHandler:
  4512                           	callstack 13
  4513   001FCC                     
  4514                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  4515   001FCC  C0DC  F0D3         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  4516   001FD0  C0DD  F0D4         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  4517   001FD4  0E00               	movlw	0
  4518   001FD6  0100               	movlb	0	; () banked
  4519   001FD8  6FD6               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  4520   001FDA  0E01               	movlw	1
  4521   001FDC  6FD5               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  4522   001FDE  ECAE  F010         	call	_I2C_SetBuffer	;wreg free
  4523   001FE2                     
  4524                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  4525   001FE2  0E00               	movlw	0
  4526   001FE4  0100               	movlb	0	; () banked
  4527   001FE6  6FD8               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  4528   001FE8  0E00               	movlw	0
  4529   001FEA  6FD9               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  4530   001FEC  0E00               	movlw	0
  4531   001FEE  6FDA               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  4532   001FF0  0E00               	movlw	0
  4533   001FF2  6FDB               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  4534   001FF4  EC19  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  4535   001FF8                     
  4536                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  4537   001FF8  0E04               	movlw	4
  4538   001FFA  0012               	return		;funcret
  4539   001FFC                     __end_of_wr1RegCompleteHandler:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _rd2RegCompleteHandler *****************
  4543 ;; Defined at:
  4544 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  ptr             2    9[BANK0 ] PTR void 
  4547 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4548 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      enum E360
  4553 ;; Registers used:
  4554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;Total ram usage:        2 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; Hardware stack levels required when called: 11
  4567 ;; This function calls:
  4568 ;;		_I2C_SetBuffer
  4569 ;;		_I2C_SetDataCompleteCallback
  4570 ;; This function is called by:
  4571 ;;		_I2C_Read2ByteRegister
  4572 ;;		_I2C_DO_TX
  4573 ;;		_I2C_DO_RX
  4574 ;;		_I2C_DO_TX_EMPTY
  4575 ;;		_I2C_DO_ADDRESS_NACK
  4576 ;;		_I2C_DO_RX_EMPTY
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text55
  4581   001FFC                     __ptext55:
  4582                           	callstack 0
  4583   001FFC                     _rd2RegCompleteHandler:
  4584                           	callstack 13
  4585   001FFC                     
  4586                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  4587   001FFC  C0DC  F0D3         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  4588   002000  C0DD  F0D4         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  4589   002004  0E00               	movlw	0
  4590   002006  0100               	movlb	0	; () banked
  4591   002008  6FD6               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  4592   00200A  0E02               	movlw	2
  4593   00200C  6FD5               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  4594   00200E  ECAE  F010         	call	_I2C_SetBuffer	;wreg free
  4595   002012                     
  4596                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  4597   002012  0E00               	movlw	0
  4598   002014  0100               	movlb	0	; () banked
  4599   002016  6FD8               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  4600   002018  0E00               	movlw	0
  4601   00201A  6FD9               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  4602   00201C  0E00               	movlw	0
  4603   00201E  6FDA               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  4604   002020  0E00               	movlw	0
  4605   002022  6FDB               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  4606   002024  EC19  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  4607   002028                     
  4608                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  4609   002028  0E02               	movlw	2
  4610   00202A  0012               	return		;funcret
  4611   00202C                     __end_of_rd2RegCompleteHandler:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function _rd1RegCompleteHandler *****************
  4615 ;; Defined at:
  4616 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  ptr             2    9[BANK0 ] PTR void 
  4619 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4620 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      enum E360
  4625 ;; Registers used:
  4626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;Total ram usage:        2 bytes
  4637 ;; Hardware stack levels used: 1
  4638 ;; Hardware stack levels required when called: 11
  4639 ;; This function calls:
  4640 ;;		_I2C_SetBuffer
  4641 ;;		_I2C_SetDataCompleteCallback
  4642 ;; This function is called by:
  4643 ;;		_I2C_Read1ByteRegister
  4644 ;;		_I2C_DO_TX
  4645 ;;		_I2C_DO_RX
  4646 ;;		_I2C_DO_TX_EMPTY
  4647 ;;		_I2C_DO_ADDRESS_NACK
  4648 ;;		_I2C_DO_RX_EMPTY
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text56
  4653   00202C                     __ptext56:
  4654                           	callstack 0
  4655   00202C                     _rd1RegCompleteHandler:
  4656                           	callstack 13
  4657   00202C                     
  4658                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  4659   00202C  C0DC  F0D3         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  4660   002030  C0DD  F0D4         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  4661   002034  0E00               	movlw	0
  4662   002036  0100               	movlb	0	; () banked
  4663   002038  6FD6               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  4664   00203A  0E01               	movlw	1
  4665   00203C  6FD5               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  4666   00203E  ECAE  F010         	call	_I2C_SetBuffer	;wreg free
  4667   002042                     
  4668                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  4669   002042  0E00               	movlw	0
  4670   002044  0100               	movlb	0	; () banked
  4671   002046  6FD8               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  4672   002048  0E00               	movlw	0
  4673   00204A  6FD9               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  4674   00204C  0E00               	movlw	0
  4675   00204E  6FDA               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  4676   002050  0E00               	movlw	0
  4677   002052  6FDB               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  4678   002054  EC19  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  4679   002058                     
  4680                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  4681   002058  0E02               	movlw	2
  4682   00205A  0012               	return		;funcret
  4683   00205C                     __end_of_rd1RegCompleteHandler:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _wr2RegCompleteHandler *****************
  4687 ;; Defined at:
  4688 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  ptr             2    9[BANK0 ] PTR void 
  4691 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4692 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      enum E360
  4697 ;; Registers used:
  4698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;Total ram usage:        2 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 11
  4711 ;; This function calls:
  4712 ;;		_I2C_SetBuffer
  4713 ;;		_I2C_SetDataCompleteCallback
  4714 ;; This function is called by:
  4715 ;;		_I2C_Write2ByteRegister
  4716 ;;		_I2C_DO_TX
  4717 ;;		_I2C_DO_RX
  4718 ;;		_I2C_DO_TX_EMPTY
  4719 ;;		_I2C_DO_ADDRESS_NACK
  4720 ;;		_I2C_DO_RX_EMPTY
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text57
  4725   00205C                     __ptext57:
  4726                           	callstack 0
  4727   00205C                     _wr2RegCompleteHandler:
  4728                           	callstack 13
  4729   00205C                     
  4730                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  4731   00205C  C0DC  F0D3         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  4732   002060  C0DD  F0D4         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  4733   002064  0E00               	movlw	0
  4734   002066  0100               	movlb	0	; () banked
  4735   002068  6FD6               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  4736   00206A  0E02               	movlw	2
  4737   00206C  6FD5               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  4738   00206E  ECAE  F010         	call	_I2C_SetBuffer	;wreg free
  4739   002072                     
  4740                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  4741   002072  0E00               	movlw	0
  4742   002074  0100               	movlb	0	; () banked
  4743   002076  6FD8               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  4744   002078  0E00               	movlw	0
  4745   00207A  6FD9               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  4746   00207C  0E00               	movlw	0
  4747   00207E  6FDA               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  4748   002080  0E00               	movlw	0
  4749   002082  6FDB               	movwf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  4750   002084  EC19  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  4751   002088                     
  4752                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  4753   002088  0E04               	movlw	4
  4754   00208A  0012               	return		;funcret
  4755   00208C                     __end_of_wr2RegCompleteHandler:
  4756                           	callstack 0
  4757                           
  4758 ;; *************** function _I2C_SetDataCompleteCallback *****************
  4759 ;; Defined at:
  4760 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  4763 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  4764 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4765 ;;  ptr             2    7[BANK0 ] PTR void 
  4766 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4767 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4779 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;Total ram usage:        4 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 10
  4786 ;; This function calls:
  4787 ;;		_I2C_SetCallback
  4788 ;; This function is called by:
  4789 ;;		_rd1RegCompleteHandler
  4790 ;;		_rd2RegCompleteHandler
  4791 ;;		_wr1RegCompleteHandler
  4792 ;;		_wr2RegCompleteHandler
  4793 ;;		_rdBlkRegCompleteHandler
  4794 ;;		_I2C_Read1ByteRegister
  4795 ;;		_I2C_Read2ByteRegister
  4796 ;;		_I2C_Write1ByteRegister
  4797 ;;		_I2C_Write2ByteRegister
  4798 ;;		_I2C_ReadDataBlock
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text58
  4803   002232                     __ptext58:
  4804                           	callstack 0
  4805   002232                     _I2C_SetDataCompleteCallback:
  4806                           	callstack 13
  4807   002232                     
  4808                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  4809   002232  C0D8  F0D3         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  4810   002236  C0D9  F0D4         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  4811   00223A  C0DA  F0D5         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  4812   00223E  C0DB  F0D6         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  4813   002242  0E00               	movlw	0
  4814   002244  EC33  F00D         	call	_I2C_SetCallback
  4815   002248  0012               	return		;funcret
  4816   00224A                     __end_of_I2C_SetDataCompleteCallback:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _I2C_SetCallback *****************
  4820 ;; Defined at:
  4821 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  idx             1    wreg     enum E2864
  4824 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  4825 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  4826 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4827 ;;  ptr             2    2[BANK0 ] PTR void 
  4828 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4829 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  idx             1    4[BANK0 ] enum E2864
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4841 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;Total ram usage:        5 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; Hardware stack levels required when called: 9
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_I2C_SetDataCompleteCallback
  4852 ;;		_I2C_SetAddressNackCallback
  4853 ;;		_I2C_SetWriteCollisionCallback
  4854 ;;		_I2C_SetDataNackCallback
  4855 ;;		_I2C_SetTimeoutCallback
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text59
  4860   001A66                     __ptext59:
  4861                           	callstack 0
  4862   001A66                     _I2C_SetCallback:
  4863                           	callstack 19
  4864                           
  4865                           ;incstack = 0
  4866                           ;I2C_SetCallback@idx stored from wreg
  4867   001A66  0100               	movlb	0	; () banked
  4868   001A68  6FD7               	movwf	I2C_SetCallback@idx& (0+255),b
  4869   001A6A                     
  4870                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  4871   001A6A  0100               	movlb	0	; () banked
  4872   001A6C  51D3               	movf	I2C_SetCallback@cb& (0+255),w,b
  4873   001A6E  11D4               	iorwf	(I2C_SetCallback@cb+1)& (0+255),w,b
  4874   001A70  B4D8               	btfsc	status,2,c
  4875   001A72  EF3D  F00D         	goto	u2121
  4876   001A76  EF3F  F00D         	goto	u2120
  4877   001A7A                     u2121:
  4878   001A7A  EF59  F00D         	goto	l4103
  4879   001A7E                     u2120:
  4880   001A7E                     
  4881                           ; BSR set to: 0
  4882                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  4883   001A7E  51D7               	movf	I2C_SetCallback@idx& (0+255),w,b
  4884   001A80  0D02               	mullw	2
  4885   001A82  0E60               	movlw	low _I2C_Status
  4886   001A84  24F3               	addwf	243,w,c
  4887   001A86  6ED9               	movwf	fsr2l,c
  4888   001A88  0E00               	movlw	high _I2C_Status
  4889   001A8A  20F4               	addwfc	prodh,w,c
  4890   001A8C  6EDA               	movwf	fsr2h,c
  4891   001A8E  C0D3  FFDE         	movff	I2C_SetCallback@cb,postinc2
  4892   001A92  C0D4  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  4893                           
  4894                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  4895   001A96  51D7               	movf	I2C_SetCallback@idx& (0+255),w,b
  4896   001A98  0D02               	mullw	2
  4897   001A9A  0E6C               	movlw	low (_I2C_Status+12)
  4898   001A9C  24F3               	addwf	243,w,c
  4899   001A9E  6ED9               	movwf	fsr2l,c
  4900   001AA0  0E00               	movlw	high (_I2C_Status+12)
  4901   001AA2  20F4               	addwfc	prodh,w,c
  4902   001AA4  6EDA               	movwf	fsr2h,c
  4903   001AA6  C0D5  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  4904   001AAA  C0D6  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  4905                           
  4906                           ;mcc_generated_files/i2c_master.c: 304:     }
  4907   001AAE  EF71  F00D         	goto	l256
  4908   001AB2                     l4103:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  4912   001AB2  51D7               	movf	I2C_SetCallback@idx& (0+255),w,b
  4913   001AB4  0D02               	mullw	2
  4914   001AB6  0E60               	movlw	low _I2C_Status
  4915   001AB8  24F3               	addwf	243,w,c
  4916   001ABA  6ED9               	movwf	fsr2l,c
  4917   001ABC  0E00               	movlw	high _I2C_Status
  4918   001ABE  20F4               	addwfc	prodh,w,c
  4919   001AC0  6EDA               	movwf	fsr2h,c
  4920   001AC2  0EB2               	movlw	low _I2C_CallbackReturnStop
  4921   001AC4  6EDE               	movwf	postinc2,c
  4922   001AC6  0E23               	movlw	high _I2C_CallbackReturnStop
  4923   001AC8  6EDD               	movwf	postdec2,c
  4924                           
  4925                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  4926   001ACA  51D7               	movf	I2C_SetCallback@idx& (0+255),w,b
  4927   001ACC  0D02               	mullw	2
  4928   001ACE  0E6C               	movlw	low (_I2C_Status+12)
  4929   001AD0  24F3               	addwf	243,w,c
  4930   001AD2  6ED9               	movwf	fsr2l,c
  4931   001AD4  0E00               	movlw	high (_I2C_Status+12)
  4932   001AD6  20F4               	addwfc	prodh,w,c
  4933   001AD8  6EDA               	movwf	fsr2h,c
  4934   001ADA  0E00               	movlw	0
  4935   001ADC  6EDE               	movwf	postinc2,c
  4936   001ADE  0E00               	movlw	0
  4937   001AE0  6EDD               	movwf	postdec2,c
  4938   001AE2                     l256:
  4939                           
  4940                           ; BSR set to: 0
  4941   001AE2  0012               	return		;funcret
  4942   001AE4                     __end_of_I2C_SetCallback:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function _I2C_SetBuffer *****************
  4946 ;; Defined at:
  4947 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  buffer          2    0[BANK0 ] PTR void 
  4950 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
  4951 ;;		 -> SetDAC@DAC8574_Data(3), main@red2(3), main@red(3), main@dat(3), 
  4952 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), 
  4953 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  4954 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  4955 ;;  bufferSize      2    2[BANK0 ] unsigned int 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4967 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;Total ram usage:        4 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 9
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_I2C_WriteNBytes
  4978 ;;		_I2C_ReadNBytes
  4979 ;;		_rd1RegCompleteHandler
  4980 ;;		_rd2RegCompleteHandler
  4981 ;;		_wr1RegCompleteHandler
  4982 ;;		_wr2RegCompleteHandler
  4983 ;;		_rdBlkRegCompleteHandler
  4984 ;;		_I2C_Read1ByteRegister
  4985 ;;		_I2C_Read2ByteRegister
  4986 ;;		_I2C_Write1ByteRegister
  4987 ;;		_I2C_Write2ByteRegister
  4988 ;;		_I2C_ReadDataBlock
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text60
  4993   00215C                     __ptext60:
  4994                           	callstack 0
  4995   00215C                     _I2C_SetBuffer:
  4996                           	callstack 20
  4997   00215C                     
  4998                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  4999   00215C  0100               	movlb	0	; () banked
  5000   00215E  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  5001   002160  EFB4  F010         	goto	u2131
  5002   002164  EFB6  F010         	goto	u2130
  5003   002168                     u2131:
  5004   002168  EFBF  F010         	goto	l236
  5005   00216C                     u2130:
  5006   00216C                     
  5007                           ; BSR set to: 0
  5008                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  5009   00216C  C0D3  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  5010   002170  C0D4  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  5011   002174                     
  5012                           ; BSR set to: 0
  5013                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  5014   002174  C0D5  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  5015   002178  C0D6  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  5016   00217C                     
  5017                           ; BSR set to: 0
  5018                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  5019   00217C  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  5020   00217E                     l236:
  5021                           
  5022                           ; BSR set to: 0
  5023   00217E  0012               	return		;funcret
  5024   002180                     __end_of_I2C_SetBuffer:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _I2C_MasterStop *****************
  5028 ;; Defined at:
  5029 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		None
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 9
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_I2C_DO_SEND_STOP
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text61
  5058   0023B6                     __ptext61:
  5059                           	callstack 0
  5060   0023B6                     _I2C_MasterStop:
  5061                           	callstack 14
  5062   0023B6                     
  5063                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  5064   0023B6  84C5               	bsf	197,2,c	;volatile
  5065   0023B8  0012               	return		;funcret
  5066   0023BA                     __end_of_I2C_MasterStop:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _I2C_MasterEnableRestart *****************
  5070 ;; Defined at:
  5071 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		None
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 9
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_I2C_DO_SEND_RESTART_READ
  5096 ;;		_I2C_DO_SEND_RESTART_WRITE
  5097 ;;		_I2C_DO_SEND_RESTART
  5098 ;;		_I2C_DO_RX_EMPTY
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text62
  5103   0023BA                     __ptext62:
  5104                           	callstack 0
  5105   0023BA                     _I2C_MasterEnableRestart:
  5106                           	callstack 14
  5107   0023BA                     
  5108                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  5109   0023BA  82C5               	bsf	197,1,c	;volatile
  5110   0023BC  0012               	return		;funcret
  5111   0023BE                     __end_of_I2C_MasterEnableRestart:
  5112                           	callstack 0
  5113                           
  5114 ;; *************** function _I2C_MasterStart *****************
  5115 ;; Defined at:
  5116 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		None
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 9
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_I2C_MasterOperation
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text63
  5145   0023BE                     __ptext63:
  5146                           	callstack 0
  5147   0023BE                     _I2C_MasterStart:
  5148                           	callstack 18
  5149   0023BE                     
  5150                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  5151   0023BE  80C5               	bsf	197,0,c	;volatile
  5152   0023C0  0012               	return		;funcret
  5153   0023C2                     __end_of_I2C_MasterStart:
  5154                           	callstack 0
  5155                           
  5156 ;; *************** function _I2C_Close *****************
  5157 ;; Defined at:
  5158 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  returnValue     1    0[BANK0 ] enum E355
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      enum E355
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;Total ram usage:        1 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 10
  5179 ;; This function calls:
  5180 ;;		_I2C_MasterClearIrq
  5181 ;;		_I2C_MasterClose
  5182 ;;		_I2C_MasterDisableIrq
  5183 ;; This function is called by:
  5184 ;;		_I2C_WriteNBytes
  5185 ;;		_I2C_ReadNBytes
  5186 ;;		_I2C_Read1ByteRegister
  5187 ;;		_I2C_Read2ByteRegister
  5188 ;;		_I2C_Write1ByteRegister
  5189 ;;		_I2C_Write2ByteRegister
  5190 ;;		_I2C_ReadDataBlock
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text64
  5195   00208C                     __ptext64:
  5196                           	callstack 0
  5197   00208C                     _I2C_Close:
  5198                           	callstack 19
  5199   00208C                     
  5200                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  5201   00208C  0E01               	movlw	1
  5202   00208E  0100               	movlb	0	; () banked
  5203   002090  6FD3               	movwf	I2C_Close@returnValue& (0+255),b
  5204   002092                     
  5205                           ; BSR set to: 0
  5206                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  5207   002092  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  5208   002094  EF4E  F010         	goto	u2311
  5209   002098  EF50  F010         	goto	u2310
  5210   00209C                     u2311:
  5211   00209C  EF5A  F010         	goto	l4511
  5212   0020A0                     u2310:
  5213   0020A0                     
  5214                           ; BSR set to: 0
  5215                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  5216   0020A0  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  5217                           
  5218                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  5219   0020A2  697C               	setf	(_I2C_Status+28)& (0+255),b
  5220   0020A4                     
  5221                           ; BSR set to: 0
  5222                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  5223   0020A4  ECE5  F011         	call	_I2C_MasterClearIrq	;wreg free
  5224                           
  5225                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  5226   0020A8  ECE1  F011         	call	_I2C_MasterDisableIrq	;wreg free
  5227                           
  5228                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  5229   0020AC  ECE3  F011         	call	_I2C_MasterClose	;wreg free
  5230   0020B0                     
  5231                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  5232   0020B0  C082  F0D3         	movff	_I2C_Status+34,I2C_Close@returnValue
  5233   0020B4                     l4511:
  5234                           
  5235                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  5236   0020B4  0100               	movlb	0	; () banked
  5237   0020B6  51D3               	movf	I2C_Close@returnValue& (0+255),w,b
  5238   0020B8                     
  5239                           ; BSR set to: 0
  5240   0020B8  0012               	return		;funcret
  5241   0020BA                     __end_of_I2C_Close:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function _I2C_MasterDisableIrq *****************
  5245 ;; Defined at:
  5246 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		None
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;Total ram usage:        0 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 9
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_I2C_Close
  5271 ;;		_I2C_SetTimeOut
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text65
  5276   0023C2                     __ptext65:
  5277                           	callstack 0
  5278   0023C2                     _I2C_MasterDisableIrq:
  5279                           	callstack 19
  5280   0023C2                     
  5281                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  5282   0023C2  969D               	bcf	157,3,c	;volatile
  5283   0023C4  0012               	return		;funcret
  5284   0023C6                     __end_of_I2C_MasterDisableIrq:
  5285                           	callstack 0
  5286                           
  5287 ;; *************** function _I2C_MasterClose *****************
  5288 ;; Defined at:
  5289 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;		None
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;		None
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  1    wreg      void 
  5296 ;; Registers used:
  5297 ;;		None
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;Total ram usage:        0 bytes
  5308 ;; Hardware stack levels used: 1
  5309 ;; Hardware stack levels required when called: 9
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_I2C_Close
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text66
  5318   0023C6                     __ptext66:
  5319                           	callstack 0
  5320   0023C6                     _I2C_MasterClose:
  5321                           	callstack 19
  5322   0023C6                     
  5323                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  5324   0023C6  9AC6               	bcf	198,5,c	;volatile
  5325   0023C8  0012               	return		;funcret
  5326   0023CA                     __end_of_I2C_MasterClose:
  5327                           	callstack 0
  5328                           
  5329 ;; *************** function _I2C_MasterClearIrq *****************
  5330 ;; Defined at:
  5331 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		None
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;Total ram usage:        0 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; Hardware stack levels required when called: 9
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_I2C_Open
  5356 ;;		_I2C_Close
  5357 ;;		_I2C_MasterFsm
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text67
  5362   0023CA                     __ptext67:
  5363                           	callstack 0
  5364   0023CA                     _I2C_MasterClearIrq:
  5365                           	callstack 19
  5366   0023CA                     
  5367                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  5368   0023CA  969E               	bcf	158,3,c	;volatile
  5369   0023CC  0012               	return		;funcret
  5370   0023CE                     __end_of_I2C_MasterClearIrq:
  5371                           	callstack 0
  5372                           
  5373 ;; *************** function _INTERRUPT_InterruptManager *****************
  5374 ;; Defined at:
  5375 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;Total ram usage:        6 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; Hardware stack levels required when called: 8
  5396 ;; This function calls:
  5397 ;;		Absolute function
  5398 ;;		_EUSART_Receive_ISR
  5399 ;;		_EUSART_Transmit_ISR
  5400 ;;		_TMR0_ISR
  5401 ;;		_TMR2_ISR
  5402 ;;		_USART_RXC_vect
  5403 ;;		_USART_TXC_vect
  5404 ;; This function is called by:
  5405 ;;		Interrupt level 2
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	intcode
  5410   000008                     __pintcode:
  5411                           	callstack 0
  5412   000008                     _INTERRUPT_InterruptManager:
  5413                           	callstack 13
  5414                           
  5415                           ;incstack = 0
  5416   000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5417   00000A  CFFA F01E          	movff	pclath,??_INTERRUPT_InterruptManager
  5418   00000E  CFFB F01F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5419   000012  CFE1 F020          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  5420   000016  CFE2 F021          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  5421   00001A  CFD9 F022          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  5422   00001E  CFDA F023          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  5423   000022                     
  5424                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5425   000022  AAF2               	btfss	242,5,c	;volatile
  5426   000024  EF16  F000         	goto	i2u195_41
  5427   000028  EF18  F000         	goto	i2u195_40
  5428   00002C                     i2u195_41:
  5429   00002C  EF23  F000         	goto	i2l727
  5430   000030                     i2u195_40:
  5431   000030  A4F2               	btfss	242,2,c	;volatile
  5432   000032  EF1D  F000         	goto	i2u196_41
  5433   000036  EF1F  F000         	goto	i2u196_40
  5434   00003A                     i2u196_41:
  5435   00003A  EF23  F000         	goto	i2l727
  5436   00003E                     i2u196_40:
  5437   00003E                     
  5438                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5439   00003E  ECB2  F00F         	call	_TMR0_ISR	;wreg free
  5440                           
  5441                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  5442   000042  EF76  F000         	goto	i2l737
  5443   000046                     i2l727:
  5444   000046  ACF2               	btfss	242,6,c	;volatile
  5445   000048  EF28  F000         	goto	i2u197_41
  5446   00004C  EF2A  F000         	goto	i2u197_40
  5447   000050                     i2u197_41:
  5448   000050  EF76  F000         	goto	i2l737
  5449   000054                     i2u197_40:
  5450   000054                     
  5451                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5452   000054  A89D               	btfss	157,4,c	;volatile
  5453   000056  EF2F  F000         	goto	i2u198_41
  5454   00005A  EF31  F000         	goto	i2u198_40
  5455   00005E                     i2u198_41:
  5456   00005E  EF47  F000         	goto	i2l730
  5457   000062                     i2u198_40:
  5458   000062  A89E               	btfss	158,4,c	;volatile
  5459   000064  EF36  F000         	goto	i2u199_41
  5460   000068  EF38  F000         	goto	i2u199_40
  5461   00006C                     i2u199_41:
  5462   00006C  EF47  F000         	goto	i2l730
  5463   000070                     i2u199_40:
  5464   000070                     
  5465                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_TxDefaultInterruptHandler();
  5466   000070  D802               	call	i2u200_48
  5467   000072  EF45  F000         	goto	i2u200_49
  5468   000076                     i2u200_48:
  5469   000076  0005               	push	
  5470   000078  6EFA               	movwf	pclath,c
  5471   00007A  0100               	movlb	0	; () banked
  5472   00007C  51F1               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
  5473   00007E  6EFD               	movwf	tosl,c
  5474   000080  51F2               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
  5475   000082  6EFE               	movwf	tosh,c
  5476   000084  6AFF               	clrf	tosu,c
  5477   000086  50FA               	movf	pclath,w,c
  5478   000088  0012               	return		;indir
  5479   00008A                     i2u200_49:
  5480                           
  5481                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  5482   00008A  EF76  F000         	goto	i2l737
  5483   00008E                     i2l730:
  5484   00008E  AA9D               	btfss	157,5,c	;volatile
  5485   000090  EF4C  F000         	goto	i2u201_41
  5486   000094  EF4E  F000         	goto	i2u201_40
  5487   000098                     i2u201_41:
  5488   000098  EF64  F000         	goto	i2l732
  5489   00009C                     i2u201_40:
  5490   00009C  AA9E               	btfss	158,5,c	;volatile
  5491   00009E  EF53  F000         	goto	i2u202_41
  5492   0000A2  EF55  F000         	goto	i2u202_40
  5493   0000A6                     i2u202_41:
  5494   0000A6  EF64  F000         	goto	i2l732
  5495   0000AA                     i2u202_40:
  5496   0000AA                     
  5497                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_RxDefaultInterruptHandler();
  5498   0000AA  D802               	call	i2u203_48
  5499   0000AC  EF62  F000         	goto	i2u203_49
  5500   0000B0                     i2u203_48:
  5501   0000B0  0005               	push	
  5502   0000B2  6EFA               	movwf	pclath,c
  5503   0000B4  0100               	movlb	0	; () banked
  5504   0000B6  51EF               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
  5505   0000B8  6EFD               	movwf	tosl,c
  5506   0000BA  51F0               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
  5507   0000BC  6EFE               	movwf	tosh,c
  5508   0000BE  6AFF               	clrf	tosu,c
  5509   0000C0  50FA               	movf	pclath,w,c
  5510   0000C2  0012               	return		;indir
  5511   0000C4                     i2u203_49:
  5512                           
  5513                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  5514   0000C4  EF76  F000         	goto	i2l737
  5515   0000C8                     i2l732:
  5516   0000C8  A29D               	btfss	157,1,c	;volatile
  5517   0000CA  EF69  F000         	goto	i2u204_41
  5518   0000CE  EF6B  F000         	goto	i2u204_40
  5519   0000D2                     i2u204_41:
  5520   0000D2  EF76  F000         	goto	i2l731
  5521   0000D6                     i2u204_40:
  5522   0000D6  A29E               	btfss	158,1,c	;volatile
  5523   0000D8  EF70  F000         	goto	i2u205_41
  5524   0000DC  EF72  F000         	goto	i2u205_40
  5525   0000E0                     i2u205_41:
  5526   0000E0  EF76  F000         	goto	i2l731
  5527   0000E4                     i2u205_40:
  5528   0000E4                     
  5529                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
  5530   0000E4  EC5D  F010         	call	_TMR2_ISR	;wreg free
  5531                           
  5532                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  5533   0000E8  EF76  F000         	goto	i2l737
  5534   0000EC                     i2l731:
  5535   0000EC                     i2l737:
  5536   0000EC  C023  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  5537   0000F0  C022  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  5538   0000F4  C021  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  5539   0000F8  C020  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  5540   0000FC  C01F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5541   000100  C01E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5542   000104  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5543   000106  0011               	retfie		f
  5544   000108                     __end_of_INTERRUPT_InterruptManager:
  5545                           	callstack 0
  5546                           
  5547 ;; *************** function _EUSART_Transmit_ISR *****************
  5548 ;; Defined at:
  5549 ;;		line 197 in file "mcc_generated_files/eusart.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;Total ram usage:        0 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_EUSART_Initialize
  5573 ;;		_INTERRUPT_InterruptManager
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text69
  5578   001EAC                     __ptext69:
  5579                           	callstack 0
  5580   001EAC                     _EUSART_Transmit_ISR:
  5581                           	callstack 20
  5582   001EAC                     
  5583                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  5584   001EAC  0E08               	movlw	8
  5585   001EAE  6046               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
  5586   001EB0  EF5C  F00F         	goto	i2u165_41
  5587   001EB4  EF5E  F00F         	goto	i2u165_40
  5588   001EB8                     i2u165_41:
  5589   001EB8  EF74  F00F         	goto	i2l665
  5590   001EBC                     i2u165_40:
  5591   001EBC                     
  5592                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  5593   001EBC  0E2C               	movlw	low _eusartTxBuffer
  5594   001EBE  2438               	addwf	_eusartTxTail^0,w,c	;volatile
  5595   001EC0  6ED9               	movwf	fsr2l,c
  5596   001EC2  6ADA               	clrf	fsr2h,c
  5597   001EC4  0E00               	movlw	high _eusartTxBuffer
  5598   001EC6  22DA               	addwfc	fsr2h,f,c
  5599   001EC8  50DF               	movf	indf2,w,c
  5600   001ECA  6EAD               	movwf	173,c	;volatile
  5601   001ECC  2A38               	incf	_eusartTxTail^0,f,c	;volatile
  5602   001ECE                     
  5603                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5604   001ECE  0E07               	movlw	7
  5605   001ED0  6438               	cpfsgt	_eusartTxTail^0,c	;volatile
  5606   001ED2  EF6D  F00F         	goto	i2u166_41
  5607   001ED6  EF6F  F00F         	goto	i2u166_40
  5608   001EDA                     i2u166_41:
  5609   001EDA  EF71  F00F         	goto	i2l3711
  5610   001EDE                     i2u166_40:
  5611   001EDE                     
  5612                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  5613   001EDE  0E00               	movlw	0
  5614   001EE0  6E38               	movwf	_eusartTxTail^0,c	;volatile
  5615   001EE2                     i2l3711:
  5616                           
  5617                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  5618   001EE2  2A46               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
  5619                           
  5620                           ;mcc_generated_files/eusart.c: 209:     }
  5621   001EE4  EF75  F00F         	goto	i2l668
  5622   001EE8                     i2l665:
  5623                           
  5624                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TX1IE = 0;
  5625   001EE8  989D               	bcf	157,4,c	;volatile
  5626   001EEA                     i2l668:
  5627   001EEA  0012               	return		;funcret
  5628   001EEC                     __end_of_EUSART_Transmit_ISR:
  5629                           	callstack 0
  5630                           
  5631 ;; *************** function _USART_TXC_vect *****************
  5632 ;; Defined at:
  5633 ;;		line 68 in file "Modbas_RTU.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      void 
  5640 ;; Registers used:
  5641 ;;		None
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;Total ram usage:        0 bytes
  5652 ;; Hardware stack levels used: 1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_main
  5657 ;;		_INTERRUPT_InterruptManager
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text70
  5662   0023CE                     __ptext70:
  5663                           	callstack 0
  5664   0023CE                     _USART_TXC_vect:
  5665                           	callstack 20
  5666   0023CE  989D               	bcf	157,4,c	;volatile
  5667   0023D0  0012               	return		;funcret
  5668   0023D2                     __end_of_USART_TXC_vect:
  5669                           	callstack 0
  5670                           
  5671 ;; *************** function _EUSART_Receive_ISR *****************
  5672 ;; Defined at:
  5673 ;;		line 216 in file "mcc_generated_files/eusart.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;		None
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;Total ram usage:        0 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; Hardware stack levels required when called: 2
  5694 ;; This function calls:
  5695 ;;		Absolute function
  5696 ;;		_EUSART_DefaultErrorHandler
  5697 ;;		_EUSART_DefaultFramingErrorHandler
  5698 ;;		_EUSART_DefaultOverrunErrorHandler
  5699 ;;		_EUSART_RxDataHandler
  5700 ;; This function is called by:
  5701 ;;		_EUSART_Initialize
  5702 ;;		_INTERRUPT_InterruptManager
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text71
  5707   00165A                     __ptext71:
  5708                           	callstack 0
  5709   00165A                     _EUSART_Receive_ISR:
  5710                           	callstack 18
  5711   00165A                     
  5712                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  5713   00165A  0E24               	movlw	low _eusartRxStatusBuffer
  5714   00165C  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  5715   00165E  6ED9               	movwf	fsr2l,c
  5716   001660  6ADA               	clrf	fsr2h,c
  5717   001662  0E00               	movlw	high _eusartRxStatusBuffer
  5718   001664  22DA               	addwfc	fsr2h,f,c
  5719   001666  0E00               	movlw	0
  5720   001668  6EDF               	movwf	indf2,c
  5721   00166A                     
  5722                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  5723   00166A  A4AB               	btfss	171,2,c	;volatile
  5724   00166C  EF3A  F00B         	goto	i2u167_41
  5725   001670  EF3C  F00B         	goto	i2u167_40
  5726   001674                     i2u167_41:
  5727   001674  EF50  F00B         	goto	i2l3721
  5728   001678                     i2u167_40:
  5729   001678                     
  5730                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5731   001678  0E24               	movlw	low _eusartRxStatusBuffer
  5732   00167A  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  5733   00167C  6ED9               	movwf	fsr2l,c
  5734   00167E  6ADA               	clrf	fsr2h,c
  5735   001680  0E00               	movlw	high _eusartRxStatusBuffer
  5736   001682  22DA               	addwfc	fsr2h,f,c
  5737   001684  82DF               	bsf	indf2,1,c
  5738   001686                     
  5739                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  5740   001686  D802               	call	i2u168_48
  5741   001688  EF50  F00B         	goto	i2u168_49
  5742   00168C                     i2u168_48:
  5743   00168C  0005               	push	
  5744   00168E  6EFA               	movwf	pclath,c
  5745   001690  0100               	movlb	0	; () banked
  5746   001692  51ED               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
  5747   001694  6EFD               	movwf	tosl,c
  5748   001696  51EE               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
  5749   001698  6EFE               	movwf	tosh,c
  5750   00169A  6AFF               	clrf	tosu,c
  5751   00169C  50FA               	movf	pclath,w,c
  5752   00169E  0012               	return		;indir
  5753   0016A0                     i2u168_49:
  5754   0016A0                     i2l3721:
  5755                           
  5756                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  5757   0016A0  A2AB               	btfss	171,1,c	;volatile
  5758   0016A2  EF55  F00B         	goto	i2u169_41
  5759   0016A6  EF57  F00B         	goto	i2u169_40
  5760   0016AA                     i2u169_41:
  5761   0016AA  EF6B  F00B         	goto	i2l3727
  5762   0016AE                     i2u169_40:
  5763   0016AE                     
  5764                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5765   0016AE  0E24               	movlw	low _eusartRxStatusBuffer
  5766   0016B0  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  5767   0016B2  6ED9               	movwf	fsr2l,c
  5768   0016B4  6ADA               	clrf	fsr2h,c
  5769   0016B6  0E00               	movlw	high _eusartRxStatusBuffer
  5770   0016B8  22DA               	addwfc	fsr2h,f,c
  5771   0016BA  84DF               	bsf	indf2,2,c
  5772   0016BC                     
  5773                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  5774   0016BC  D802               	call	i2u170_48
  5775   0016BE  EF6B  F00B         	goto	i2u170_49
  5776   0016C2                     i2u170_48:
  5777   0016C2  0005               	push	
  5778   0016C4  6EFA               	movwf	pclath,c
  5779   0016C6  0100               	movlb	0	; () banked
  5780   0016C8  51EB               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  5781   0016CA  6EFD               	movwf	tosl,c
  5782   0016CC  51EC               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  5783   0016CE  6EFE               	movwf	tosh,c
  5784   0016D0  6AFF               	clrf	tosu,c
  5785   0016D2  50FA               	movf	pclath,w,c
  5786   0016D4  0012               	return		;indir
  5787   0016D6                     i2u170_49:
  5788   0016D6                     i2l3727:
  5789                           
  5790                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  5791   0016D6  0E24               	movlw	low _eusartRxStatusBuffer
  5792   0016D8  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  5793   0016DA  6ED9               	movwf	fsr2l,c
  5794   0016DC  6ADA               	clrf	fsr2h,c
  5795   0016DE  0E00               	movlw	high _eusartRxStatusBuffer
  5796   0016E0  22DA               	addwfc	fsr2h,f,c
  5797   0016E2  50DF               	movf	indf2,w,c
  5798   0016E4  B4D8               	btfsc	status,2,c
  5799   0016E6  EF77  F00B         	goto	i2u171_41
  5800   0016EA  EF79  F00B         	goto	i2u171_40
  5801   0016EE                     i2u171_41:
  5802   0016EE  EF88  F00B         	goto	i2l3731
  5803   0016F2                     i2u171_40:
  5804   0016F2                     
  5805                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  5806   0016F2  D802               	call	i2u172_48
  5807   0016F4  EF86  F00B         	goto	i2u172_49
  5808   0016F8                     i2u172_48:
  5809   0016F8  0005               	push	
  5810   0016FA  6EFA               	movwf	pclath,c
  5811   0016FC  0100               	movlb	0	; () banked
  5812   0016FE  51E9               	movf	_EUSART_ErrorHandler& (0+255),w,b
  5813   001700  6EFD               	movwf	tosl,c
  5814   001702  51EA               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  5815   001704  6EFE               	movwf	tosh,c
  5816   001706  6AFF               	clrf	tosu,c
  5817   001708  50FA               	movf	pclath,w,c
  5818   00170A  0012               	return		;indir
  5819   00170C                     i2u172_49:
  5820                           
  5821                           ;mcc_generated_files/eusart.c: 233:     } else {
  5822   00170C  EF8A  F00B         	goto	i2l675
  5823   001710                     i2l3731:
  5824                           
  5825                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  5826   001710  EC74  F010         	call	_EUSART_RxDataHandler	;wreg free
  5827   001714                     i2l675:
  5828   001714  0012               	return		;funcret
  5829   001716                     __end_of_EUSART_Receive_ISR:
  5830                           	callstack 0
  5831                           
  5832 ;; *************** function _USART_RXC_vect *****************
  5833 ;; Defined at:
  5834 ;;		line 40 in file "Modbas_RTU.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  TempModbas      1    1[COMRAM] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;Total ram usage:        2 bytes
  5853 ;; Hardware stack levels used: 1
  5854 ;; Hardware stack levels required when called: 1
  5855 ;; This function calls:
  5856 ;;		_TMR0_Reload
  5857 ;; This function is called by:
  5858 ;;		_main
  5859 ;;		_INTERRUPT_InterruptManager
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text72
  5864   0018E6                     __ptext72:
  5865                           	callstack 0
  5866   0018E6                     _USART_RXC_vect:
  5867                           	callstack 19
  5868   0018E6                     
  5869                           ;Modbas_RTU.c: 42:     unsigned char TempModbas = RCREG;
  5870   0018E6  CFAE F002          	movff	4014,USART_RXC_vect@TempModbas	;volatile
  5871   0018EA                     
  5872                           ;Modbas_RTU.c: 43:  TMR0_Reload();
  5873   0018EA  ECC6  F011         	call	_TMR0_Reload	;wreg free
  5874   0018EE                     
  5875                           ;Modbas_RTU.c: 44:  if (!Bit_action_ModbasRtu.b2)
  5876   0018EE  B43B               	btfsc	_Bit_action_ModbasRtu^0,2,c
  5877   0018F0  EF7C  F00C         	goto	i2u176_41
  5878   0018F4  EF7E  F00C         	goto	i2u176_40
  5879   0018F8                     i2u176_41:
  5880   0018F8  EFB4  F00C         	goto	i2l902
  5881   0018FC                     i2u176_40:
  5882   0018FC                     
  5883                           ;Modbas_RTU.c: 45:   {;Modbas_RTU.c: 46:   if (!Bit_action_ModbasRtu.b0)
  5884   0018FC  B03B               	btfsc	_Bit_action_ModbasRtu^0,0,c
  5885   0018FE  EF83  F00C         	goto	i2u177_41
  5886   001902  EF85  F00C         	goto	i2u177_40
  5887   001906                     i2u177_41:
  5888   001906  EFA4  F00C         	goto	i2l3769
  5889   00190A                     i2u177_40:
  5890   00190A                     
  5891                           ;Modbas_RTU.c: 47:    {;Modbas_RTU.c: 48:    Bit_action_ModbasRtu.b0 = 1;
  5892   00190A  803B               	bsf	_Bit_action_ModbasRtu^0,0,c
  5893   00190C                     
  5894                           ;Modbas_RTU.c: 49:    if (TempModbas == 0x31 )
  5895   00190C  0E31               	movlw	49
  5896   00190E  1802               	xorwf	USART_RXC_vect@TempModbas^0,w,c
  5897   001910  A4D8               	btfss	status,2,c
  5898   001912  EF8D  F00C         	goto	i2u178_41
  5899   001916  EF8F  F00C         	goto	i2u178_40
  5900   00191A                     i2u178_41:
  5901   00191A  EFA1  F00C         	goto	i2l3765
  5902   00191E                     i2u178_40:
  5903   00191E                     
  5904                           ;Modbas_RTU.c: 50:     {;Modbas_RTU.c: 51:     Bit_action_ModbasRtu.b1 = 1;
  5905   00191E  823B               	bsf	_Bit_action_ModbasRtu^0,1,c
  5906   001920  B289               	btfsc	137,1,c	;volatile
  5907   001922  EF95  F00C         	goto	i2u179_41
  5908   001926  EF98  F00C         	goto	i2u179_40
  5909   00192A                     i2u179_41:
  5910   00192A  0E01               	movlw	1
  5911   00192C  EF99  F00C         	goto	i2u179_46
  5912   001930                     i2u179_40:
  5913   001930  0E00               	movlw	0
  5914   001932                     i2u179_46:
  5915   001932  0AFF               	xorlw	255
  5916   001934  6E01               	movwf	??_USART_RXC_vect^0,c
  5917   001936  4601               	rlncf	??_USART_RXC_vect^0,f,c
  5918   001938  5089               	movf	137,w,c	;volatile
  5919   00193A  1801               	xorwf	??_USART_RXC_vect^0,w,c
  5920   00193C  0BFD               	andlw	-3
  5921   00193E  1801               	xorwf	??_USART_RXC_vect^0,w,c
  5922   001940  6E89               	movwf	137,c	;volatile
  5923   001942                     i2l3765:
  5924                           
  5925                           ;Modbas_RTU.c: 55:    quantity_Data_ModbasRtu = 0;
  5926   001942  0E00               	movlw	0
  5927   001944  6E3D               	movwf	_quantity_Data_ModbasRtu^0,c
  5928   001946  8ED5               	bsf	213,7,c	;volatile
  5929   001948                     i2l3769:
  5930                           
  5931                           ;Modbas_RTU.c: 58:   if (Bit_action_ModbasRtu.b1 == 1)
  5932   001948  A23B               	btfss	_Bit_action_ModbasRtu^0,1,c
  5933   00194A  EFA9  F00C         	goto	i2u180_41
  5934   00194E  EFAB  F00C         	goto	i2u180_40
  5935   001952                     i2u180_41:
  5936   001952  EFB4  F00C         	goto	i2l902
  5937   001956                     i2u180_40:
  5938   001956                     
  5939                           ;Modbas_RTU.c: 60:    {;Modbas_RTU.c: 61:      Danie_Rx_ModbasRtu[quantity_Data_ModbasRt
      +                          u] = TempModbas;
  5940   001956  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  5941   001958  243D               	addwf	_quantity_Data_ModbasRtu^0,w,c
  5942   00195A  6ED9               	movwf	fsr2l,c
  5943   00195C  6ADA               	clrf	fsr2h,c
  5944   00195E  0E00               	movlw	high _Danie_Rx_ModbasRtu
  5945   001960  22DA               	addwfc	fsr2h,f,c
  5946   001962  C002  FFDF         	movff	USART_RXC_vect@TempModbas,indf2
  5947   001966                     
  5948                           ;Modbas_RTU.c: 62:      quantity_Data_ModbasRtu ++;
  5949   001966  2A3D               	incf	_quantity_Data_ModbasRtu^0,f,c
  5950   001968                     i2l902:
  5951   001968  0012               	return		;funcret
  5952   00196A                     __end_of_USART_RXC_vect:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function _TMR0_Reload *****************
  5956 ;; Defined at:
  5957 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		None
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_USART_RXC_vect
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text73
  5985   00238C                     __ptext73:
  5986                           	callstack 0
  5987   00238C                     _TMR0_Reload:
  5988                           	callstack 19
  5989   00238C                     
  5990                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = timer0ReloadVal;
  5991   00238C  C047  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5992   002390  0012               	return		;funcret
  5993   002392                     __end_of_TMR0_Reload:
  5994                           	callstack 0
  5995                           
  5996 ;; *************** function _TMR2_ISR *****************
  5997 ;; Defined at:
  5998 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;		None
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;		None
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      void 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;Total ram usage:        0 bytes
  6017 ;; Hardware stack levels used: 1
  6018 ;; Hardware stack levels required when called: 1
  6019 ;; This function calls:
  6020 ;;		Absolute function
  6021 ;;		_TMR2_DefaultInterruptHandler
  6022 ;; This function is called by:
  6023 ;;		_INTERRUPT_InterruptManager
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text74
  6028   0020BA                     __ptext74:
  6029                           	callstack 0
  6030   0020BA                     _TMR2_ISR:
  6031                           	callstack 19
  6032   0020BA                     
  6033                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  6034   0020BA  929E               	bcf	158,1,c	;volatile
  6035   0020BC                     
  6036                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  6037   0020BC  5042               	movf	_TMR2_InterruptHandler^0,w,c
  6038   0020BE  1043               	iorwf	(_TMR2_InterruptHandler+1)^0,w,c
  6039   0020C0  B4D8               	btfsc	status,2,c
  6040   0020C2  EF65  F010         	goto	i2u173_41
  6041   0020C6  EF67  F010         	goto	i2u173_40
  6042   0020CA                     i2u173_41:
  6043   0020CA  EF73  F010         	goto	i2l841
  6044   0020CE                     i2u173_40:
  6045   0020CE                     
  6046                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  6047   0020CE  D802               	call	i2u174_48
  6048   0020D0  EF73  F010         	goto	i2u174_49
  6049   0020D4                     i2u174_48:
  6050   0020D4  0005               	push	
  6051   0020D6  6EFA               	movwf	pclath,c
  6052   0020D8  5042               	movf	_TMR2_InterruptHandler^0,w,c
  6053   0020DA  6EFD               	movwf	tosl,c
  6054   0020DC  5043               	movf	(_TMR2_InterruptHandler+1)^0,w,c
  6055   0020DE  6EFE               	movwf	tosh,c
  6056   0020E0  6AFF               	clrf	tosu,c
  6057   0020E2  50FA               	movf	pclath,w,c
  6058   0020E4  0012               	return		;indir
  6059   0020E6                     i2u174_49:
  6060   0020E6                     i2l841:
  6061   0020E6  0012               	return		;funcret
  6062   0020E8                     __end_of_TMR2_ISR:
  6063                           	callstack 0
  6064                           
  6065 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  6066 ;; Defined at:
  6067 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		None
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_TMR2_Initialize
  6091 ;;		_TMR2_ISR
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text75
  6096   0023D2                     __ptext75:
  6097                           	callstack 0
  6098   0023D2                     _TMR2_DefaultInterruptHandler:
  6099                           	callstack 19
  6100   0023D2  0012               	return		;funcret
  6101   0023D4                     __end_of_TMR2_DefaultInterruptHandler:
  6102                           	callstack 0
  6103                           
  6104 ;; *************** function _TMR0_ISR *****************
  6105 ;; Defined at:
  6106 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;		None
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;Total ram usage:        0 bytes
  6125 ;; Hardware stack levels used: 1
  6126 ;; Hardware stack levels required when called: 7
  6127 ;; This function calls:
  6128 ;;		Absolute function
  6129 ;;		_TIMER0_COMP_vect
  6130 ;;		_TMR0_DefaultInterruptHandler
  6131 ;; This function is called by:
  6132 ;;		_INTERRUPT_InterruptManager
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text76
  6137   001F64                     __ptext76:
  6138                           	callstack 0
  6139   001F64                     _TMR0_ISR:
  6140                           	callstack 13
  6141   001F64                     
  6142                           ;mcc_generated_files/tmr0.c: 132:  TIMER0_COMP_vect () ;
  6143   001F64  ECFF  F010         	call	_TIMER0_COMP_vect	;wreg free
  6144   001F68                     
  6145                           ;mcc_generated_files/tmr0.c: 135:     INTCONbits.TMR0IF = 0;
  6146   001F68  94F2               	bcf	242,2,c	;volatile
  6147   001F6A                     
  6148                           ;mcc_generated_files/tmr0.c: 138:     TMR0L = timer0ReloadVal;
  6149   001F6A  C047  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6150   001F6E                     
  6151                           ;mcc_generated_files/tmr0.c: 140:     if(TMR0_InterruptHandler)
  6152   001F6E  5044               	movf	_TMR0_InterruptHandler^0,w,c
  6153   001F70  1045               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  6154   001F72  B4D8               	btfsc	status,2,c
  6155   001F74  EFBE  F00F         	goto	i2u163_41
  6156   001F78  EFC0  F00F         	goto	i2u163_40
  6157   001F7C                     i2u163_41:
  6158   001F7C  EFCC  F00F         	goto	i2l553
  6159   001F80                     i2u163_40:
  6160   001F80                     
  6161                           ;mcc_generated_files/tmr0.c: 141:     {;mcc_generated_files/tmr0.c: 142:         TMR0_In
      +                          terruptHandler();
  6162   001F80  D802               	call	i2u164_48
  6163   001F82  EFCC  F00F         	goto	i2u164_49
  6164   001F86                     i2u164_48:
  6165   001F86  0005               	push	
  6166   001F88  6EFA               	movwf	pclath,c
  6167   001F8A  5044               	movf	_TMR0_InterruptHandler^0,w,c
  6168   001F8C  6EFD               	movwf	tosl,c
  6169   001F8E  5045               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  6170   001F90  6EFE               	movwf	tosh,c
  6171   001F92  6AFF               	clrf	tosu,c
  6172   001F94  50FA               	movf	pclath,w,c
  6173   001F96  0012               	return		;indir
  6174   001F98                     i2u164_49:
  6175   001F98                     i2l553:
  6176   001F98  0012               	return		;funcret
  6177   001F9A                     __end_of_TMR0_ISR:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6181 ;; Defined at:
  6182 ;;		line 153 in file "mcc_generated_files/tmr0.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;		None
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		None
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;Total ram usage:        0 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_TMR0_Initialize
  6206 ;;		_TMR0_ISR
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text77
  6211   0023D4                     __ptext77:
  6212                           	callstack 0
  6213   0023D4                     _TMR0_DefaultInterruptHandler:
  6214                           	callstack 19
  6215   0023D4  0012               	return		;funcret
  6216   0023D6                     __end_of_TMR0_DefaultInterruptHandler:
  6217                           	callstack 0
  6218                           
  6219 ;; *************** function _TIMER0_COMP_vect *****************
  6220 ;; Defined at:
  6221 ;;		line 24 in file "Modbas_RTU.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;Total ram usage:        0 bytes
  6240 ;; Hardware stack levels used: 1
  6241 ;; Hardware stack levels required when called: 6
  6242 ;; This function calls:
  6243 ;;		_modbasRtu_Slave
  6244 ;; This function is called by:
  6245 ;;		_TMR0_ISR
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text78
  6250   0021FE                     __ptext78:
  6251                           	callstack 0
  6252   0021FE                     _TIMER0_COMP_vect:
  6253                           	callstack 13
  6254   0021FE                     
  6255                           ;Modbas_RTU.c: 26:    Bit_action_ModbasRtu.b0 = 0;
  6256   0021FE  903B               	bcf	_Bit_action_ModbasRtu^0,0,c
  6257   002200  9ED5               	bcf	213,7,c	;volatile
  6258   002202                     
  6259                           ;Modbas_RTU.c: 28:       if ( Bit_action_ModbasRtu.b1)
  6260   002202  A23B               	btfss	_Bit_action_ModbasRtu^0,1,c
  6261   002204  EF06  F011         	goto	i2u158_41
  6262   002208  EF08  F011         	goto	i2u158_40
  6263   00220C                     i2u158_41:
  6264   00220C  EF0C  F011         	goto	i2l891
  6265   002210                     i2u158_40:
  6266   002210                     
  6267                           ;Modbas_RTU.c: 29:        {;Modbas_RTU.c: 30:       Bit_action_ModbasRtu.b1 = 0;
  6268   002210  923B               	bcf	_Bit_action_ModbasRtu^0,1,c
  6269                           
  6270                           ;Modbas_RTU.c: 33:    Bit_action_ModbasRtu.b2 = 1;
  6271   002212  843B               	bsf	_Bit_action_ModbasRtu^0,2,c
  6272   002214                     
  6273                           ;Modbas_RTU.c: 34:             modbasRtu_Slave();
  6274   002214  EC76  F00F         	call	_modbasRtu_Slave	;wreg free
  6275   002218                     i2l891:
  6276   002218  0012               	return		;funcret
  6277   00221A                     __end_of_TIMER0_COMP_vect:
  6278                           	callstack 0
  6279                           
  6280 ;; *************** function _modbasRtu_Slave *****************
  6281 ;; Defined at:
  6282 ;;		line 443 in file "Modbas_RTU.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;Total ram usage:        0 bytes
  6301 ;; Hardware stack levels used: 1
  6302 ;; Hardware stack levels required when called: 5
  6303 ;; This function calls:
  6304 ;;		_Data_integrity
  6305 ;;		_Error_modbasRtu
  6306 ;;		_modbasRtu_Answer
  6307 ;; This function is called by:
  6308 ;;		_TIMER0_COMP_vect
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text79
  6313   001EEC                     __ptext79:
  6314                           	callstack 0
  6315   001EEC                     _modbasRtu_Slave:
  6316                           	callstack 13
  6317   001EEC                     
  6318                           ;Modbas_RTU.c: 445:     if (Bit_action_ModbasRtu.b2)
  6319   001EEC  A43B               	btfss	_Bit_action_ModbasRtu^0,2,c
  6320   001EEE  EF7B  F00F         	goto	i2u154_41
  6321   001EF2  EF7D  F00F         	goto	i2u154_40
  6322   001EF6                     i2u154_41:
  6323   001EF6  EF94  F00F         	goto	i2l1035
  6324   001EFA                     i2u154_40:
  6325   001EFA                     
  6326                           ;Modbas_RTU.c: 446:     {;Modbas_RTU.c: 447:      if ( Data_integrity() == 0 )
  6327   001EFA  ECE3  F00D         	call	_Data_integrity	;wreg free
  6328   001EFE  0900               	iorlw	0
  6329   001F00  A4D8               	btfss	status,2,c
  6330   001F02  EF85  F00F         	goto	i2u155_41
  6331   001F06  EF87  F00F         	goto	i2u155_40
  6332   001F0A                     i2u155_41:
  6333   001F0A  EF92  F00F         	goto	i2l3511
  6334   001F0E                     i2u155_40:
  6335   001F0E                     
  6336                           ;Modbas_RTU.c: 448:      {;Modbas_RTU.c: 451:       Error_modbasRtu (0x04);
  6337   001F0E  0E04               	movlw	4
  6338   001F10  EC39  F011         	call	_Error_modbasRtu
  6339   001F14                     
  6340                           ;Modbas_RTU.c: 452:       USART_UDR_vect=1;
  6341   001F14  0E01               	movlw	1
  6342   001F16  0100               	movlb	0	; () banked
  6343   001F18  6F8C               	movwf	_USART_UDR_vect& (0+255),b
  6344   001F1A                     
  6345                           ; BSR set to: 0
  6346                           ;Modbas_RTU.c: 453:             Temp_ModbasRtu = 0;
  6347   001F1A  0E00               	movlw	0
  6348   001F1C  6E3C               	movwf	_Temp_ModbasRtu^0,c
  6349   001F1E                     
  6350                           ; BSR set to: 0
  6351                           ;Modbas_RTU.c: 454:             Bit_action_ModbasRtu.b2 = 0;
  6352   001F1E  943B               	bcf	_Bit_action_ModbasRtu^0,2,c
  6353                           
  6354                           ;Modbas_RTU.c: 456:      }
  6355   001F20  EF94  F00F         	goto	i2l1035
  6356   001F24                     i2l3511:
  6357                           
  6358                           ;Modbas_RTU.c: 458:      {;Modbas_RTU.c: 459:       modbasRtu_Answer();
  6359   001F24  ECCC  F008         	call	_modbasRtu_Answer	;wreg free
  6360   001F28                     i2l1035:
  6361   001F28  0012               	return		;funcret
  6362   001F2A                     __end_of_modbasRtu_Slave:
  6363                           	callstack 0
  6364                           
  6365 ;; *************** function _modbasRtu_Answer *****************
  6366 ;; Defined at:
  6367 ;;		line 350 in file "Modbas_RTU.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;Total ram usage:        2 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; Hardware stack levels required when called: 4
  6388 ;; This function calls:
  6389 ;;		_Changing_Discrete_Output
  6390 ;;		_Error_modbasRtu
  6391 ;;		_Read_analog_input
  6392 ;;		_Reading_Discrete_Output
  6393 ;;		_analog_output_recording
  6394 ;; This function is called by:
  6395 ;;		_modbasRtu_Slave
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text80
  6400   001198                     __ptext80:
  6401                           	callstack 0
  6402   001198                     _modbasRtu_Answer:
  6403                           	callstack 13
  6404   001198                     
  6405                           ;Modbas_RTU.c: 352:    Temp_ModbasRtu = 0;
  6406   001198  0E00               	movlw	0
  6407   00119A  6E3C               	movwf	_Temp_ModbasRtu^0,c
  6408                           
  6409                           ;Modbas_RTU.c: 353:    switch (Danie_Rx_ModbasRtu[1])
  6410   00119C  EF0F  F009         	goto	i2l3431
  6411   0011A0                     i2l3415:
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;Modbas_RTU.c: 356:            Reading_Discrete_Output(Danie_ModbasRtu_Binary_Output,10)
      +                          ;
  6415   0011A0  0E3E               	movlw	low _Danie_ModbasRtu_Binary_Output
  6416   0011A2  6E0E               	movwf	Reading_Discrete_Output@Massiv^0,c
  6417   0011A4  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  6418   0011A6  6E0F               	movwf	(Reading_Discrete_Output@Massiv+1)^0,c
  6419   0011A8  0E0A               	movlw	10
  6420   0011AA  6E10               	movwf	Reading_Discrete_Output@Number_^0,c
  6421   0011AC  EC11  F008         	call	_Reading_Discrete_Output	;wreg free
  6422                           
  6423                           ;Modbas_RTU.c: 357:            break;
  6424   0011B0  EF4D  F009         	goto	i2l3433
  6425   0011B4                     i2l3417:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;Modbas_RTU.c: 359:            Reading_Discrete_Output(Danie_ModbasRtu_Binary_input,10);
  6429   0011B4  0E40               	movlw	low _Danie_ModbasRtu_Binary_input
  6430   0011B6  6E0E               	movwf	Reading_Discrete_Output@Massiv^0,c
  6431   0011B8  0E00               	movlw	high _Danie_ModbasRtu_Binary_input
  6432   0011BA  6E0F               	movwf	(Reading_Discrete_Output@Massiv+1)^0,c
  6433   0011BC  0E0A               	movlw	10
  6434   0011BE  6E10               	movwf	Reading_Discrete_Output@Number_^0,c
  6435   0011C0  EC11  F008         	call	_Reading_Discrete_Output	;wreg free
  6436                           
  6437                           ;Modbas_RTU.c: 360:            break;
  6438   0011C4  EF4D  F009         	goto	i2l3433
  6439   0011C8                     i2l3419:
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;Modbas_RTU.c: 362:            Read_analog_input( Danie_ModbasRtu_analog_Output,10,0);
  6443   0011C8  0EAB               	movlw	low _Danie_ModbasRtu_analog_Output
  6444   0011CA  6E0E               	movwf	Read_analog_input@Massiv^0,c
  6445   0011CC  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  6446   0011CE  6E0F               	movwf	(Read_analog_input@Massiv+1)^0,c
  6447   0011D0  0E0A               	movlw	10
  6448   0011D2  6E10               	movwf	Read_analog_input@Number_^0,c
  6449   0011D4  0E00               	movlw	0
  6450   0011D6  6E11               	movwf	Read_analog_input@Vt^0,c
  6451   0011D8  EC52  F009         	call	_Read_analog_input	;wreg free
  6452                           
  6453                           ;Modbas_RTU.c: 363:     break;
  6454   0011DC  EF4D  F009         	goto	i2l3433
  6455   0011E0                     i2l3421:
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;Modbas_RTU.c: 365:            Read_analog_input(Danie_ModbasRtu_analog_input,10,1);
  6459   0011E0  0EBF               	movlw	low _Danie_ModbasRtu_analog_input
  6460   0011E2  6E0E               	movwf	Read_analog_input@Massiv^0,c
  6461   0011E4  0E00               	movlw	high _Danie_ModbasRtu_analog_input
  6462   0011E6  6E0F               	movwf	(Read_analog_input@Massiv+1)^0,c
  6463   0011E8  0E0A               	movlw	10
  6464   0011EA  6E10               	movwf	Read_analog_input@Number_^0,c
  6465   0011EC  0E01               	movlw	1
  6466   0011EE  6E11               	movwf	Read_analog_input@Vt^0,c
  6467   0011F0  EC52  F009         	call	_Read_analog_input	;wreg free
  6468                           
  6469                           ;Modbas_RTU.c: 366:            break;
  6470   0011F4  EF4D  F009         	goto	i2l3433
  6471   0011F8                     i2l3423:
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;Modbas_RTU.c: 368:            Changing_Discrete_Output();
  6475   0011F8  EC72  F00D         	call	_Changing_Discrete_Output	;wreg free
  6476                           
  6477                           ;Modbas_RTU.c: 369:            break;
  6478   0011FC  EF4D  F009         	goto	i2l3433
  6479   001200                     i2l3425:
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;Modbas_RTU.c: 371:            analog_output_recording();
  6483   001200  EC7E  F00E         	call	_analog_output_recording	;wreg free
  6484                           
  6485                           ;Modbas_RTU.c: 372:            break;
  6486   001204  EF4D  F009         	goto	i2l3433
  6487   001208                     i2l998:
  6488                           
  6489                           ; BSR set to: 0
  6490   001208  F000               	nop		;# 
  6491                           
  6492                           ;Modbas_RTU.c: 375:             break;
  6493   00120A  EF4D  F009         	goto	i2l3433
  6494   00120E                     i2l999:
  6495                           
  6496                           ; BSR set to: 0
  6497   00120E  F000               	nop		;# 
  6498                           
  6499                           ;Modbas_RTU.c: 379:             break;
  6500   001210  EF4D  F009         	goto	i2l3433
  6501   001214                     i2l3427:
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;Modbas_RTU.c: 398:             Error_modbasRtu (0x01);
  6505   001214  0E01               	movlw	1
  6506   001216  EC39  F011         	call	_Error_modbasRtu
  6507                           
  6508                           ;Modbas_RTU.c: 399:             break;
  6509   00121A  EF4D  F009         	goto	i2l3433
  6510   00121E                     i2l3431:
  6511   00121E  0100               	movlb	0	; () banked
  6512   001220  518E               	movf	(_Danie_Rx_ModbasRtu+1)& (0+255),w,b
  6513   001222  6E1C               	movwf	??_modbasRtu_Answer^0,c
  6514   001224  6A1D               	clrf	(??_modbasRtu_Answer+1)^0,c
  6515                           
  6516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6517                           ; Switch size 1, requested type "simple"
  6518                           ; Number of cases is 1, Range of values is 0 to 0
  6519                           ; switch strategies available:
  6520                           ; Name         Instructions Cycles
  6521                           ; simple_byte            4     3 (average)
  6522                           ;	Chosen strategy is simple_byte
  6523   001226  501D               	movf	(??_modbasRtu_Answer+1)^0,w,c
  6524   001228  0A00               	xorlw	0	; case 0
  6525   00122A  B4D8               	btfsc	status,2,c
  6526   00122C  EF1A  F009         	goto	i2l4889
  6527   001230  EF0A  F009         	goto	i2l3427
  6528   001234                     i2l4889:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ; Switch size 1, requested type "simple"
  6532                           ; Number of cases is 12, Range of values is 1 to 24
  6533                           ; switch strategies available:
  6534                           ; Name         Instructions Cycles
  6535                           ; simple_byte           37    19 (average)
  6536                           ;	Chosen strategy is simple_byte
  6537   001234  501C               	movf	??_modbasRtu_Answer^0,w,c
  6538   001236  0A01               	xorlw	1	; case 1
  6539   001238  B4D8               	btfsc	status,2,c
  6540   00123A  EFD0  F008         	goto	i2l3415
  6541   00123E  0A03               	xorlw	3	; case 2
  6542   001240  B4D8               	btfsc	status,2,c
  6543   001242  EFDA  F008         	goto	i2l3417
  6544   001246  0A01               	xorlw	1	; case 3
  6545   001248  B4D8               	btfsc	status,2,c
  6546   00124A  EFE4  F008         	goto	i2l3419
  6547   00124E  0A07               	xorlw	7	; case 4
  6548   001250  B4D8               	btfsc	status,2,c
  6549   001252  EFF0  F008         	goto	i2l3421
  6550   001256  0A01               	xorlw	1	; case 5
  6551   001258  B4D8               	btfsc	status,2,c
  6552   00125A  EFFC  F008         	goto	i2l3423
  6553   00125E  0A03               	xorlw	3	; case 6
  6554   001260  B4D8               	btfsc	status,2,c
  6555   001262  EF00  F009         	goto	i2l3425
  6556   001266  0A09               	xorlw	9	; case 15
  6557   001268  B4D8               	btfsc	status,2,c
  6558   00126A  EF04  F009         	goto	i2l998
  6559   00126E  0A1F               	xorlw	31	; case 16
  6560   001270  B4D8               	btfsc	status,2,c
  6561   001272  EF07  F009         	goto	i2l999
  6562   001276  0A05               	xorlw	5	; case 21
  6563   001278  B4D8               	btfsc	status,2,c
  6564   00127A  EF4D  F009         	goto	i2l3433
  6565   00127E  0A03               	xorlw	3	; case 22
  6566   001280  B4D8               	btfsc	status,2,c
  6567   001282  EF4D  F009         	goto	i2l3433
  6568   001286  0A01               	xorlw	1	; case 23
  6569   001288  B4D8               	btfsc	status,2,c
  6570   00128A  EF4D  F009         	goto	i2l3433
  6571   00128E  0A0F               	xorlw	15	; case 24
  6572   001290  B4D8               	btfsc	status,2,c
  6573   001292  EF4D  F009         	goto	i2l3433
  6574   001296  EF0A  F009         	goto	i2l3427
  6575   00129A                     i2l3433:
  6576                           
  6577                           ;Modbas_RTU.c: 402:      USART_UDR_vect=1;
  6578   00129A  0E01               	movlw	1
  6579   00129C  0100               	movlb	0	; () banked
  6580   00129E  6F8C               	movwf	_USART_UDR_vect& (0+255),b
  6581   0012A0                     
  6582                           ; BSR set to: 0
  6583                           ;Modbas_RTU.c: 403:   Bit_action_ModbasRtu.b2 = 0;
  6584   0012A0  943B               	bcf	_Bit_action_ModbasRtu^0,2,c
  6585   0012A2                     
  6586                           ; BSR set to: 0
  6587   0012A2  0012               	return		;funcret
  6588   0012A4                     __end_of_modbasRtu_Answer:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _analog_output_recording *****************
  6592 ;; Defined at:
  6593 ;;		line 309 in file "Modbas_RTU.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  address         2   13[COMRAM] int 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;Total ram usage:        2 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; Hardware stack levels required when called: 3
  6614 ;; This function calls:
  6615 ;;		_Error_modbasRtu
  6616 ;;		_ModbasRtu_Register_address
  6617 ;; This function is called by:
  6618 ;;		_modbasRtu_Answer
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text81
  6623   001CFC                     __ptext81:
  6624                           	callstack 0
  6625   001CFC                     _analog_output_recording:
  6626                           	callstack 13
  6627   001CFC                     
  6628                           ;Modbas_RTU.c: 311:  register int address;;Modbas_RTU.c: 312:  address = ModbasRtu_Regis
      +                          ter_address(3);
  6629   001CFC  0E03               	movlw	3
  6630   001CFE  EC95  F00F         	call	_ModbasRtu_Register_address
  6631   001D02  C001  F00E         	movff	?_ModbasRtu_Register_address,analog_output_recording@address
  6632   001D06  C002  F00F         	movff	?_ModbasRtu_Register_address+1,analog_output_recording@address+1
  6633   001D0A                     
  6634                           ;Modbas_RTU.c: 313:  if ( address > 10 )
  6635   001D0A  BE0F               	btfsc	(analog_output_recording@address+1)^0,7,c
  6636   001D0C  EF91  F00E         	goto	i2u146_41
  6637   001D10  500F               	movf	(analog_output_recording@address+1)^0,w,c
  6638   001D12  E109               	bnz	i2u146_40
  6639   001D14  0E0B               	movlw	11
  6640   001D16  5C0E               	subwf	analog_output_recording@address^0,w,c
  6641   001D18  A0D8               	btfss	status,0,c
  6642   001D1A  EF91  F00E         	goto	i2u146_41
  6643   001D1E  EF93  F00E         	goto	i2u146_40
  6644   001D22                     i2u146_41:
  6645   001D22  EF98  F00E         	goto	i2l3379
  6646   001D26                     i2u146_40:
  6647   001D26                     
  6648                           ;Modbas_RTU.c: 314:   {;Modbas_RTU.c: 315:   Error_modbasRtu (0x02);
  6649   001D26  0E02               	movlw	2
  6650   001D28  EC39  F011         	call	_Error_modbasRtu
  6651                           
  6652                           ;Modbas_RTU.c: 316:   }
  6653   001D2C  EFA8  F00E         	goto	i2l981
  6654   001D30                     i2l3379:
  6655                           
  6656                           ;Modbas_RTU.c: 318:   {;Modbas_RTU.c: 319:     Danie_ModbasRtu_analog_Output [address] =
      +                           ModbasRtu_Register_address(5);
  6657   001D30  0E05               	movlw	5
  6658   001D32  EC95  F00F         	call	_ModbasRtu_Register_address
  6659   001D36  90D8               	bcf	status,0,c
  6660   001D38  340E               	rlcf	analog_output_recording@address^0,w,c
  6661   001D3A  6ED9               	movwf	fsr2l,c
  6662   001D3C  340F               	rlcf	(analog_output_recording@address+1)^0,w,c
  6663   001D3E  6EDA               	movwf	fsr2h,c
  6664   001D40  0EAB               	movlw	low _Danie_ModbasRtu_analog_Output
  6665   001D42  26D9               	addwf	fsr2l,f,c
  6666   001D44  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  6667   001D46  22DA               	addwfc	fsr2h,f,c
  6668   001D48  C001  FFDE         	movff	?_ModbasRtu_Register_address,postinc2
  6669   001D4C  C002  FFDD         	movff	?_ModbasRtu_Register_address+1,postdec2
  6670   001D50                     i2l981:
  6671   001D50  0012               	return		;funcret
  6672   001D52                     __end_of_analog_output_recording:
  6673                           	callstack 0
  6674                           
  6675 ;; *************** function _Reading_Discrete_Output *****************
  6676 ;; Defined at:
  6677 ;;		line 210 in file "Modbas_RTU.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  Massiv          2   13[COMRAM] PTR unsigned char 
  6680 ;;		 -> Danie_ModbasRtu_Binary_input(2), Danie_ModbasRtu_Binary_Output(2), 
  6681 ;;  Number_         1   15[COMRAM] unsigned char 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  address         2   25[COMRAM] volatile unsigned int 
  6684 ;;  Number_bits     2   23[COMRAM] volatile unsigned int 
  6685 ;;  Temp3           1   22[COMRAM] unsigned char 
  6686 ;;  address2        1   21[COMRAM] unsigned char 
  6687 ;;  Temp2           1   20[COMRAM] unsigned char 
  6688 ;;  Temp            1   19[COMRAM] unsigned char 
  6689 ;;  Danie           1   18[COMRAM] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      void 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6699 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;Total ram usage:       14 bytes
  6704 ;; Hardware stack levels used: 1
  6705 ;; Hardware stack levels required when called: 3
  6706 ;; This function calls:
  6707 ;;		_Error_modbasRtu
  6708 ;;		_ModbasRtu_Register_address
  6709 ;;		_check_sum
  6710 ;; This function is called by:
  6711 ;;		_modbasRtu_Answer
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text82
  6716   001022                     __ptext82:
  6717                           	callstack 0
  6718   001022                     _Reading_Discrete_Output:
  6719                           	callstack 13
  6720   001022                     
  6721                           ;Modbas_RTU.c: 210:  void Reading_Discrete_Output(unsigned char* Massiv, register unsign
      +                          ed char Number_);Modbas_RTU.c: 211:   {;Modbas_RTU.c: 212:  volatile unsigned int addres
      +                          s,Number_bits;;Modbas_RTU.c: 213:  register unsigned char Temp = 0,Danie,Temp2 = 0,addre
      +                          ss2 = 0,Temp3 = 2;
  6722   001022  0E00               	movlw	0
  6723   001024  6E14               	movwf	Reading_Discrete_Output@Temp^0,c
  6724   001026  0E00               	movlw	0
  6725   001028  6E15               	movwf	Reading_Discrete_Output@Temp2^0,c
  6726   00102A  0E00               	movlw	0
  6727   00102C  6E16               	movwf	Reading_Discrete_Output@address2^0,c
  6728   00102E  0E02               	movlw	2
  6729   001030  6E17               	movwf	Reading_Discrete_Output@Temp3^0,c
  6730   001032                     
  6731                           ;Modbas_RTU.c: 214:  address = ModbasRtu_Register_address(3);
  6732   001032  0E03               	movlw	3
  6733   001034  EC95  F00F         	call	_ModbasRtu_Register_address
  6734   001038  C001  F01A         	movff	?_ModbasRtu_Register_address,Reading_Discrete_Output@address	;volatile
  6735   00103C  C002  F01B         	movff	?_ModbasRtu_Register_address+1,Reading_Discrete_Output@address+1	;volatile
  6736   001040                     
  6737                           ;Modbas_RTU.c: 215:  if ( address > Number_ )
  6738   001040  5010               	movf	Reading_Discrete_Output@Number_^0,w,c
  6739   001042  6E11               	movwf	??_Reading_Discrete_Output^0,c
  6740   001044  6A12               	clrf	(??_Reading_Discrete_Output+1)^0,c
  6741   001046  501A               	movf	Reading_Discrete_Output@address^0,w,c	;volatile
  6742   001048  5C11               	subwf	??_Reading_Discrete_Output^0,w,c
  6743   00104A  501B               	movf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  6744   00104C  5812               	subwfb	(??_Reading_Discrete_Output+1)^0,w,c
  6745   00104E  B0D8               	btfsc	status,0,c
  6746   001050  EF2C  F008         	goto	i2u134_41
  6747   001054  EF2E  F008         	goto	i2u134_40
  6748   001058                     i2u134_41:
  6749   001058  EF33  F008         	goto	i2l3285
  6750   00105C                     i2u134_40:
  6751   00105C                     
  6752                           ;Modbas_RTU.c: 216:         {;Modbas_RTU.c: 217:            Error_modbasRtu (0x02);
  6753   00105C  0E02               	movlw	2
  6754   00105E  EC39  F011         	call	_Error_modbasRtu
  6755                           
  6756                           ;Modbas_RTU.c: 218:         }
  6757   001062  EFCB  F008         	goto	i2l966
  6758   001066                     i2l3285:
  6759                           
  6760                           ;Modbas_RTU.c: 220:         {;Modbas_RTU.c: 221:            Number_bits = ModbasRtu_Regi
      +                          ster_address(5);
  6761   001066  0E05               	movlw	5
  6762   001068  EC95  F00F         	call	_ModbasRtu_Register_address
  6763   00106C  C001  F018         	movff	?_ModbasRtu_Register_address,Reading_Discrete_Output@Number_bits	;volatile
  6764   001070  C002  F019         	movff	?_ModbasRtu_Register_address+1,Reading_Discrete_Output@Number_bits+1	;volatile
  6765                           
  6766                           ;Modbas_RTU.c: 222:            while (address >= 8)
  6767   001074  EF43  F008         	goto	i2l3291
  6768   001078                     i2l3287:
  6769                           
  6770                           ;Modbas_RTU.c: 223:                {;Modbas_RTU.c: 224:                  address = addre
      +                          ss - 8;
  6771   001078  0EF8               	movlw	248
  6772   00107A  241A               	addwf	Reading_Discrete_Output@address^0,w,c	;volatile
  6773   00107C  6E1A               	movwf	Reading_Discrete_Output@address^0,c	;volatile
  6774   00107E  0EFF               	movlw	255
  6775   001080  201B               	addwfc	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  6776   001082  6E1B               	movwf	(Reading_Discrete_Output@address+1)^0,c	;volatile
  6777   001084                     
  6778                           ;Modbas_RTU.c: 225:                  Temp ++;
  6779   001084  2A14               	incf	Reading_Discrete_Output@Temp^0,f,c
  6780   001086                     i2l3291:
  6781                           
  6782                           ;Modbas_RTU.c: 222:            while (address >= 8)
  6783   001086  501B               	movf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  6784   001088  E107               	bnz	i2u135_41
  6785   00108A  0E08               	movlw	8
  6786   00108C  5C1A               	subwf	Reading_Discrete_Output@address^0,w,c	;volatile
  6787   00108E  B0D8               	btfsc	status,0,c
  6788   001090  EF4C  F008         	goto	i2u135_41
  6789   001094  EF4E  F008         	goto	i2u135_40
  6790   001098                     i2u135_41:
  6791   001098  EF3C  F008         	goto	i2l3287
  6792   00109C                     i2u135_40:
  6793   00109C                     i2l3293:
  6794                           
  6795                           ;Modbas_RTU.c: 227:            Danie = Massiv [ Temp ];
  6796   00109C  5014               	movf	Reading_Discrete_Output@Temp^0,w,c
  6797   00109E  240E               	addwf	Reading_Discrete_Output@Massiv^0,w,c
  6798   0010A0  6ED9               	movwf	fsr2l,c
  6799   0010A2  0E00               	movlw	0
  6800   0010A4  200F               	addwfc	(Reading_Discrete_Output@Massiv+1)^0,w,c
  6801   0010A6  6EDA               	movwf	fsr2h,c
  6802   0010A8  50DF               	movf	indf2,w,c
  6803   0010AA  6E13               	movwf	Reading_Discrete_Output@Danie^0,c
  6804                           
  6805                           ;Modbas_RTU.c: 231:            while ( Number_bits > 0)
  6806   0010AC  EFA9  F008         	goto	i2l3321
  6807   0010B0                     i2l3295:
  6808                           
  6809                           ;Modbas_RTU.c: 232:              {;Modbas_RTU.c: 233:                    Number_bits --;
  6810   0010B0  0618               	decf	Reading_Discrete_Output@Number_bits^0,f,c	;volatile
  6811   0010B2  A0D8               	btfss	status,0,c
  6812   0010B4  0619               	decf	(Reading_Discrete_Output@Number_bits+1)^0,f,c	;volatile
  6813   0010B6                     
  6814                           ;Modbas_RTU.c: 234:                    if ( Danie & (1 << address) )
  6815   0010B6  C01A  F011         	movff	Reading_Discrete_Output@address,??_Reading_Discrete_Output	;volatile
  6816   0010BA  0E01               	movlw	1
  6817   0010BC  6E12               	movwf	(??_Reading_Discrete_Output+1)^0,c
  6818   0010BE  2A11               	incf	??_Reading_Discrete_Output^0,f,c
  6819   0010C0  EF64  F008         	goto	i2u136_44
  6820   0010C4                     i2u136_45:
  6821   0010C4  90D8               	bcf	status,0,c
  6822   0010C6  3612               	rlcf	(??_Reading_Discrete_Output+1)^0,f,c
  6823   0010C8                     i2u136_44:
  6824   0010C8  2E11               	decfsz	??_Reading_Discrete_Output^0,f,c
  6825   0010CA  EF62  F008         	goto	i2u136_45
  6826   0010CE  5012               	movf	(??_Reading_Discrete_Output+1)^0,w,c
  6827   0010D0  1413               	andwf	Reading_Discrete_Output@Danie^0,w,c
  6828   0010D2  0900               	iorlw	0
  6829   0010D4  B4D8               	btfsc	status,2,c
  6830   0010D6  EF6F  F008         	goto	i2u137_41
  6831   0010DA  EF71  F008         	goto	i2u137_40
  6832   0010DE                     i2u137_41:
  6833   0010DE  EF7F  F008         	goto	i2l3301
  6834   0010E2                     i2u137_40:
  6835   0010E2                     
  6836                           ;Modbas_RTU.c: 235:                        {;Modbas_RTU.c: 236:                         
      +                           Temp2 |=(1<<address2);
  6837   0010E2  C016  F011         	movff	Reading_Discrete_Output@address2,??_Reading_Discrete_Output
  6838   0010E6  0E01               	movlw	1
  6839   0010E8  6E12               	movwf	(??_Reading_Discrete_Output+1)^0,c
  6840   0010EA  2A11               	incf	??_Reading_Discrete_Output^0,f,c
  6841   0010EC  EF7A  F008         	goto	i2u138_44
  6842   0010F0                     i2u138_45:
  6843   0010F0  90D8               	bcf	status,0,c
  6844   0010F2  3612               	rlcf	(??_Reading_Discrete_Output+1)^0,f,c
  6845   0010F4                     i2u138_44:
  6846   0010F4  2E11               	decfsz	??_Reading_Discrete_Output^0,f,c
  6847   0010F6  EF78  F008         	goto	i2u138_45
  6848   0010FA  5012               	movf	(??_Reading_Discrete_Output+1)^0,w,c
  6849   0010FC  1215               	iorwf	Reading_Discrete_Output@Temp2^0,f,c
  6850   0010FE                     i2l3301:
  6851                           
  6852                           ;Modbas_RTU.c: 238:                    address2 ++;
  6853   0010FE  2A16               	incf	Reading_Discrete_Output@address2^0,f,c
  6854   001100                     
  6855                           ;Modbas_RTU.c: 239:                    address ++;
  6856   001100  4A1A               	infsnz	Reading_Discrete_Output@address^0,f,c	;volatile
  6857   001102  2A1B               	incf	(Reading_Discrete_Output@address+1)^0,f,c	;volatile
  6858                           
  6859                           ;Modbas_RTU.c: 240:                    if (address2 == 8 )
  6860   001104  0E08               	movlw	8
  6861   001106  1816               	xorwf	Reading_Discrete_Output@address2^0,w,c
  6862   001108  A4D8               	btfss	status,2,c
  6863   00110A  EF89  F008         	goto	i2u139_41
  6864   00110E  EF8B  F008         	goto	i2u139_40
  6865   001112                     i2u139_41:
  6866   001112  EF98  F008         	goto	i2l3313
  6867   001116                     i2u139_40:
  6868   001116                     
  6869                           ;Modbas_RTU.c: 241:                        {;Modbas_RTU.c: 242:                         
      +                           address2 = 0;
  6870   001116  0E00               	movlw	0
  6871   001118  6E16               	movwf	Reading_Discrete_Output@address2^0,c
  6872   00111A                     
  6873                           ;Modbas_RTU.c: 243:                          Temp3 ++;
  6874   00111A  2A17               	incf	Reading_Discrete_Output@Temp3^0,f,c
  6875   00111C                     
  6876                           ;Modbas_RTU.c: 244:                          Danie_Rx_ModbasRtu[Temp3] = Temp2;
  6877   00111C  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  6878   00111E  2417               	addwf	Reading_Discrete_Output@Temp3^0,w,c
  6879   001120  6ED9               	movwf	fsr2l,c
  6880   001122  6ADA               	clrf	fsr2h,c
  6881   001124  0E00               	movlw	high _Danie_Rx_ModbasRtu
  6882   001126  22DA               	addwfc	fsr2h,f,c
  6883   001128  C015  FFDF         	movff	Reading_Discrete_Output@Temp2,indf2
  6884   00112C                     
  6885                           ;Modbas_RTU.c: 245:                          Temp2 = 0;
  6886   00112C  0E00               	movlw	0
  6887   00112E  6E15               	movwf	Reading_Discrete_Output@Temp2^0,c
  6888   001130                     i2l3313:
  6889                           
  6890                           ;Modbas_RTU.c: 247:                    if ( address == 8)
  6891   001130  0E08               	movlw	8
  6892   001132  181A               	xorwf	Reading_Discrete_Output@address^0,w,c	;volatile
  6893   001134  101B               	iorwf	(Reading_Discrete_Output@address+1)^0,w,c	;volatile
  6894   001136  A4D8               	btfss	status,2,c
  6895   001138  EFA0  F008         	goto	i2u140_41
  6896   00113C  EFA2  F008         	goto	i2u140_40
  6897   001140                     i2u140_41:
  6898   001140  EFA9  F008         	goto	i2l3321
  6899   001144                     i2u140_40:
  6900   001144                     
  6901                           ;Modbas_RTU.c: 248:                        {;Modbas_RTU.c: 249:                         
      +                            address = 0;
  6902   001144  0E00               	movlw	0
  6903   001146  6E1B               	movwf	(Reading_Discrete_Output@address+1)^0,c	;volatile
  6904   001148  0E00               	movlw	0
  6905   00114A  6E1A               	movwf	Reading_Discrete_Output@address^0,c	;volatile
  6906   00114C                     
  6907                           ;Modbas_RTU.c: 250:                           Temp++;
  6908   00114C  2A14               	incf	Reading_Discrete_Output@Temp^0,f,c
  6909   00114E  EF4E  F008         	goto	i2l3293
  6910   001152                     i2l3321:
  6911                           
  6912                           ;Modbas_RTU.c: 231:            while ( Number_bits > 0)
  6913   001152  5018               	movf	Reading_Discrete_Output@Number_bits^0,w,c	;volatile
  6914   001154  1019               	iorwf	(Reading_Discrete_Output@Number_bits+1)^0,w,c	;volatile
  6915   001156  A4D8               	btfss	status,2,c
  6916   001158  EFB0  F008         	goto	i2u141_41
  6917   00115C  EFB2  F008         	goto	i2u141_40
  6918   001160                     i2u141_41:
  6919   001160  EF58  F008         	goto	i2l3295
  6920   001164                     i2u141_40:
  6921   001164                     
  6922                           ;Modbas_RTU.c: 254:            if ( address2 > 0 )
  6923   001164  5016               	movf	Reading_Discrete_Output@address2^0,w,c
  6924   001166  B4D8               	btfsc	status,2,c
  6925   001168  EFB8  F008         	goto	i2u142_41
  6926   00116C  EFBA  F008         	goto	i2u142_40
  6927   001170                     i2u142_41:
  6928   001170  EFC3  F008         	goto	i2l3329
  6929   001174                     i2u142_40:
  6930   001174                     
  6931                           ;Modbas_RTU.c: 255:             {;Modbas_RTU.c: 256:               Temp3 ++;
  6932   001174  2A17               	incf	Reading_Discrete_Output@Temp3^0,f,c
  6933   001176                     
  6934                           ;Modbas_RTU.c: 257:               Danie_Rx_ModbasRtu[Temp3] = Temp2;
  6935   001176  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  6936   001178  2417               	addwf	Reading_Discrete_Output@Temp3^0,w,c
  6937   00117A  6ED9               	movwf	fsr2l,c
  6938   00117C  6ADA               	clrf	fsr2h,c
  6939   00117E  0E00               	movlw	high _Danie_Rx_ModbasRtu
  6940   001180  22DA               	addwfc	fsr2h,f,c
  6941   001182  C015  FFDF         	movff	Reading_Discrete_Output@Temp2,indf2
  6942   001186                     i2l3329:
  6943                           
  6944                           ;Modbas_RTU.c: 261:            Danie_Rx_ModbasRtu[2] = Temp3 - 2;
  6945   001186  5017               	movf	Reading_Discrete_Output@Temp3^0,w,c
  6946   001188  0FFE               	addlw	254
  6947   00118A  0100               	movlb	0	; () banked
  6948   00118C  6F8F               	movwf	(_Danie_Rx_ModbasRtu+2)& (0+255),b
  6949   00118E                     
  6950                           ; BSR set to: 0
  6951                           ;Modbas_RTU.c: 262:            Temp3 ++;
  6952   00118E  2A17               	incf	Reading_Discrete_Output@Temp3^0,f,c
  6953   001190                     
  6954                           ; BSR set to: 0
  6955                           ;Modbas_RTU.c: 263:            check_sum ( Temp3);
  6956   001190  5017               	movf	Reading_Discrete_Output@Temp3^0,w,c
  6957   001192  EC35  F00F         	call	_check_sum
  6958   001196                     i2l966:
  6959   001196  0012               	return		;funcret
  6960   001198                     __end_of_Reading_Discrete_Output:
  6961                           	callstack 0
  6962                           
  6963 ;; *************** function _Read_analog_input *****************
  6964 ;; Defined at:
  6965 ;;		line 271 in file "Modbas_RTU.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  Massiv          2   13[COMRAM] PTR unsigned char 
  6968 ;;		 -> Danie_ModbasRtu_analog_Output(20), Danie_ModbasRtu_analog_input(20), Read_analog_input@Danie(2), 
  6969 ;;  Number_         1   15[COMRAM] unsigned char 
  6970 ;;  Vt              1   16[COMRAM] unsigned char 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  Number_bits     2   23[COMRAM] volatile unsigned int 
  6973 ;;  address         2   21[COMRAM] volatile unsigned int 
  6974 ;;  Danie           2   19[COMRAM] volatile unsigned int 
  6975 ;;  Adress          1   25[COMRAM] volatile unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;Total ram usage:       13 bytes
  6990 ;; Hardware stack levels used: 1
  6991 ;; Hardware stack levels required when called: 3
  6992 ;; This function calls:
  6993 ;;		_Error_modbasRtu
  6994 ;;		_ModbasRtu_Register_address
  6995 ;;		_check_sum
  6996 ;; This function is called by:
  6997 ;;		_modbasRtu_Answer
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text83
  7002   0012A4                     __ptext83:
  7003                           	callstack 0
  7004   0012A4                     _Read_analog_input:
  7005                           	callstack 13
  7006   0012A4                     
  7007                           ;Modbas_RTU.c: 271:  void Read_analog_input(unsigned char* Massiv, register unsigned cha
      +                          r Number_, unsigned char Vt);Modbas_RTU.c: 272:  {;Modbas_RTU.c: 273:  volatile unsigned
      +                           int address,Number_bits,Danie;;Modbas_RTU.c: 274:  volatile unsigned char Adress = 4;
  7008   0012A4  0E04               	movlw	4
  7009   0012A6  6E1A               	movwf	Read_analog_input@Adress^0,c	;volatile
  7010   0012A8                     
  7011                           ;Modbas_RTU.c: 275:  address = ModbasRtu_Register_address(3);
  7012   0012A8  0E03               	movlw	3
  7013   0012AA  EC95  F00F         	call	_ModbasRtu_Register_address
  7014   0012AE  C001  F016         	movff	?_ModbasRtu_Register_address,Read_analog_input@address	;volatile
  7015   0012B2  C002  F017         	movff	?_ModbasRtu_Register_address+1,Read_analog_input@address+1	;volatile
  7016   0012B6                     
  7017                           ;Modbas_RTU.c: 276:  if ( address > Number_ )
  7018   0012B6  5010               	movf	Read_analog_input@Number_^0,w,c
  7019   0012B8  6E12               	movwf	??_Read_analog_input^0,c
  7020   0012BA  6A13               	clrf	(??_Read_analog_input+1)^0,c
  7021   0012BC  5016               	movf	Read_analog_input@address^0,w,c	;volatile
  7022   0012BE  5C12               	subwf	??_Read_analog_input^0,w,c
  7023   0012C0  5017               	movf	(Read_analog_input@address+1)^0,w,c	;volatile
  7024   0012C2  5813               	subwfb	(??_Read_analog_input+1)^0,w,c
  7025   0012C4  B0D8               	btfsc	status,0,c
  7026   0012C6  EF67  F009         	goto	i2u143_41
  7027   0012CA  EF69  F009         	goto	i2u143_40
  7028   0012CE                     i2u143_41:
  7029   0012CE  EF6E  F009         	goto	i2l3343
  7030   0012D2                     i2u143_40:
  7031   0012D2                     
  7032                           ;Modbas_RTU.c: 277:   {;Modbas_RTU.c: 278:   Error_modbasRtu (0x02);
  7033   0012D2  0E02               	movlw	2
  7034   0012D4  EC39  F011         	call	_Error_modbasRtu
  7035                           
  7036                           ;Modbas_RTU.c: 279:   }
  7037   0012D8  EFD5  F009         	goto	i2l976
  7038   0012DC                     i2l3343:
  7039                           
  7040                           ;Modbas_RTU.c: 281:   {;Modbas_RTU.c: 282:   Number_bits = ModbasRtu_Register_address(5)
      +                          ;
  7041   0012DC  0E05               	movlw	5
  7042   0012DE  EC95  F00F         	call	_ModbasRtu_Register_address
  7043   0012E2  C001  F018         	movff	?_ModbasRtu_Register_address,Read_analog_input@Number_bits	;volatile
  7044   0012E6  C002  F019         	movff	?_ModbasRtu_Register_address+1,Read_analog_input@Number_bits+1	;volatile
  7045   0012EA                     
  7046                           ;Modbas_RTU.c: 283:   Danie_Rx_ModbasRtu[2] = Number_bits * 2;
  7047   0012EA  5018               	movf	Read_analog_input@Number_bits^0,w,c	;volatile
  7048   0012EC  2418               	addwf	Read_analog_input@Number_bits^0,w,c	;volatile
  7049   0012EE  0100               	movlb	0	; () banked
  7050   0012F0  6F8F               	movwf	(_Danie_Rx_ModbasRtu+2)& (0+255),b
  7051   0012F2                     
  7052                           ; BSR set to: 0
  7053                           ;Modbas_RTU.c: 284:   Adress = 3;
  7054   0012F2  0E03               	movlw	3
  7055   0012F4  6E1A               	movwf	Read_analog_input@Adress^0,c	;volatile
  7056                           
  7057                           ;Modbas_RTU.c: 285:   while (Number_bits > 0 )
  7058   0012F6  EFC9  F009         	goto	i2l3369
  7059   0012FA                     i2l3349:
  7060                           
  7061                           ;Modbas_RTU.c: 286:    {;Modbas_RTU.c: 287:    if ( Vt == 1 )
  7062   0012FA  0411               	decf	Read_analog_input@Vt^0,w,c
  7063   0012FC  A4D8               	btfss	status,2,c
  7064   0012FE  EF83  F009         	goto	i2u144_41
  7065   001302  EF85  F009         	goto	i2u144_40
  7066   001306                     i2u144_41:
  7067   001306  EF94  F009         	goto	i2l3353
  7068   00130A                     i2u144_40:
  7069   00130A                     
  7070                           ;Modbas_RTU.c: 288:    {;Modbas_RTU.c: 289:      Danie = Danie_ModbasRtu_analog_input[ a
      +                          ddress ];
  7071   00130A  90D8               	bcf	status,0,c
  7072   00130C  3416               	rlcf	Read_analog_input@address^0,w,c	;volatile
  7073   00130E  6ED9               	movwf	fsr2l,c
  7074   001310  3417               	rlcf	(Read_analog_input@address+1)^0,w,c	;volatile
  7075   001312  6EDA               	movwf	fsr2h,c
  7076   001314  0EBF               	movlw	low _Danie_ModbasRtu_analog_input
  7077   001316  26D9               	addwf	fsr2l,f,c
  7078   001318  0E00               	movlw	high _Danie_ModbasRtu_analog_input
  7079   00131A  22DA               	addwfc	fsr2h,f,c
  7080   00131C  CFDE F014          	movff	postinc2,Read_analog_input@Danie	;volatile
  7081   001320  CFDD F015          	movff	postdec2,Read_analog_input@Danie+1	;volatile
  7082                           
  7083                           ;Modbas_RTU.c: 290:    }
  7084   001324  EFA1  F009         	goto	i2l3355
  7085   001328                     i2l3353:
  7086                           
  7087                           ;Modbas_RTU.c: 292:       {;Modbas_RTU.c: 293:      Danie = Danie_ModbasRtu_analog_Outpu
      +                          t[ address ];
  7088   001328  90D8               	bcf	status,0,c
  7089   00132A  3416               	rlcf	Read_analog_input@address^0,w,c	;volatile
  7090   00132C  6ED9               	movwf	fsr2l,c
  7091   00132E  3417               	rlcf	(Read_analog_input@address+1)^0,w,c	;volatile
  7092   001330  6EDA               	movwf	fsr2h,c
  7093   001332  0EAB               	movlw	low _Danie_ModbasRtu_analog_Output
  7094   001334  26D9               	addwf	fsr2l,f,c
  7095   001336  0E00               	movlw	high _Danie_ModbasRtu_analog_Output
  7096   001338  22DA               	addwfc	fsr2h,f,c
  7097   00133A  CFDE F014          	movff	postinc2,Read_analog_input@Danie	;volatile
  7098   00133E  CFDD F015          	movff	postdec2,Read_analog_input@Danie+1	;volatile
  7099   001342                     i2l3355:
  7100                           
  7101                           ;Modbas_RTU.c: 295:    address++;
  7102   001342  4A16               	infsnz	Read_analog_input@address^0,f,c	;volatile
  7103   001344  2A17               	incf	(Read_analog_input@address+1)^0,f,c	;volatile
  7104   001346                     
  7105                           ;Modbas_RTU.c: 296:    Massiv = &Danie;
  7106   001346  0E14               	movlw	low Read_analog_input@Danie
  7107   001348  6E0E               	movwf	Read_analog_input@Massiv^0,c
  7108   00134A  0E00               	movlw	high Read_analog_input@Danie
  7109   00134C  6E0F               	movwf	(Read_analog_input@Massiv+1)^0,c
  7110   00134E                     
  7111                           ;Modbas_RTU.c: 297:    Danie_Rx_ModbasRtu[Adress ++] = Massiv[1];
  7112   00134E  EE20 F001          	lfsr	2,1
  7113   001352  500E               	movf	Read_analog_input@Massiv^0,w,c
  7114   001354  26D9               	addwf	fsr2l,f,c
  7115   001356  500F               	movf	(Read_analog_input@Massiv+1)^0,w,c
  7116   001358  22DA               	addwfc	fsr2h,f,c
  7117   00135A  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7118   00135C  241A               	addwf	Read_analog_input@Adress^0,w,c	;volatile
  7119   00135E  6EE1               	movwf	fsr1l,c
  7120   001360  6AE2               	clrf	fsr1h,c
  7121   001362  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7122   001364  22E2               	addwfc	fsr1h,f,c
  7123   001366  CFDF FFE7          	movff	indf2,indf1
  7124   00136A  2A1A               	incf	Read_analog_input@Adress^0,f,c	;volatile
  7125   00136C                     
  7126                           ;Modbas_RTU.c: 298:    Danie_Rx_ModbasRtu[Adress++] = Massiv [0];
  7127   00136C  C00E  FFD9         	movff	Read_analog_input@Massiv,fsr2l
  7128   001370  C00F  FFDA         	movff	Read_analog_input@Massiv+1,fsr2h
  7129   001374  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7130   001376  241A               	addwf	Read_analog_input@Adress^0,w,c	;volatile
  7131   001378  6EE1               	movwf	fsr1l,c
  7132   00137A  6AE2               	clrf	fsr1h,c
  7133   00137C  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7134   00137E  22E2               	addwfc	fsr1h,f,c
  7135   001380  CFDF FFE7          	movff	indf2,indf1
  7136   001384  2A1A               	incf	Read_analog_input@Adress^0,f,c	;volatile
  7137   001386                     
  7138                           ;Modbas_RTU.c: 299:    Number_bits = Number_bits - 1 ;
  7139   001386  0EFF               	movlw	255
  7140   001388  2418               	addwf	Read_analog_input@Number_bits^0,w,c	;volatile
  7141   00138A  6E18               	movwf	Read_analog_input@Number_bits^0,c	;volatile
  7142   00138C  0EFF               	movlw	255
  7143   00138E  2019               	addwfc	(Read_analog_input@Number_bits+1)^0,w,c	;volatile
  7144   001390  6E19               	movwf	(Read_analog_input@Number_bits+1)^0,c	;volatile
  7145   001392                     i2l3369:
  7146                           
  7147                           ;Modbas_RTU.c: 285:   while (Number_bits > 0 )
  7148   001392  5018               	movf	Read_analog_input@Number_bits^0,w,c	;volatile
  7149   001394  1019               	iorwf	(Read_analog_input@Number_bits+1)^0,w,c	;volatile
  7150   001396  A4D8               	btfss	status,2,c
  7151   001398  EFD0  F009         	goto	i2u145_41
  7152   00139C  EFD2  F009         	goto	i2u145_40
  7153   0013A0                     i2u145_41:
  7154   0013A0  EF7D  F009         	goto	i2l3349
  7155   0013A4                     i2u145_40:
  7156   0013A4                     
  7157                           ;Modbas_RTU.c: 301:   check_sum ( Adress);
  7158   0013A4  501A               	movf	Read_analog_input@Adress^0,w,c	;volatile
  7159   0013A6  EC35  F00F         	call	_check_sum
  7160   0013AA                     i2l976:
  7161   0013AA  0012               	return		;funcret
  7162   0013AC                     __end_of_Read_analog_input:
  7163                           	callstack 0
  7164                           
  7165 ;; *************** function _Changing_Discrete_Output *****************
  7166 ;; Defined at:
  7167 ;;		line 189 in file "Modbas_RTU.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;		None
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  address         2   13[COMRAM] unsigned int 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;Total ram usage:        2 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 3
  7188 ;; This function calls:
  7189 ;;		_Error_modbasRtu
  7190 ;;		_ModbasRtu_Register_address
  7191 ;;		__Bin_input_Output
  7192 ;; This function is called by:
  7193 ;;		_modbasRtu_Answer
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text84
  7198   001AE4                     __ptext84:
  7199                           	callstack 0
  7200   001AE4                     _Changing_Discrete_Output:
  7201                           	callstack 13
  7202   001AE4                     
  7203                           ;Modbas_RTU.c: 191:    register unsigned int address;;Modbas_RTU.c: 192:    address = Mo
      +                          dbasRtu_Register_address(3);
  7204   001AE4  0E03               	movlw	3
  7205   001AE6  EC95  F00F         	call	_ModbasRtu_Register_address
  7206   001AEA  C001  F00E         	movff	?_ModbasRtu_Register_address,Changing_Discrete_Output@address
  7207   001AEE  C002  F00F         	movff	?_ModbasRtu_Register_address+1,Changing_Discrete_Output@address+1
  7208   001AF2                     
  7209                           ;Modbas_RTU.c: 193:    if ( address > 10 )
  7210   001AF2  500F               	movf	(Changing_Discrete_Output@address+1)^0,w,c
  7211   001AF4  E109               	bnz	i2u132_40
  7212   001AF6  0E0B               	movlw	11
  7213   001AF8  5C0E               	subwf	Changing_Discrete_Output@address^0,w,c
  7214   001AFA  A0D8               	btfss	status,0,c
  7215   001AFC  EF82  F00D         	goto	i2u132_41
  7216   001B00  EF84  F00D         	goto	i2u132_40
  7217   001B04                     i2u132_41:
  7218   001B04  EF89  F00D         	goto	i2l3271
  7219   001B08                     i2u132_40:
  7220   001B08                     
  7221                           ;Modbas_RTU.c: 194:     {;Modbas_RTU.c: 195:     Error_modbasRtu (0x02);
  7222   001B08  0E02               	movlw	2
  7223   001B0A  EC39  F011         	call	_Error_modbasRtu
  7224                           
  7225                           ;Modbas_RTU.c: 196:     }
  7226   001B0E  EFAA  F00D         	goto	i2l951
  7227   001B12                     i2l3271:
  7228                           
  7229                           ;Modbas_RTU.c: 198:     {;Modbas_RTU.c: 199:    if (Danie_Rx_ModbasRtu[4] == 255)
  7230   001B12  0100               	movlb	0	; () banked
  7231   001B14  2991               	incf	(_Danie_Rx_ModbasRtu+4)& (0+255),w,b
  7232   001B16  A4D8               	btfss	status,2,c
  7233   001B18  EF90  F00D         	goto	i2u133_41
  7234   001B1C  EF92  F00D         	goto	i2u133_40
  7235   001B20                     i2u133_41:
  7236   001B20  EF9F  F00D         	goto	i2l3275
  7237   001B24                     i2u133_40:
  7238   001B24                     
  7239                           ; BSR set to: 0
  7240                           ;Modbas_RTU.c: 200:      _Bin_input_Output ((char)address,1,Danie_ModbasRtu_Binary_Outpu
      +                          t,10);
  7241   001B24  0E01               	movlw	1
  7242   001B26  6E01               	movwf	__Bin_input_Output@state^0,c
  7243   001B28  0E3E               	movlw	low _Danie_ModbasRtu_Binary_Output
  7244   001B2A  6E02               	movwf	__Bin_input_Output@Masiv^0,c
  7245   001B2C  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  7246   001B2E  6E03               	movwf	(__Bin_input_Output@Masiv+1)^0,c
  7247   001B30  0E0A               	movlw	10
  7248   001B32  6E04               	movwf	__Bin_input_Output@Sd^0,c
  7249   001B34  500E               	movf	Changing_Discrete_Output@address^0,w,c
  7250   001B36  EC57  F00A         	call	__Bin_input_Output
  7251   001B3A  EFAA  F00D         	goto	i2l951
  7252   001B3E                     i2l3275:
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;Modbas_RTU.c: 202:            _Bin_input_Output ((char)address,0,Danie_ModbasRtu_Binary
      +                          _Output,10);
  7256   001B3E  0E00               	movlw	0
  7257   001B40  6E01               	movwf	__Bin_input_Output@state^0,c
  7258   001B42  0E3E               	movlw	low _Danie_ModbasRtu_Binary_Output
  7259   001B44  6E02               	movwf	__Bin_input_Output@Masiv^0,c
  7260   001B46  0E00               	movlw	high _Danie_ModbasRtu_Binary_Output
  7261   001B48  6E03               	movwf	(__Bin_input_Output@Masiv+1)^0,c
  7262   001B4A  0E0A               	movlw	10
  7263   001B4C  6E04               	movwf	__Bin_input_Output@Sd^0,c
  7264   001B4E  500E               	movf	Changing_Discrete_Output@address^0,w,c
  7265   001B50  EC57  F00A         	call	__Bin_input_Output
  7266   001B54                     i2l951:
  7267   001B54  0012               	return		;funcret
  7268   001B56                     __end_of_Changing_Discrete_Output:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function __Bin_input_Output *****************
  7272 ;; Defined at:
  7273 ;;		line 157 in file "Modbas_RTU.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  NUMBER          1    wreg     unsigned char 
  7276 ;;  state           1    0[COMRAM] unsigned char 
  7277 ;;  Masiv           2    1[COMRAM] PTR volatile unsigned ch
  7278 ;;		 -> Danie_ModbasRtu_Binary_input(2), Danie_ModbasRtu_Binary_Output(2), 
  7279 ;;  Sd              1    3[COMRAM] volatile unsigned char 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;  NUMBER          1    6[COMRAM] unsigned char 
  7282 ;;  Temp1           1    8[COMRAM] volatile unsigned char 
  7283 ;;  Temp            1    7[COMRAM] volatile unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      unsigned char 
  7286 ;; Registers used:
  7287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;Total ram usage:        9 bytes
  7298 ;; Hardware stack levels used: 1
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_Changing_Discrete_Output
  7303 ;;		_read_digital_inputs
  7304 ;;		_change_digital_inputs
  7305 ;;		_read_digital_Output
  7306 ;;		_change_digital_Output
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text85
  7311   0014AE                     __ptext85:
  7312                           	callstack 0
  7313   0014AE                     __Bin_input_Output:
  7314                           	callstack 15
  7315                           
  7316                           ;incstack = 0
  7317                           ;__Bin_input_Output@NUMBER stored from wreg
  7318   0014AE  6E07               	movwf	__Bin_input_Output@NUMBER^0,c
  7319   0014B0                     
  7320                           ;Modbas_RTU.c: 157: char _Bin_input_Output( register unsigned char NUMBER, register unsi
      +                          gned char state,volatile unsigned char *Masiv, volatile unsigned char Sd );Modbas_RTU.c:
      +                           158:   {;Modbas_RTU.c: 159:  volatile unsigned char Temp = 0,Temp1 = 0;
  7321   0014B0  0E00               	movlw	0
  7322   0014B2  6E08               	movwf	__Bin_input_Output@Temp^0,c	;volatile
  7323   0014B4  0E00               	movlw	0
  7324   0014B6  6E09               	movwf	__Bin_input_Output@Temp1^0,c	;volatile
  7325                           
  7326                           ;Modbas_RTU.c: 160:  while (NUMBER >= 8)
  7327   0014B8  EF62  F00A         	goto	i2l3225
  7328   0014BC                     i2l3221:
  7329                           
  7330                           ;Modbas_RTU.c: 161:   {;Modbas_RTU.c: 162:     NUMBER = NUMBER - 8;
  7331   0014BC  5007               	movf	__Bin_input_Output@NUMBER^0,w,c
  7332   0014BE  0FF8               	addlw	248
  7333   0014C0  6E07               	movwf	__Bin_input_Output@NUMBER^0,c
  7334   0014C2                     
  7335                           ;Modbas_RTU.c: 163:     Temp ++;
  7336   0014C2  2A08               	incf	__Bin_input_Output@Temp^0,f,c	;volatile
  7337   0014C4                     i2l3225:
  7338                           
  7339                           ;Modbas_RTU.c: 160:  while (NUMBER >= 8)
  7340   0014C4  0E08               	movlw	8
  7341   0014C6  6007               	cpfslt	__Bin_input_Output@NUMBER^0,c
  7342   0014C8  EF68  F00A         	goto	i2u121_41
  7343   0014CC  EF6A  F00A         	goto	i2u121_40
  7344   0014D0                     i2u121_41:
  7345   0014D0  EF5E  F00A         	goto	i2l3221
  7346   0014D4                     i2u121_40:
  7347   0014D4                     
  7348                           ;Modbas_RTU.c: 165:  Temp1 = Masiv [ Temp ];
  7349   0014D4  5008               	movf	__Bin_input_Output@Temp^0,w,c	;volatile
  7350   0014D6  2402               	addwf	__Bin_input_Output@Masiv^0,w,c
  7351   0014D8  6ED9               	movwf	fsr2l,c
  7352   0014DA  0E00               	movlw	0
  7353   0014DC  2003               	addwfc	(__Bin_input_Output@Masiv+1)^0,w,c
  7354   0014DE  6EDA               	movwf	fsr2h,c
  7355   0014E0  50DF               	movf	indf2,w,c
  7356   0014E2  6E09               	movwf	__Bin_input_Output@Temp1^0,c	;volatile
  7357   0014E4                     
  7358                           ;Modbas_RTU.c: 166:  if (Sd == 10 )
  7359   0014E4  0E0A               	movlw	10
  7360   0014E6  1804               	xorwf	__Bin_input_Output@Sd^0,w,c	;volatile
  7361   0014E8  A4D8               	btfss	status,2,c
  7362   0014EA  EF79  F00A         	goto	i2u122_41
  7363   0014EE  EF7B  F00A         	goto	i2u122_40
  7364   0014F2                     i2u122_41:
  7365   0014F2  EFAC  F00A         	goto	i2l3239
  7366   0014F6                     i2u122_40:
  7367   0014F6                     
  7368                           ;Modbas_RTU.c: 167:   {;Modbas_RTU.c: 168:     if ( state == 1)
  7369   0014F6  0401               	decf	__Bin_input_Output@state^0,w,c
  7370   0014F8  A4D8               	btfss	status,2,c
  7371   0014FA  EF81  F00A         	goto	i2u123_41
  7372   0014FE  EF83  F00A         	goto	i2u123_40
  7373   001502                     i2u123_41:
  7374   001502  EF93  F00A         	goto	i2l3235
  7375   001506                     i2u123_40:
  7376   001506                     
  7377                           ;Modbas_RTU.c: 169:      Temp1 |=(1<<NUMBER);
  7378   001506  C007  F005         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  7379   00150A  0E01               	movlw	1
  7380   00150C  6E06               	movwf	(??__Bin_input_Output+1)^0,c
  7381   00150E  2A05               	incf	??__Bin_input_Output^0,f,c
  7382   001510  EF8C  F00A         	goto	i2u124_44
  7383   001514                     i2u124_45:
  7384   001514  90D8               	bcf	status,0,c
  7385   001516  3606               	rlcf	(??__Bin_input_Output+1)^0,f,c
  7386   001518                     i2u124_44:
  7387   001518  2E05               	decfsz	??__Bin_input_Output^0,f,c
  7388   00151A  EF8A  F00A         	goto	i2u124_45
  7389   00151E  5006               	movf	(??__Bin_input_Output+1)^0,w,c
  7390   001520  1209               	iorwf	__Bin_input_Output@Temp1^0,f,c	;volatile
  7391   001522  EFA2  F00A         	goto	i2l3237
  7392   001526                     i2l3235:
  7393                           
  7394                           ;Modbas_RTU.c: 171:      Temp1 &=~(1<<NUMBER);
  7395   001526  C007  F005         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  7396   00152A  0E01               	movlw	1
  7397   00152C  6E06               	movwf	(??__Bin_input_Output+1)^0,c
  7398   00152E  2A05               	incf	??__Bin_input_Output^0,f,c
  7399   001530  EF9C  F00A         	goto	i2u125_44
  7400   001534                     i2u125_45:
  7401   001534  90D8               	bcf	status,0,c
  7402   001536  3606               	rlcf	(??__Bin_input_Output+1)^0,f,c
  7403   001538                     i2u125_44:
  7404   001538  2E05               	decfsz	??__Bin_input_Output^0,f,c
  7405   00153A  EF9A  F00A         	goto	i2u125_45
  7406   00153E  5006               	movf	(??__Bin_input_Output+1)^0,w,c
  7407   001540  0AFF               	xorlw	255
  7408   001542  1609               	andwf	__Bin_input_Output@Temp1^0,f,c	;volatile
  7409   001544                     i2l3237:
  7410                           
  7411                           ;Modbas_RTU.c: 172:     Masiv [ Temp ] = Temp1;
  7412   001544  5008               	movf	__Bin_input_Output@Temp^0,w,c	;volatile
  7413   001546  2402               	addwf	__Bin_input_Output@Masiv^0,w,c
  7414   001548  6ED9               	movwf	fsr2l,c
  7415   00154A  0E00               	movlw	0
  7416   00154C  2003               	addwfc	(__Bin_input_Output@Masiv+1)^0,w,c
  7417   00154E  6EDA               	movwf	fsr2h,c
  7418   001550  C009  FFDF         	movff	__Bin_input_Output@Temp1,indf2	;volatile
  7419                           
  7420                           ;Modbas_RTU.c: 173:   }
  7421   001554  EFC8  F00A         	goto	i2l941
  7422   001558                     i2l3239:
  7423                           
  7424                           ;Modbas_RTU.c: 175:   {;Modbas_RTU.c: 176:   if ( Temp1 & (1<<NUMBER) )
  7425   001558  C007  F005         	movff	__Bin_input_Output@NUMBER,??__Bin_input_Output
  7426   00155C  0E01               	movlw	1
  7427   00155E  6E06               	movwf	(??__Bin_input_Output+1)^0,c
  7428   001560  2A05               	incf	??__Bin_input_Output^0,f,c
  7429   001562  EFB5  F00A         	goto	i2u126_44
  7430   001566                     i2u126_45:
  7431   001566  90D8               	bcf	status,0,c
  7432   001568  3606               	rlcf	(??__Bin_input_Output+1)^0,f,c
  7433   00156A                     i2u126_44:
  7434   00156A  2E05               	decfsz	??__Bin_input_Output^0,f,c
  7435   00156C  EFB3  F00A         	goto	i2u126_45
  7436   001570  5006               	movf	(??__Bin_input_Output+1)^0,w,c
  7437   001572  1409               	andwf	__Bin_input_Output@Temp1^0,w,c	;volatile
  7438   001574  0900               	iorlw	0
  7439   001576  B4D8               	btfsc	status,2,c
  7440   001578  EFC0  F00A         	goto	i2u127_41
  7441   00157C  EFC2  F00A         	goto	i2u127_40
  7442   001580                     i2u127_41:
  7443   001580  EFC6  F00A         	goto	i2l3243
  7444   001584                     i2u127_40:
  7445   001584                     
  7446                           ;Modbas_RTU.c: 177:    NUMBER = 1;
  7447   001584  0E01               	movlw	1
  7448   001586  6E07               	movwf	__Bin_input_Output@NUMBER^0,c
  7449   001588  EFC8  F00A         	goto	i2l941
  7450   00158C                     i2l3243:
  7451                           
  7452                           ;Modbas_RTU.c: 179:    NUMBER = 0;
  7453   00158C  0E00               	movlw	0
  7454   00158E  6E07               	movwf	__Bin_input_Output@NUMBER^0,c
  7455   001590                     i2l941:
  7456                           
  7457                           ;Modbas_RTU.c: 181:   return NUMBER;
  7458   001590  5007               	movf	__Bin_input_Output@NUMBER^0,w,c
  7459   001592  0012               	return		;funcret
  7460   001594                     __end_of__Bin_input_Output:
  7461                           	callstack 0
  7462                           
  7463 ;; *************** function _ModbasRtu_Register_address *****************
  7464 ;; Defined at:
  7465 ;;		line 126 in file "Modbas_RTU.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  Li              1    wreg     unsigned char 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  Li              1    7[COMRAM] unsigned char 
  7470 ;;  Hi              1    6[COMRAM] unsigned char 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  2    0[COMRAM] unsigned int 
  7473 ;; Registers used:
  7474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;Total ram usage:        8 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_Changing_Discrete_Output
  7490 ;;		_Reading_Discrete_Output
  7491 ;;		_Read_analog_input
  7492 ;;		_analog_output_recording
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text86
  7497   001F2A                     __ptext86:
  7498                           	callstack 0
  7499   001F2A                     _ModbasRtu_Register_address:
  7500                           	callstack 15
  7501                           
  7502                           ;incstack = 0
  7503                           ;ModbasRtu_Register_address@Li stored from wreg
  7504   001F2A  6E08               	movwf	ModbasRtu_Register_address@Li^0,c
  7505   001F2C                     
  7506                           ;Modbas_RTU.c: 126:  unsigned int ModbasRtu_Register_address(unsigned char Li);Modbas_RT
      +                          U.c: 127:  {;Modbas_RTU.c: 128:   register char Hi= Li - 1;
  7507   001F2C  0408               	decf	ModbasRtu_Register_address@Li^0,w,c
  7508   001F2E  6E07               	movwf	ModbasRtu_Register_address@Hi^0,c
  7509   001F30                     
  7510                           ;Modbas_RTU.c: 129:   return Danie_Rx_ModbasRtu[Hi] * 256 + Danie_Rx_ModbasRtu[Li];
  7511   001F30  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7512   001F32  2408               	addwf	ModbasRtu_Register_address@Li^0,w,c
  7513   001F34  6ED9               	movwf	fsr2l,c
  7514   001F36  6ADA               	clrf	fsr2h,c
  7515   001F38  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7516   001F3A  22DA               	addwfc	fsr2h,f,c
  7517   001F3C  50DF               	movf	indf2,w,c
  7518   001F3E  6E03               	movwf	??_ModbasRtu_Register_address^0,c
  7519   001F40  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7520   001F42  2407               	addwf	ModbasRtu_Register_address@Hi^0,w,c
  7521   001F44  6ED9               	movwf	fsr2l,c
  7522   001F46  6ADA               	clrf	fsr2h,c
  7523   001F48  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7524   001F4A  22DA               	addwfc	fsr2h,f,c
  7525   001F4C  50DF               	movf	indf2,w,c
  7526   001F4E  6E04               	movwf	(??_ModbasRtu_Register_address+1)^0,c
  7527   001F50  5004               	movf	(??_ModbasRtu_Register_address+1)^0,w,c
  7528   001F52  6E06               	movwf	(??_ModbasRtu_Register_address+3)^0,c
  7529   001F54  6A05               	clrf	(??_ModbasRtu_Register_address+2)^0,c
  7530   001F56  5003               	movf	??_ModbasRtu_Register_address^0,w,c
  7531   001F58  2405               	addwf	(??_ModbasRtu_Register_address+2)^0,w,c
  7532   001F5A  6E01               	movwf	?_ModbasRtu_Register_address^0,c
  7533   001F5C  0E00               	movlw	0
  7534   001F5E  2006               	addwfc	(??_ModbasRtu_Register_address+3)^0,w,c
  7535   001F60  6E02               	movwf	(?_ModbasRtu_Register_address+1)^0,c
  7536   001F62  0012               	return		;funcret
  7537   001F64                     __end_of_ModbasRtu_Register_address:
  7538                           	callstack 0
  7539                           
  7540 ;; *************** function _Error_modbasRtu *****************
  7541 ;; Defined at:
  7542 ;;		line 327 in file "Modbas_RTU.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  Temp_Error      1    wreg     volatile unsigned char 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  Temp_Error      1   12[COMRAM] volatile unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;Total ram usage:        1 bytes
  7561 ;; Hardware stack levels used: 1
  7562 ;; Hardware stack levels required when called: 2
  7563 ;; This function calls:
  7564 ;;		_check_sum
  7565 ;; This function is called by:
  7566 ;;		_Changing_Discrete_Output
  7567 ;;		_Reading_Discrete_Output
  7568 ;;		_Read_analog_input
  7569 ;;		_analog_output_recording
  7570 ;;		_modbasRtu_Answer
  7571 ;;		_modbasRtu_Slave
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text87
  7576   002272                     __ptext87:
  7577                           	callstack 0
  7578   002272                     _Error_modbasRtu:
  7579                           	callstack 13
  7580                           
  7581                           ;incstack = 0
  7582                           ;Error_modbasRtu@Temp_Error stored from wreg
  7583   002272  6E0D               	movwf	Error_modbasRtu@Temp_Error^0,c	;volatile
  7584   002274                     
  7585                           ;Modbas_RTU.c: 327:  void Error_modbasRtu (volatile unsigned char Temp_Error);Modbas_RTU
      +                          .c: 328:   {;Modbas_RTU.c: 329:  Danie_Rx_ModbasRtu[1] |= (1<<7);
  7586   002274  0100               	movlb	0	; () banked
  7587   002276  8F8E               	bsf	(_Danie_Rx_ModbasRtu+1)& (0+255),7,b
  7588   002278                     
  7589                           ; BSR set to: 0
  7590                           ;Modbas_RTU.c: 330:  Danie_Rx_ModbasRtu[2] = Temp_Error;
  7591   002278  C00D  F08F         	movff	Error_modbasRtu@Temp_Error,_Danie_Rx_ModbasRtu+2	;volatile
  7592   00227C                     
  7593                           ; BSR set to: 0
  7594                           ;Modbas_RTU.c: 331:  check_sum (3);
  7595   00227C  0E03               	movlw	3
  7596   00227E  EC35  F00F         	call	_check_sum
  7597   002282  0012               	return		;funcret
  7598   002284                     __end_of_Error_modbasRtu:
  7599                           	callstack 0
  7600                           
  7601 ;; *************** function _check_sum *****************
  7602 ;; Defined at:
  7603 ;;		line 336 in file "Modbas_RTU.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  Adress          1    wreg     unsigned char 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  Adress          1   11[COMRAM] unsigned char 
  7608 ;;  RC              2    9[COMRAM] unsigned int 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;Total ram usage:        3 bytes
  7623 ;; Hardware stack levels used: 1
  7624 ;; Hardware stack levels required when called: 1
  7625 ;; This function calls:
  7626 ;;		_crc_chk
  7627 ;; This function is called by:
  7628 ;;		_Reading_Discrete_Output
  7629 ;;		_Read_analog_input
  7630 ;;		_Error_modbasRtu
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text88
  7635   001E6A                     __ptext88:
  7636                           	callstack 0
  7637   001E6A                     _check_sum:
  7638                           	callstack 13
  7639                           
  7640                           ;incstack = 0
  7641                           ;check_sum@Adress stored from wreg
  7642   001E6A  6E0C               	movwf	check_sum@Adress^0,c
  7643   001E6C                     
  7644                           ;Modbas_RTU.c: 336:  void check_sum ( register unsigned char Adress);Modbas_RTU.c: 337: 
      +                            {;Modbas_RTU.c: 338:  register unsigned int RC;;Modbas_RTU.c: 339:  RC = crc_chk(Danie
      +                          _Rx_ModbasRtu,Adress);
  7645   001E6C  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7646   001E6E  6E01               	movwf	crc_chk@data^0,c
  7647   001E70  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7648   001E72  6E02               	movwf	(crc_chk@data+1)^0,c
  7649   001E74  C00C  F003         	movff	check_sum@Adress,crc_chk@length
  7650   001E78  ECDF  F00B         	call	_crc_chk	;wreg free
  7651   001E7C  C001  F00A         	movff	?_crc_chk,check_sum@RC
  7652   001E80  C002  F00B         	movff	?_crc_chk+1,check_sum@RC+1
  7653   001E84                     
  7654                           ;Modbas_RTU.c: 340:  Danie_Rx_ModbasRtu[Adress] = RC ;
  7655   001E84  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7656   001E86  240C               	addwf	check_sum@Adress^0,w,c
  7657   001E88  6ED9               	movwf	fsr2l,c
  7658   001E8A  6ADA               	clrf	fsr2h,c
  7659   001E8C  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7660   001E8E  22DA               	addwfc	fsr2h,f,c
  7661   001E90  C00A  FFDF         	movff	check_sum@RC,indf2
  7662   001E94                     
  7663                           ;Modbas_RTU.c: 341:  Adress++;
  7664   001E94  2A0C               	incf	check_sum@Adress^0,f,c
  7665   001E96                     
  7666                           ;Modbas_RTU.c: 342:  Danie_Rx_ModbasRtu[Adress] = RC >> 8;
  7667   001E96  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7668   001E98  240C               	addwf	check_sum@Adress^0,w,c
  7669   001E9A  6ED9               	movwf	fsr2l,c
  7670   001E9C  6ADA               	clrf	fsr2h,c
  7671   001E9E  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7672   001EA0  22DA               	addwfc	fsr2h,f,c
  7673   001EA2  500B               	movf	(check_sum@RC+1)^0,w,c
  7674   001EA4  6EDF               	movwf	indf2,c
  7675   001EA6                     
  7676                           ;Modbas_RTU.c: 343:  quantity_Data_ModbasRtu = Adress;
  7677   001EA6  C00C  F03D         	movff	check_sum@Adress,_quantity_Data_ModbasRtu
  7678   001EAA  0012               	return		;funcret
  7679   001EAC                     __end_of_check_sum:
  7680                           	callstack 0
  7681                           
  7682 ;; *************** function _Data_integrity *****************
  7683 ;; Defined at:
  7684 ;;		line 134 in file "Modbas_RTU.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;		None
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  Temp22          2   10[COMRAM] unsigned int 
  7689 ;;  Temp33          1   12[COMRAM] unsigned char 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      unsigned char 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7701 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;Total ram usage:        4 bytes
  7704 ;; Hardware stack levels used: 1
  7705 ;; Hardware stack levels required when called: 1
  7706 ;; This function calls:
  7707 ;;		_crc_chk
  7708 ;; This function is called by:
  7709 ;;		_modbasRtu_Slave
  7710 ;; This function uses a non-reentrant model
  7711 ;;
  7712                           
  7713                           	psect	text89
  7714   001BC6                     __ptext89:
  7715                           	callstack 0
  7716   001BC6                     _Data_integrity:
  7717                           	callstack 16
  7718   001BC6                     
  7719                           ;Modbas_RTU.c: 136:    register unsigned int Temp22;;Modbas_RTU.c: 137:    register unsi
      +                          gned char Temp33;;Modbas_RTU.c: 138:    quantity_Data_ModbasRtu = quantity_Data_ModbasRt
      +                          u - 2;
  7720   001BC6  503D               	movf	_quantity_Data_ModbasRtu^0,w,c
  7721   001BC8  0FFE               	addlw	254
  7722   001BCA  6E3D               	movwf	_quantity_Data_ModbasRtu^0,c
  7723   001BCC                     
  7724                           ;Modbas_RTU.c: 139:    Temp22 = crc_chk(Danie_Rx_ModbasRtu,quantity_Data_ModbasRtu);
  7725   001BCC  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7726   001BCE  6E01               	movwf	crc_chk@data^0,c
  7727   001BD0  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7728   001BD2  6E02               	movwf	(crc_chk@data+1)^0,c
  7729   001BD4  C03D  F003         	movff	_quantity_Data_ModbasRtu,crc_chk@length
  7730   001BD8  ECDF  F00B         	call	_crc_chk	;wreg free
  7731   001BDC  C001  F00B         	movff	?_crc_chk,Data_integrity@Temp22
  7732   001BE0  C002  F00C         	movff	?_crc_chk+1,Data_integrity@Temp22+1
  7733   001BE4                     
  7734                           ;Modbas_RTU.c: 140:    Temp33 = Temp22;
  7735   001BE4  C00B  F00D         	movff	Data_integrity@Temp22,Data_integrity@Temp33
  7736   001BE8                     
  7737                           ;Modbas_RTU.c: 141:    if ( Danie_Rx_ModbasRtu[quantity_Data_ModbasRtu] == Temp33 )
  7738   001BE8  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7739   001BEA  243D               	addwf	_quantity_Data_ModbasRtu^0,w,c
  7740   001BEC  6ED9               	movwf	fsr2l,c
  7741   001BEE  6ADA               	clrf	fsr2h,c
  7742   001BF0  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7743   001BF2  22DA               	addwfc	fsr2h,f,c
  7744   001BF4  500D               	movf	Data_integrity@Temp33^0,w,c
  7745   001BF6  18DE               	xorwf	postinc2,w,c
  7746   001BF8  A4D8               	btfss	status,2,c
  7747   001BFA  EF01  F00E         	goto	i2u148_41
  7748   001BFE  EF03  F00E         	goto	i2u148_40
  7749   001C02                     i2u148_41:
  7750   001C02  EF18  F00E         	goto	i2l3409
  7751   001C06                     i2u148_40:
  7752   001C06                     
  7753                           ;Modbas_RTU.c: 142:  {;Modbas_RTU.c: 143:    quantity_Data_ModbasRtu ++;
  7754   001C06  2A3D               	incf	_quantity_Data_ModbasRtu^0,f,c
  7755   001C08                     
  7756                           ;Modbas_RTU.c: 144:    Temp33 = (Temp22 >> 8) ;
  7757   001C08  500C               	movf	(Data_integrity@Temp22+1)^0,w,c
  7758   001C0A  6E0D               	movwf	Data_integrity@Temp33^0,c
  7759   001C0C                     
  7760                           ;Modbas_RTU.c: 145:    if ( Danie_Rx_ModbasRtu[quantity_Data_ModbasRtu] == Temp33 )
  7761   001C0C  0E8D               	movlw	low _Danie_Rx_ModbasRtu
  7762   001C0E  243D               	addwf	_quantity_Data_ModbasRtu^0,w,c
  7763   001C10  6ED9               	movwf	fsr2l,c
  7764   001C12  6ADA               	clrf	fsr2h,c
  7765   001C14  0E00               	movlw	high _Danie_Rx_ModbasRtu
  7766   001C16  22DA               	addwfc	fsr2h,f,c
  7767   001C18  500D               	movf	Data_integrity@Temp33^0,w,c
  7768   001C1A  18DE               	xorwf	postinc2,w,c
  7769   001C1C  A4D8               	btfss	status,2,c
  7770   001C1E  EF13  F00E         	goto	i2u149_41
  7771   001C22  EF15  F00E         	goto	i2u149_40
  7772   001C26                     i2u149_41:
  7773   001C26  EF18  F00E         	goto	i2l3409
  7774   001C2A                     i2u149_40:
  7775   001C2A                     
  7776                           ;Modbas_RTU.c: 146:     {;Modbas_RTU.c: 147:    return 1;
  7777   001C2A  0E01               	movlw	1
  7778   001C2C  EF19  F00E         	goto	i2l932
  7779   001C30                     i2l3409:
  7780                           
  7781                           ;Modbas_RTU.c: 150:    return 0;
  7782   001C30  0E00               	movlw	0
  7783   001C32                     i2l932:
  7784   001C32  0012               	return		;funcret
  7785   001C34                     __end_of_Data_integrity:
  7786                           	callstack 0
  7787                           
  7788 ;; *************** function _crc_chk *****************
  7789 ;; Defined at:
  7790 ;;		line 102 in file "Modbas_RTU.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  data            2    0[COMRAM] PTR unsigned char 
  7793 ;;		 -> Danie_Rx_ModbasRtu(30), 
  7794 ;;  length          1    2[COMRAM] unsigned char 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  reg_crc         2    7[COMRAM] unsigned int 
  7797 ;;  j               2    5[COMRAM] int 
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  2    0[COMRAM] unsigned int 
  7800 ;; Registers used:
  7801 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7807 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;Total ram usage:        9 bytes
  7812 ;; Hardware stack levels used: 1
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_Data_integrity
  7817 ;;		_check_sum
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text90
  7822   0017BE                     __ptext90:
  7823                           	callstack 0
  7824   0017BE                     _crc_chk:
  7825                           	callstack 13
  7826   0017BE                     
  7827                           ;Modbas_RTU.c: 102:  unsigned int crc_chk (unsigned char* data, unsigned char length );M
      +                          odbas_RTU.c: 103:   {;Modbas_RTU.c: 104:   int j;;Modbas_RTU.c: 105:   unsigned int reg_
      +                          crc = 0xFFFF;
  7828   0017BE  6808               	setf	crc_chk@reg_crc^0,c
  7829   0017C0  6809               	setf	(crc_chk@reg_crc+1)^0,c
  7830                           
  7831                           ;Modbas_RTU.c: 106:  while (length--)
  7832   0017C2  EF1C  F00C         	goto	i2l2945
  7833   0017C6                     i2l2927:
  7834                           
  7835                           ;Modbas_RTU.c: 107:  {;Modbas_RTU.c: 108:    reg_crc ^= *data++;
  7836   0017C6  C001  FFD9         	movff	crc_chk@data,fsr2l
  7837   0017CA  C002  FFDA         	movff	crc_chk@data+1,fsr2h
  7838   0017CE  50DF               	movf	indf2,w,c
  7839   0017D0  6E04               	movwf	??_crc_chk^0,c
  7840   0017D2  5004               	movf	??_crc_chk^0,w,c
  7841   0017D4  1A08               	xorwf	crc_chk@reg_crc^0,f,c
  7842   0017D6  4A01               	infsnz	crc_chk@data^0,f,c
  7843   0017D8  2A02               	incf	(crc_chk@data+1)^0,f,c
  7844   0017DA                     
  7845                           ;Modbas_RTU.c: 109:    for(j=0;j<8;j++)
  7846   0017DA  0E00               	movlw	0
  7847   0017DC  6E07               	movwf	(crc_chk@j+1)^0,c
  7848   0017DE  0E00               	movlw	0
  7849   0017E0  6E06               	movwf	crc_chk@j^0,c
  7850   0017E2                     i2l919:
  7851                           
  7852                           ;Modbas_RTU.c: 110:     {;Modbas_RTU.c: 111:    if(reg_crc & 0x01)
  7853   0017E2  A008               	btfss	crc_chk@reg_crc^0,0,c
  7854   0017E4  EFF6  F00B         	goto	i2u110_41
  7855   0017E8  EFF8  F00B         	goto	i2u110_40
  7856   0017EC                     i2u110_41:
  7857   0017EC  EF05  F00C         	goto	i2l2939
  7858   0017F0                     i2u110_40:
  7859   0017F0                     
  7860                           ;Modbas_RTU.c: 112:        {;Modbas_RTU.c: 113:       reg_crc = (reg_crc >> 1) ^ 0xA001;
  7861   0017F0  90D8               	bcf	status,0,c
  7862   0017F2  3009               	rrcf	(crc_chk@reg_crc+1)^0,w,c
  7863   0017F4  6E05               	movwf	(??_crc_chk+1)^0,c
  7864   0017F6  3008               	rrcf	crc_chk@reg_crc^0,w,c
  7865   0017F8  6E04               	movwf	??_crc_chk^0,c
  7866   0017FA  0E01               	movlw	1
  7867   0017FC  1804               	xorwf	??_crc_chk^0,w,c
  7868   0017FE  6E08               	movwf	crc_chk@reg_crc^0,c
  7869   001800  0EA0               	movlw	160
  7870   001802  1805               	xorwf	(??_crc_chk+1)^0,w,c
  7871   001804  6E09               	movwf	(crc_chk@reg_crc+1)^0,c
  7872                           
  7873                           ;Modbas_RTU.c: 114:        }
  7874   001806  EF0C  F00C         	goto	i2l2941
  7875   00180A                     i2l2939:
  7876                           
  7877                           ;Modbas_RTU.c: 116:        {;Modbas_RTU.c: 117:       reg_crc = reg_crc >> 1;
  7878   00180A  90D8               	bcf	status,0,c
  7879   00180C  3009               	rrcf	(crc_chk@reg_crc+1)^0,w,c
  7880   00180E  6E04               	movwf	??_crc_chk^0,c
  7881   001810  3008               	rrcf	crc_chk@reg_crc^0,w,c
  7882   001812  6E08               	movwf	crc_chk@reg_crc^0,c
  7883   001814  C004  F009         	movff	??_crc_chk,crc_chk@reg_crc+1
  7884   001818                     i2l2941:
  7885                           
  7886                           ;Modbas_RTU.c: 119:     }
  7887   001818  4A06               	infsnz	crc_chk@j^0,f,c
  7888   00181A  2A07               	incf	(crc_chk@j+1)^0,f,c
  7889   00181C  BE07               	btfsc	(crc_chk@j+1)^0,7,c
  7890   00181E  EF1A  F00C         	goto	i2u111_41
  7891   001822  5007               	movf	(crc_chk@j+1)^0,w,c
  7892   001824  E109               	bnz	i2u111_40
  7893   001826  0E08               	movlw	8
  7894   001828  5C06               	subwf	crc_chk@j^0,w,c
  7895   00182A  A0D8               	btfss	status,0,c
  7896   00182C  EF1A  F00C         	goto	i2u111_41
  7897   001830  EF1C  F00C         	goto	i2u111_40
  7898   001834                     i2u111_41:
  7899   001834  EFF1  F00B         	goto	i2l919
  7900   001838                     i2u111_40:
  7901   001838                     i2l2945:
  7902                           
  7903                           ;Modbas_RTU.c: 106:  while (length--)
  7904   001838  0603               	decf	crc_chk@length^0,f,c
  7905   00183A  2803               	incf	crc_chk@length^0,w,c
  7906   00183C  A4D8               	btfss	status,2,c
  7907   00183E  EF23  F00C         	goto	i2u112_41
  7908   001842  EF25  F00C         	goto	i2u112_40
  7909   001846                     i2u112_41:
  7910   001846  EFE3  F00B         	goto	i2l2927
  7911   00184A                     i2u112_40:
  7912   00184A                     
  7913                           ;Modbas_RTU.c: 121:  return reg_crc;
  7914   00184A  C008  F001         	movff	crc_chk@reg_crc,?_crc_chk
  7915   00184E  C009  F002         	movff	crc_chk@reg_crc+1,?_crc_chk+1
  7916   001852  0012               	return		;funcret
  7917   001854                     __end_of_crc_chk:
  7918                           	callstack 0
  7919                           
  7920 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7921 ;; Defined at:
  7922 ;;		line 252 in file "mcc_generated_files/eusart.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		None
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;Total ram usage:        0 bytes
  7941 ;; Hardware stack levels used: 1
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		_EUSART_Initialize
  7946 ;;		_EUSART_Receive_ISR
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text91
  7951   002392                     __ptext91:
  7952                           	callstack 0
  7953   002392                     _EUSART_DefaultOverrunErrorHandler:
  7954                           	callstack 19
  7955   002392                     
  7956                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  7957   002392  98AB               	bcf	171,4,c	;volatile
  7958                           
  7959                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  7960   002394  88AB               	bsf	171,4,c	;volatile
  7961   002396  0012               	return		;funcret
  7962   002398                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7963                           	callstack 0
  7964                           
  7965 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7966 ;; Defined at:
  7967 ;;		line 250 in file "mcc_generated_files/eusart.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;		None
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      void 
  7974 ;; Registers used:
  7975 ;;		None
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;Total ram usage:        0 bytes
  7986 ;; Hardware stack levels used: 1
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		_EUSART_Initialize
  7991 ;;		_EUSART_Receive_ISR
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text92
  7996   0023D6                     __ptext92:
  7997                           	callstack 0
  7998   0023D6                     _EUSART_DefaultFramingErrorHandler:
  7999                           	callstack 19
  8000   0023D6  0012               	return		;funcret
  8001   0023D8                     __end_of_EUSART_DefaultFramingErrorHandler:
  8002                           	callstack 0
  8003                           
  8004 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8005 ;; Defined at:
  8006 ;;		line 260 in file "mcc_generated_files/eusart.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;		None
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;		None
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  1    wreg      void 
  8013 ;; Registers used:
  8014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8024 ;;Total ram usage:        0 bytes
  8025 ;; Hardware stack levels used: 1
  8026 ;; Hardware stack levels required when called: 1
  8027 ;; This function calls:
  8028 ;;		_EUSART_RxDataHandler
  8029 ;; This function is called by:
  8030 ;;		_EUSART_Initialize
  8031 ;;		_EUSART_Receive_ISR
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text93
  8036   002398                     __ptext93:
  8037                           	callstack 0
  8038   002398                     _EUSART_DefaultErrorHandler:
  8039                           	callstack 18
  8040   002398                     
  8041                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  8042   002398  EC74  F010         	call	_EUSART_RxDataHandler	;wreg free
  8043   00239C  0012               	return		;funcret
  8044   00239E                     __end_of_EUSART_DefaultErrorHandler:
  8045                           	callstack 0
  8046                           
  8047 ;; *************** function _EUSART_RxDataHandler *****************
  8048 ;; Defined at:
  8049 ;;		line 240 in file "mcc_generated_files/eusart.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;Total ram usage:        0 bytes
  8068 ;; Hardware stack levels used: 1
  8069 ;; This function calls:
  8070 ;;		Nothing
  8071 ;; This function is called by:
  8072 ;;		_EUSART_Receive_ISR
  8073 ;;		_EUSART_DefaultErrorHandler
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text94
  8078   0020E8                     __ptext94:
  8079                           	callstack 0
  8080   0020E8                     _EUSART_RxDataHandler:
  8081                           	callstack 19
  8082   0020E8                     
  8083                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  8084   0020E8  0E84               	movlw	low _eusartRxBuffer
  8085   0020EA  2437               	addwf	_eusartRxHead^0,w,c	;volatile
  8086   0020EC  6ED9               	movwf	fsr2l,c
  8087   0020EE  6ADA               	clrf	fsr2h,c
  8088   0020F0  0E00               	movlw	high _eusartRxBuffer
  8089   0020F2  22DA               	addwfc	fsr2h,f,c
  8090   0020F4  CFAE FFDF          	movff	4014,indf2	;volatile
  8091   0020F8  2A37               	incf	_eusartRxHead^0,f,c	;volatile
  8092   0020FA                     
  8093                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8094   0020FA  0E07               	movlw	7
  8095   0020FC  6437               	cpfsgt	_eusartRxHead^0,c	;volatile
  8096   0020FE  EF83  F010         	goto	i2u153_41
  8097   002102  EF85  F010         	goto	i2u153_40
  8098   002106                     i2u153_41:
  8099   002106  EF87  F010         	goto	i2l3495
  8100   00210A                     i2u153_40:
  8101   00210A                     
  8102                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  8103   00210A  0E00               	movlw	0
  8104   00210C  6E37               	movwf	_eusartRxHead^0,c	;volatile
  8105   00210E                     i2l3495:
  8106                           
  8107                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  8108   00210E  2A35               	incf	_eusartRxCount^0,f,c	;volatile
  8109   002110  0012               	return		;funcret
  8110   002112                     __end_of_EUSART_RxDataHandler:
  8111                           	callstack 0
  8112                           
  8113                           	psect	text95
  8114   000000                     __ptext95:
  8115                           	callstack 0
  8116   000000                     
  8117                           	psect	rparam
  8118   000000                     
  8119                           	psect	temp
  8120   000048                     btemp:
  8121                           	callstack 0
  8122   000048                     	ds	1
  8123   000000                     int$flags	set	btemp
  8124   000000                     wtemp8	set	btemp+1
  8125   000000                     ttemp5	set	btemp+1
  8126   000000                     ttemp6	set	btemp+4
  8127   000000                     ttemp7	set	btemp+8
  8128                           
  8129                           	psect	idloc
  8130                           
  8131                           ;Config register IDLOC0 @ 0x200000
  8132                           ;	unspecified, using default values
  8133   200000                     	org	2097152
  8134   200000  FF                 	db	255
  8135                           
  8136                           ;Config register IDLOC1 @ 0x200001
  8137                           ;	unspecified, using default values
  8138   200001                     	org	2097153
  8139   200001  FF                 	db	255
  8140                           
  8141                           ;Config register IDLOC2 @ 0x200002
  8142                           ;	unspecified, using default values
  8143   200002                     	org	2097154
  8144   200002  FF                 	db	255
  8145                           
  8146                           ;Config register IDLOC3 @ 0x200003
  8147                           ;	unspecified, using default values
  8148   200003                     	org	2097155
  8149   200003  FF                 	db	255
  8150                           
  8151                           ;Config register IDLOC4 @ 0x200004
  8152                           ;	unspecified, using default values
  8153   200004                     	org	2097156
  8154   200004  FF                 	db	255
  8155                           
  8156                           ;Config register IDLOC5 @ 0x200005
  8157                           ;	unspecified, using default values
  8158   200005                     	org	2097157
  8159   200005  FF                 	db	255
  8160                           
  8161                           ;Config register IDLOC6 @ 0x200006
  8162                           ;	unspecified, using default values
  8163   200006                     	org	2097158
  8164   200006  FF                 	db	255
  8165                           
  8166                           ;Config register IDLOC7 @ 0x200007
  8167                           ;	unspecified, using default values
  8168   200007                     	org	2097159
  8169   200007  FF                 	db	255
  8170                           
  8171                           	psect	config
  8172                           
  8173                           ; Padding undefined space
  8174   300000                     	org	3145728
  8175   300000  FF                 	db	255
  8176                           
  8177                           ;Config register CONFIG1H @ 0x300001
  8178                           ;	Oscillator Selection bits
  8179                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  8180                           ;	Fail-Safe Clock Monitor Enable bit
  8181                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8182                           ;	Internal/External Oscillator Switchover bit
  8183                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8184   300001                     	org	3145729
  8185   300001  08                 	db	8
  8186                           
  8187                           ;Config register CONFIG2L @ 0x300002
  8188                           ;	Power-up Timer Enable bit
  8189                           ;	PWRT = OFF, PWRT disabled
  8190                           ;	Brown-out Reset Enable bits
  8191                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8192                           ;	Brown Out Reset Voltage bits
  8193                           ;	BORV = 18, VBOR set to 1.8 V nominal
  8194   300002                     	org	3145730
  8195   300002  1F                 	db	31
  8196                           
  8197                           ;Config register CONFIG2H @ 0x300003
  8198                           ;	Watchdog Timer Enable bit
  8199                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  8200                           ;	Watchdog Timer Postscale Select bits
  8201                           ;	WDTPS = 32768, 1:32768
  8202   300003                     	org	3145731
  8203   300003  1E                 	db	30
  8204                           
  8205                           ; Padding undefined space
  8206   300004                     	org	3145732
  8207   300004  FF                 	db	255
  8208                           
  8209                           ;Config register CONFIG3H @ 0x300005
  8210                           ;	CCP2 MUX bit
  8211                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8212                           ;	PORTB A/D Enable bit
  8213                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8214                           ;	Low-Power Timer1 Oscillator Enable bit
  8215                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8216                           ;	HFINTOSC Fast Start-up
  8217                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  8218                           ;	MCLR Pin Enable bit
  8219                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8220   300005                     	org	3145733
  8221   300005  8B                 	db	139
  8222                           
  8223                           ;Config register CONFIG4L @ 0x300006
  8224                           ;	Stack Full/Underflow Reset Enable bit
  8225                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8226                           ;	Single-Supply ICSP Enable bit
  8227                           ;	LVP = OFF, Single-Supply ICSP disabled
  8228                           ;	Extended Instruction Set Enable bit
  8229                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8230                           ;	Background Debugger Enable bit
  8231                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8232   300006                     	org	3145734
  8233   300006  81                 	db	129
  8234                           
  8235                           ; Padding undefined space
  8236   300007                     	org	3145735
  8237   300007  FF                 	db	255
  8238                           
  8239                           ;Config register CONFIG5L @ 0x300008
  8240                           ;	Code Protection Block 0
  8241                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8242                           ;	Code Protection Block 1
  8243                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8244                           ;	Code Protection Block 2
  8245                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8246                           ;	Code Protection Block 3
  8247                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8248   300008                     	org	3145736
  8249   300008  0F                 	db	15
  8250                           
  8251                           ;Config register CONFIG5H @ 0x300009
  8252                           ;	Boot Block Code Protection bit
  8253                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8254                           ;	Data EEPROM Code Protection bit
  8255                           ;	CPD = OFF, Data EEPROM not code-protected
  8256   300009                     	org	3145737
  8257   300009  C0                 	db	192
  8258                           
  8259                           ;Config register CONFIG6L @ 0x30000A
  8260                           ;	Write Protection Block 0
  8261                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8262                           ;	Write Protection Block 1
  8263                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8264                           ;	Write Protection Block 2
  8265                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8266                           ;	Write Protection Block 3
  8267                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  8268   30000A                     	org	3145738
  8269   30000A  0F                 	db	15
  8270                           
  8271                           ;Config register CONFIG6H @ 0x30000B
  8272                           ;	Configuration Register Write Protection bit
  8273                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8274                           ;	Boot Block Write Protection bit
  8275                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8276                           ;	Data EEPROM Write Protection bit
  8277                           ;	WRTD = OFF, Data EEPROM not write-protected
  8278   30000B                     	org	3145739
  8279   30000B  E0                 	db	224
  8280                           
  8281                           ;Config register CONFIG7L @ 0x30000C
  8282                           ;	Table Read Protection Block 0
  8283                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8284                           ;	Table Read Protection Block 1
  8285                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8286                           ;	Table Read Protection Block 2
  8287                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8288                           ;	Table Read Protection Block 3
  8289                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8290   30000C                     	org	3145740
  8291   30000C  0F                 	db	15
  8292                           
  8293                           ;Config register CONFIG7H @ 0x30000D
  8294                           ;	Boot Block Table Read Protection bit
  8295                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8296   30000D                     	org	3145741
  8297   30000D  40                 	db	64
  8298                           tosu	equ	0xFFF
  8299                           tosh	equ	0xFFE
  8300                           tosl	equ	0xFFD
  8301                           stkptr	equ	0xFFC
  8302                           pclatu	equ	0xFFB
  8303                           pclath	equ	0xFFA
  8304                           pcl	equ	0xFF9
  8305                           tblptru	equ	0xFF8
  8306                           tblptrh	equ	0xFF7
  8307                           tblptrl	equ	0xFF6
  8308                           tablat	equ	0xFF5
  8309                           prodh	equ	0xFF4
  8310                           prodl	equ	0xFF3
  8311                           indf0	equ	0xFEF
  8312                           postinc0	equ	0xFEE
  8313                           postdec0	equ	0xFED
  8314                           preinc0	equ	0xFEC
  8315                           plusw0	equ	0xFEB
  8316                           fsr0h	equ	0xFEA
  8317                           fsr0l	equ	0xFE9
  8318                           wreg	equ	0xFE8
  8319                           indf1	equ	0xFE7
  8320                           postinc1	equ	0xFE6
  8321                           postdec1	equ	0xFE5
  8322                           preinc1	equ	0xFE4
  8323                           plusw1	equ	0xFE3
  8324                           fsr1h	equ	0xFE2
  8325                           fsr1l	equ	0xFE1
  8326                           bsr	equ	0xFE0
  8327                           indf2	equ	0xFDF
  8328                           postinc2	equ	0xFDE
  8329                           postdec2	equ	0xFDD
  8330                           preinc2	equ	0xFDC
  8331                           plusw2	equ	0xFDB
  8332                           fsr2h	equ	0xFDA
  8333                           fsr2l	equ	0xFD9
  8334                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        6
    BSS         145
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160     22     153
    BANK1           256     11      11
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2896$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2902$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2908$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2914$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2913	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2908	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2907	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2902	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2901	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2896	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2895	const PTR FTN()enum E2846 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Read_analog_input@Massiv	PTR unsigned char  size(2) Largest target is 20
		 -> Danie_ModbasRtu_analog_Output(BANK0[20]), Danie_ModbasRtu_analog_input(BANK0[20]), Read_analog_input@Danie(COMRAM[2]), 

    Reading_Discrete_Output@Massiv	PTR unsigned char  size(2) Largest target is 2
		 -> Danie_ModbasRtu_Binary_input(COMRAM[2]), Danie_ModbasRtu_Binary_Output(COMRAM[2]), 

    _Bin_input_Output@Masiv	PTR volatile unsigned char  size(2) Largest target is 2
		 -> Danie_ModbasRtu_Binary_input(COMRAM[2]), Danie_ModbasRtu_Binary_Output(COMRAM[2]), 

    crc_chk@data	PTR unsigned char  size(2) Largest target is 30
		 -> Danie_Rx_ModbasRtu(BANK0[30]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_RXC_vect(), EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_RXC_vect(), EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_TXC_vect(), EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> USART_TXC_vect(), EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> SetDAC@DAC8574_Data(COMRAM[3]), main@red2(BANK1[3]), main@red(BANK1[3]), main@dat(BANK1[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> SetDAC@DAC8574_Data(COMRAM[3]), main@red2(BANK1[3]), main@red(BANK1[3]), main@dat(BANK1[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> SetDAC@DAC8574_Data(COMRAM[3]), main@red2(BANK1[3]), main@red(BANK1[3]), main@dat(BANK1[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E2846[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(2) Largest target is 3
		 -> main@red2(BANK1[3]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 3
		 -> SetDAC@DAC8574_Data(COMRAM[3]), main@red(BANK1[3]), main@dat(BANK1[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _modbasRtu_Slave->_modbasRtu_Answer
    _modbasRtu_Answer->_Reading_Discrete_Output
    _analog_output_recording->_Error_modbasRtu
    _Reading_Discrete_Output->_Error_modbasRtu
    _Read_analog_input->_Error_modbasRtu
    _Changing_Discrete_Output->_Error_modbasRtu
    _Error_modbasRtu->_check_sum
    _check_sum->_crc_chk
    _Data_integrity->_crc_chk

Critical Paths under _main in BANK0

    _main->_I2C_ReadNBytes
    _main->_I2C_WriteNBytes
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  221949
                                              0 BANK1     11    11      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                  _SYSTEM_Initialize
                    _USART_UDRE_vect
 ---------------------------------------------------------------------------------
 (1) _USART_UDRE_vect                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1027
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     785
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_WriteNBytes                                      5     1      4  111444
                                             17 BANK0      5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_SetAddressNackCallback                           4     0      4    2259
                                              5 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWrite                                      0     0      0  106225
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (1) _I2C_ReadNBytes                                       5     1      4  108825
                                             17 BANK0      5     1      4
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Open                                             2     2      0      68
                                              0 BANK0      2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterRead                                       0     0      0  106225
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOperation                                  2     2      0  106225
                                             15 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (4) _I2C_Poller                                           0     0      0  106157
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterFsm                                        2     2      0  106157
                                             13 BANK0      2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX_EMPTY                                      2     2      0   26516
                                             11 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX                                            2     2      0   26547
                                             11 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendTxData                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX                                            2     2      0   26516
                                             11 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_ADDRESS_NACK                                  2     2      0   26516
                                             11 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    5232
                                              9 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    5232
                                              9 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    5263
                                              9 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    5232
                                              9 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    5232
                                              9 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _I2C_SetDataCompleteCallback                          4     0      4    2979
                                              5 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetCallback                                      5     1      4    1117
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _I2C_SetBuffer                                        4     0      4    2222
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnStop                               2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnReset                              2     0      2     325
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Close                                            1     1      0      37
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          6     6      0    9352
                                             29 COMRAM     6     6      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR2_ISR
                     _USART_RXC_vect *
                     _USART_TXC_vect *
 ---------------------------------------------------------------------------------
 (11) _USART_TXC_vect                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USART_RXC_vect                                      2     2      0      45
                                              0 COMRAM     2     2      0
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (12) _TMR0_Reload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0    9307
                   Absolute function *
                   _TIMER0_COMP_vect
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TIMER0_COMP_vect                                    0     0      0    9307
                    _modbasRtu_Slave
 ---------------------------------------------------------------------------------
 (13) _modbasRtu_Slave                                     0     0      0    9307
                     _Data_integrity
                    _Error_modbasRtu
                   _modbasRtu_Answer
 ---------------------------------------------------------------------------------
 (14) _modbasRtu_Answer                                    2     2      0    8086
                                             27 COMRAM     2     2      0
           _Changing_Discrete_Output
                    _Error_modbasRtu
                  _Read_analog_input
            _Reading_Discrete_Output
            _analog_output_recording
 ---------------------------------------------------------------------------------
 (15) _analog_output_recording                             2     2      0     755
                                             13 COMRAM     2     2      0
                    _Error_modbasRtu
         _ModbasRtu_Register_address
 ---------------------------------------------------------------------------------
 (15) _Reading_Discrete_Output                            14    11      3    2118
                                             13 COMRAM    14    11      3
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                          _check_sum
 ---------------------------------------------------------------------------------
 (15) _Read_analog_input                                  13     9      4    2108
                                             13 COMRAM    13     9      4
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                          _check_sum
 ---------------------------------------------------------------------------------
 (15) _Changing_Discrete_Output                            2     2      0    2462
                                             13 COMRAM     2     2      0
                    _Error_modbasRtu
         _ModbasRtu_Register_address
                  __Bin_input_Output
 ---------------------------------------------------------------------------------
 (16) __Bin_input_Output                                   9     5      4    1685
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (16) _ModbasRtu_Register_address                          8     6      2      67
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _Error_modbasRtu                                     1     1      0     643
                                             12 COMRAM     1     1      0
                          _check_sum
 ---------------------------------------------------------------------------------
 (17) _check_sum                                           3     3      0     621
                                              9 COMRAM     3     3      0
                            _crc_chk
 ---------------------------------------------------------------------------------
 (14) _Data_integrity                                      4     4      0     578
                                              9 COMRAM     4     4      0
                            _crc_chk
 ---------------------------------------------------------------------------------
 (18) _crc_chk                                             9     6      3     487
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_SetRxInterruptHandler
   _EUSART_SetTxInterruptHandler
   _I2C_ReadNBytes
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterRead
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
             _I2C_DO_RX_NACK_STOP *
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
               _I2C_DO_SEND_RESTART_WRITE *
               _I2C_DO_SEND_STOP *
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_STOP *
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetBuffer
   _I2C_WriteNBytes
     _I2C_Close
     _I2C_MasterWrite
       _I2C_MasterOperation
     _I2C_Open
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _USART_UDRE_vect

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TIMER0_COMP_vect *
       _modbasRtu_Slave
         _Data_integrity
           _crc_chk
         _Error_modbasRtu
           _check_sum
             _crc_chk
         _modbasRtu_Answer
           _Changing_Discrete_Output
             _Error_modbasRtu
             _ModbasRtu_Register_address
             __Bin_input_Output
           _Error_modbasRtu
           _Read_analog_input
             _Error_modbasRtu
             _ModbasRtu_Register_address
             _check_sum
           _Reading_Discrete_Output
             _Error_modbasRtu
             _ModbasRtu_Register_address
             _check_sum
           _analog_output_recording
             _Error_modbasRtu
             _ModbasRtu_Register_address
     _TMR0_DefaultInterruptHandler *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
   _USART_RXC_vect *
     _TMR0_Reload
   _USART_TXC_vect *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      B       B       7        4.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      99       5       95.6%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      47       1       75.5%
BITBIGSFRllllll     1C      0       0      51        0.0%
BITBIGSFRhlhh       19      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhh         C      0       0      42        0.0%
BITBIGSFRlhll        9      0       0      44        0.0%
BITBIGSFRllllh       8      0       0      49        0.0%
BITBIGSFRlhlhh       7      0       0      43        0.0%
BITBIGSFRlllhhl      6      0       0      47        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRhlllh       3      0       0      41        0.0%
BITBIGSFRhllh        2      0       0      40        0.0%
BITBIGSFRllh         2      0       0      45        0.0%
BITBIGSFRlllhhh      1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      39        0.0%
BITBIGSFRlllllh      1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EB      28        0.0%
DATA                 0      0      EB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jun 20 16:24:23 2023

                ?_EUSART_SetRxInterruptHandler 00D3                         ??_I2C_DO_SEND_ADR_READ 00D3  
             __end_of_TMR2_SetInterruptHandler 22E2                                              _D 003A  
                  ?_ModbasRtu_Register_address 0001                        ??_I2C_DO_SEND_ADR_WRITE 00D4  
                                  _SSPSTATbits 000FC7                                             l90 205A  
                                           l93 202A                                             l69 1CFA  
                                           l78 1D9A                                             l96 1FFA  
                                           l99 208A                    Reading_Discrete_Output@Temp 0014  
                              _timer0ReloadVal 0047                          ??_I2C_DO_SEND_RESTART 00D3  
                                          l102 1E26                                            l213 18E4  
                                          l223 1DE2                                            l312 1A64  
                                          l217 20B8                                            l209 225C  
                                          l402 23B8                                            l306 22CA  
                                          l330 2378                                            l226 2340  
                                          l411 238A                                            l236 217E  
                                          l405 2270                                            l333 2370  
                                          l229 2338                                            l245 2230  
                                          l342 2358                                            l262 21FC  
                                          l239 2248                                            l351 22BE  
                                          l256 1AE2                                            l408 2384  
                                          l432 23A4                                            l272 22B2  
                                          l336 2368                                            l281 1658  
                                          l345 2350                                            l426 23C4  
                                          l266 1BC4                                            l275 22A2  
                                          l339 2360                                            l435 2284  
                                          l348 2348                                            l700 22FE  
                                          l429 23CC                                            l381 23C8  
                                          l365 23B4                                            l269 22D6  
                                          l357 1C9A                                            l390 23BC  
                                          l278 1620                                            l294 174C  
                                          l534 215A                                            l295 17BC  
                                          l439 2292                                            l703 2308  
                                          l368 23B0                                            l384 23A8  
                                          l464 2136                                            l378 21A0  
                                          l634 19E6                                            l722 23A0  
                                          l387 2330                                            l491 22F4  
                                          l396 23AC                                            l556 22EA  
                                          l822 21C0                                            l399 23C0  
                                          l488 21DE                                            l914 1FCA  
                                          l691 231C                                            l844 22E0  
                                          l694 2312                                            l791 1460  
                                          l792 140C                                            l697 2326  
                                          l794 1482                                            l796 147E  
                                          l797 1480                                            _PR2 000FCB  
                       ??_EUSART_RxDataHandler 0001                         fp__I2C_DO_RX_NACK_STOP 0000  
                       _I2C_MasterWaitForEvent 2284                 ?_EUSART_SetFramingErrorHandler 00D3  
                              _TMR2_Initialize 21A2                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                  main@address 0109                   ??_I2C_SetAddressNackCallback 00DC  
                     ??_I2C_CallbackReturnStop 00DE                                   _I2C_DO_RESET 22B4  
                      ??_rd2RegCompleteHandler 00DE                                           l4101 1A7E  
                                         l4111 2174                                           l4103 1AB2  
                                         l4113 217C                                           l4105 2232  
                                         l4121 202C                                           l4115 23BA  
                                         l4107 215C                                           l4123 2042  
                                         l4131 2012                                           l4203 23AA  
                                         l4211 23A2                                           l4221 23CA  
                                         l4117 23B6                                           l4109 216C  
                                         l4125 2058                                           l4133 2028  
                                         l4141 1FF8                                           l4213 23B2  
                                         l4205 2362                                           l4119 2386  
                                         l4223 22CC                                           l4231 22A4  
                                         l4311 22C0                                           l4207 2366  
                                         l4145 205C                                           l4129 1FFC  
                                         l4137 1FCC                                           l4153 1DE4  
                                         l4217 23AE                                           l4161 225E  
                                         l4321 19F0                                           l4225 22D0  
                                         l4233 22A8                                           l4241 2298  
                                         l4305 1762                                           l4313 22C4  
                                         l4401 218E                                           l4147 2072  
                                         l4139 1FE2                                           l4155 1E0E  
                                         l4331 1A02                                           l4227 22D4  
                                         l4235 22B0                                           l4243 22A0  
                                         l4251 15AC                                           l4315 22C8  
                                         l4411 1DA0                                           l4403 219E  
                                         l4501 208C                                           l4149 2088  
                                         l4157 1E24                                           l4165 232C  
                                         l4325 19F8                                           l4173 236A  
                                         l4181 235E                                           l4421 1DCA  
                                         l4413 1DA6                                           l4407 23C2  
                                         l4511 20B4                                           l4503 2092  
                                         l4327 19FC                                           l4319 19E8  
                                         l4239 2294                                           l4271 1650  
                                         l4255 15B4                                           l4247 1594  
                                         l4167 2372                                           l4175 236E  
                                         l4343 2352                                           l4191 2342  
                                         l4351 22B8                                           l4423 1DD2  
                                         l4415 1DB4                                           l4409 23C6  
                                         l4505 20A0                                           l4185 23A6  
                                         l4337 1A0A                                           l4273 1656  
                                         l4265 15C4                                           l4281 1716  
                                         l4169 2376                                           l4345 2356  
                                         l4193 2346                                           l4353 22BC  
                                         l4361 1C40                                           l4425 1DD6  
                                         l4417 1DB6                                           l4441 230A  
                                         l4521 225A                                           l4433 22E2  
                                         l4601 21C6                                           l4507 20A4  
                                         l4099 1A6A                                           l4267 1624  
                                         l4259 15BC                                           l4283 1724  
                                         l4179 235A                                           l4371 1C50  
                                         l4427 1DDA                                           l4419 1DBA  
                                         l4515 233A                                           l4451 186C  
                                         l4443 231E                                           l4435 2300  
                                         l4531 22EC                                           l4523 2112  
                                         l4611 21DA                                           l4603 21CA  
                                         l4509 20B0                                           l4189 2380  
                                         l4269 1636                                           l4285 172A  
                                         l4197 234A                                           l4349 22B4  
                                         l4365 1C48                                           l4357 1C34  
                                         l4381 1B5A                                           l4429 1DDE  
                                         l4461 187A                                           l4453 1870  
                                         l4437 22F6                                           l4525 2122  
                                         l4445 22D8                                           l4541 21BC  
                                         l4533 21A2                                           l4605 21CE  
                                         l4621 1FC8                                           l4613 1F9A  
                                         l4295 1752                                           l4287 1742  
                                         l4199 234E                                           l4359 1C38  
                                         l4383 1B6A                                           l4391 21E0  
                                         l4471 189C                                           l4463 1882  
                                         l4455 1872                                           l4447 1858  
                                         l4439 2314                                           l4519 224A  
                                         l4527 2134                                           l4551 2156  
                                         l4543 2138                                           l4535 21AA  
                                         l4607 21D2                                           l4615 1FAC  
                                         l4289 1746                                           l4385 1B7E  
                                         l4393 21E4                                           l4481 18C4  
                                         l4473 18A4                                           l4465 1884  
                                         l4457 1874                                           l4449 185E  
                                         l4561 198E                                           l4553 196A  
                                         l4529 239E                                           l4545 2144  
                                         l4537 21AC                                           l4609 21D6  
                                         l4617 1FBC                                           l4299 175A  
                                         l4387 1B84                                           l4379 1B56  
                                         l4395 21E8                                           l4483 18CC  
                                         l4475 18AC                                           l4467 188C  
                                         l4459 1876                                           l4491 18E2  
                                         l4571 19AC                                           l4563 1992  
                                         l4555 196C                                           l4547 2146  
                                         l4539 21AE                                           l4619 1FC2  
                                         l4731 13CC                                           l4389 23BE  
                                         l4397 21EC                                           l4485 18D4  
                                         l4477 18B4                                           l4469 1894  
                                         l4581 1CB8                                           l4573 19BA  
                                         l4565 1996                                           l4557 197A  
                                         l4549 2148                                           l4741 13E2  
                                         l4733 13CE                                           l4399 2180  
                                         l4487 18D8                                           l4479 18BC  
                                         l4591 1D56                                           l4495 221A  
                                         l4583 1CCC                                           l4575 19E4  
                                         l4567 199A                                           l4559 198A  
                                         l4751 146E                                           l4743 13EE  
                                         l4735 13D0                                           l4489 18DC  
                                         l4593 1D6E                                           l4497 2332  
                                         l4585 1CE2                                           l4577 1CA0  
                                         l4569 199E                                           l4753 1490  
                                         l4745 13FC                                           l4737 13D0  
                                         l4729 13AC                                           l4595 1D82  
                                         l4587 1CE6                                           l4579 1CA0  
                                         l4755 14A2                                           l4747 140E  
                                         l4739 13D6                                           l4597 1D86  
                                         l4589 1D56                                           l4749 1458  
                                         l4599 21C2                                           l4881 1C84  
                                         l4883 1796                                           l4885 15FA  
                                         l4887 1A3E                                ?_USART_RXC_vect 0001  
                                         u2120 1A7E                                           u2121 1A7A  
                                         u2130 216C                                           u2131 2168  
                                         u2140 226E                                           u2220 2292  
                                         u2300 186C                                           u2141 2268  
                                         u2221 228E                                           u2301 1868  
                                         _LATA 000F89                                           u2310 20A0  
                                         u2150 15A8                                           u2230 1B6A  
                                         _LATB 000F8A                                           u2311 209C  
                                         u2151 15A4                                           u2231 1B66  
                                         _LATC 000F8B                                           u2208 1A18  
                                         u2240 1B7E                                           u2320 1CB8  
                                         u2209 1A2A                                           u2241 1B7A  
                                         u2321 1CB4                                           u2146 2270  
                                         u2170 1650                                           u2218 1C5E  
                                         u2330 1CFA                                           u2171 164C  
                                         u2219 1C70                                           u2331 1CF6  
                                         u2180 1742                                           u2260 21FC  
                                         u2340 1D6E                                           u2500 140C  
                                         u2181 173E                                           u2261 21F8  
                                         u2341 1D6A                                           u2501 1408  
                                         u2270 218E                                           u2350 1D9A  
                                         u2510 146E                                           u2271 218A  
                                         u2351 1D96                                           u2511 146A  
                                         u2168 15D2                                           u2280 1DB4  
                                         u2360 1FAC                                           u2520 147E  
                                         u2169 15E6                                           u2281 1DB0  
                                         u2361 1FA8                                           u2521 147A  
                                         u2258 1BAE                                           u2290 1DCA  
                                         u2530 1490                                           u2259 1BC0  
                                         u2291 1DC6                                           u2531 148C  
                                         u2540 14A2                                           u2541 149E  
                                         u2198 1770                                           u2199 1782  
                                         u2490 13FC                                           u2491 13F8  
                                         _TMR2 000FCC                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 00DE                                ?_USART_TXC_vect 0001  
               Reading_Discrete_Output@Number_ 0010                                           _main 13AC  
                     ?_I2C_CallbackReturnReset 00DC                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                               __end_of_I2C_Open 18E6  
                                         btemp 0048                               ?_USART_UDRE_vect 0001  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 0108                               _modbasRtu_Answer 1198  
               Reading_Discrete_Output@address 001A                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 ___param_bank 000000                               ?_I2C_MasterClose 0001  
                      __end_of_TMR0_Initialize 215C                                _I2C_WriteNBytes 1C9C  
               ??_TMR0_DefaultInterruptHandler 0001                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 2352                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 22F6                                          ?_main 0001  
                    ??_analog_output_recording 000E                                          _ANSEL 000F7E  
                                        _T0CON 000FD5                                          _T2CON 000FCA  
                                        i2l553 1F98                                          i2l730 008E  
                                        i2l731 00EC                                          i2l732 00C8  
                                        i2l549 2390                                          i2l902 1968  
                                        i2l559 23D4                                          i2l727 0046  
                                        i2l841 20E6                                          i2l905 23CE  
                                        i2l665 1EE8                                          i2l737 00EC  
                                        i2l682 23D6                                          i2l923 184A  
                                        i2l675 1714                                          i2l907 23D0  
                                        i2l924 1852                                          i2l932 1C32  
                                        i2l668 1EEA                                          i2l685 2396  
                                        i2l941 1590                                          i2l679 2110  
                                        i2l919 17E2                                          i2l927 1F62  
                                        i2l951 1B54                                          i2l847 23D2  
                                        i2l688 239C                                          i2l944 1592  
                                        i2l891 2218                                          i2l981 1D50  
                                        i2l966 1196                                          i2l984 2282  
                                        i2l976 13AA                                          i2l888 2200  
                                        i2l889 2202                                          i2l987 1EAA  
                                        i2l998 1208                                          i2l999 120E  
                                        _RCREG 000FAE                                          _RCSTA 000FAB  
                                        _TMR0H 000FD7                                          _TMR0L 000FD6  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 00DE  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                      ?_TMR0_SetInterruptHandler 00D3  
                              __end_of_crc_chk 1854                               __end_of_TMR0_ISR 1F9A  
                            __end_of_I2C_DO_RX 17BE                              __end_of_I2C_DO_TX 165A  
                             __end_of_TMR2_ISR 20E8                                 _Temp_ModbasRtu 003C  
                     ?_Reading_Discrete_Output 000E                              __end_of_I2C_Close 20BA  
               I2C_MasterOperation@returnValue 00E3                        _I2C_MasterEnableRestart 23BA  
                                        pclath 000FFA                                          pclatu 000FFB  
           Reading_Discrete_Output@Number_bits 0018                                          tablat 000FF5  
                             ?_I2C_SetCallback 00D3                   I2C_SetAddressNackCallback@cb 00D8  
                                        ttemp5 0049                                          ttemp6 004C  
                                        ttemp7 0050                                          status 000FD8  
                                        wtemp8 0049                              ?_I2C_DO_SEND_STOP 0001  
               analog_output_recording@address 000E                             ??_I2C_DO_SEND_STOP 00D3  
                     fp__rd1RegCompleteHandler 0000                                __initialization 1E28  
                                 __end_of_main 14AE                       fp__wr1RegCompleteHandler 0000  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ?_I2C_DO_RX_ACK 0001  
                      __end_of_TMR2_Initialize 21C2                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 00D5                       _TMR2_SetInterruptHandler 22D8  
                                       ??_main 00E9               __end_of_Changing_Discrete_Output 1B56  
                            ?_I2C_MasterIsNack 0001                                  __activetblptr 000003  
                            ?_I2C_MasterSetIrq 0001                             ??_I2C_MasterIsNack 00D3  
                             ??_Data_integrity 000A                             ??_I2C_MasterSetIrq 00D3  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 23D8  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 23D6                     _EUSART_OverrunErrorHandler 00EB  
              __end_of_I2C_CallbackReturnReset 23B2                  I2C_SetDataCompleteCallback@cb 00D8  
                                       _ANSELH 000F7F                                   ??_I2C_Poller 00E2  
                                       i2l1005 12A2                                         i2l1035 1F28  
                                       i2l3051 1E94                                         i2l3053 1E96  
                                       i2l3213 1F2C                                         i2l3221 14BC  
                                       i2l3301 10FE                                         i2l3055 1EA6  
                                       i2l3047 1E6C                                         i2l3215 1F30  
                                       i2l3231 14F6                                         i2l3223 14C2  
                                       i2l3311 112C                                         i2l3303 1100  
                                       i2l3401 1C08                                         i2l3049 1E84  
                                       i2l3241 1584                                         i2l3233 1506  
                                       i2l3225 14C4                                         i2l3305 1116  
                                       i2l3313 1130                                         i2l3321 1152  
                                       i2l3403 1C0C                                         i2l3251 227C  
                                       i2l3243 158C                                         i2l3235 1526  
                                       i2l3227 14D4                                         i2l3219 14B0  
                                       i2l3331 118E                                         i2l3323 1164  
                                       i2l3315 1144                                         i2l3307 111A  
                                       i2l3405 1C2A                                         i2l3237 1544  
                                       i2l3229 14E4                                         i2l3341 12D2  
                                       i2l3333 1190                                         i2l3325 1174  
                                       i2l3317 114C                                         i2l3309 111C  
                                       i2l3421 11E0                                         i2l3413 1198  
                                       i2l3501 1EFA                                         i2l3247 2274  
                                       i2l3239 1558                                         i2l3271 1B12  
                                       i2l3351 130A                                         i2l3343 12DC  
                                       i2l3335 12A4                                         i2l3327 1176  
                                       i2l3423 11F8                                         i2l3415 11A0  
                                       i2l3431 121E                                         i2l3503 1F0E  
                                       i2l3511 1F24                                         i2l3409 1C30  
                                       i2l3249 2278                                         i2l3273 1B24  
                                       i2l3265 1AE4                                         i2l3361 136A  
                                       i2l3353 1328                                         i2l3345 12EA  
                                       i2l3337 12A8                                         i2l3329 1186  
                                       i2l3281 1040                                         i2l3425 1200  
                                       i2l3417 11B4                                         i2l3433 129A  
                                       i2l3505 1F14                                         i2l3275 1B3E  
                                       i2l3267 1AF2                                         i2l3371 13A4  
                                       i2l3363 136C                                         i2l3355 1342  
                                       i2l3347 12F2                                         i2l3339 12B6  
                                       i2l3291 1086                                         i2l3283 105C  
                                       i2l3435 12A0                                         i2l3427 1214  
                                       i2l3419 11C8                                         i2l3507 1F1A  
                                       i2l3269 1B08                                         i2l3365 1384  
                                       i2l3357 1346                                         i2l3349 12FA  
                                       i2l3293 109C                                         i2l3285 1066  
                                       i2l3277 1022                                         i2l3373 1CFC  
                                       i2l3509 1F1E                                         i2l3701 1EAC  
                                       i2l3391 1BC6                                         i2l3367 1386  
                                       i2l3359 134E                                         i2l3295 10B0  
                                       i2l3287 1078                                         i2l3279 1032  
                                       i2l3375 1D0A                                         i2l3711 1EE2  
                                       i2l3703 1EBC                                         i2l3393 1BCC  
                                       i2l3369 1392                                         i2l3297 10B6  
                                       i2l3289 1084                                         i2l3377 1D26  
                                       i2l3721 16A0                                         i2l3713 165A  
                                       i2l3705 1ECC                                         i2l3491 20FA  
                                       i2l3651 2392                                         i2l2931 17DA  
                                       i2l3395 1BE4                                         i2l3299 10E2  
                                       i2l3379 1D30                                         i2l3643 238C  
                                       i2l3731 1710                                         i2l3723 16AE  
                                       i2l3715 166A                                         i2l3707 1ECE  
                                       i2l3493 210A                                         i2l3653 2398  
                                       i2l2941 1818                                         i2l2925 17BE  
                                       i2l3397 1BE8                                         i2l3645 21FE  
                                       i2l3733 20BA                                         i2l3725 16BC  
                                       i2l3717 1678                                         i2l3709 1EDE  
                                       i2l3495 210E                                         i2l3487 20E8  
                                       i2l2943 181C                                         i2l2927 17C6  
                                       i2l3399 1C06                                         i2l3647 2210  
                                       i2l3735 20BC                                         i2l3751 18EA  
                                       i2l3727 16D6                                         i2l3719 1686  
                                       i2l3911 0022                                         i2l3489 20F8  
                                       i2l2937 17F0                                         i2l2929 17D6  
                                       i2l2945 1838                                         i2l3649 2214  
                                       i2l3737 20CE                                         i2l3761 191E  
                                       i2l3753 18EE                                         i2l3729 16F2  
                                       i2l3921 0070                                         i2l3913 0030  
                                       i2l2939 180A                                         i2l3499 1EEC  
                                       i2l3691 1F64                                         i2l3771 1956  
                                       i2l3763 1920                                         i2l3755 18FC  
                                       i2l3923 009C                                         i2l3915 003E  
                                       i2l3693 1F68                                         i2l3773 1966  
                                       i2l3765 1942                                         i2l3757 190A  
                                       i2l3749 18E6                                         i2l3925 00AA  
                                       i2l3917 0054                                         i2l3695 1F6A  
                                       i2l3767 1946                                         i2l3759 190C  
                                       i2l3927 00D6                                         i2l3919 0062  
                                       i2l3697 1F6E                                         i2l3769 1948  
                                       i2l3929 00E4                                         i2l3699 1F80  
                                       i2l4889 1234                                         _OSCCON 000FD3  
              __end_of_analog_output_recording 1D52                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                          _I2C_MasterGetRxData 23A6                        __end_of_I2C_WriteNBytes 1CFC  
                                 ?_TMR0_Reload 0001                                  _I2C_MasterFsm 1B56  
                          _EUSART_Transmit_ISR 1EAC                               ?_TMR0_Initialize 0001  
                                       clear_0 1E4E                                         clear_1 1E5A  
                            I2C_SetCallback@cb 00D3                        fp__I2C_DO_SEND_ADR_READ 0000  
                                       isa$std 000001                                      ??_crc_chk 0004  
                                _I2C_SetBuffer 215C                             __end_of_I2C_Poller 21FE  
                 __end_of_I2C_MasterDisableIrq 23C6                  Reading_Discrete_Output@Massiv 000E  
                          _I2C_DO_ADDRESS_NACK 1C34                __end_of_Reading_Discrete_Output 1198  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 2232                     _I2C_SetAddressNackCallback 221A  
                                 __mediumconst 0000                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                    ??_I2C_MasterEnableRestart 00D3       TMR2_SetInterruptHandler@InterruptHandler 00D3  
     TMR0_SetInterruptHandler@InterruptHandler 00D3                           ?_EUSART_Transmit_ISR 0001  
                            _SYSTEM_Initialize 21C2                                     __accesstop 0060  
                      __end_of__initialization 1E60                            _I2C_MasterOperation 1D9C  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                check_sum@Adress 000C  
         __end_of_EUSART_SetTxInterruptHandler 2300                   _EUSART_SetTxInterruptHandler 22F6  
                      _rdBlkRegCompleteHandler 1DE4                     fp__rdBlkRegCompleteHandler 0000  
                               __pcstackCOMRAM 0001                                 ?_I2C_MasterFsm 0001  
                              ??_I2C_DO_RX_ACK 00D3                                   __pidataBANK0 237A  
                       _I2C_CallbackReturnStop 23B2                            ??_SYSTEM_Initialize 00D5  
                                    ?_TMR0_ISR 0001                                      ?_TMR2_ISR 0001  
                             ?_TMR2_Initialize 0001                   Read_analog_input@Number_bits 0018  
                               ?_I2C_SetBuffer 00D3                        ?_I2C_MasterWaitForEvent 0001  
                __end_of_I2C_DO_SEND_ADR_WRITE 22A4                     ?_I2C_DO_SEND_RESTART_WRITE 0001  
                         ?_I2C_MasterOperation 0001                              ??_modbasRtu_Slave 001E  
                        ??_I2C_MasterGetRxData 00D3                          I2C_ReadNBytes@address 00E8  
                                   ??_I2C_Open 00D3                       __end_of_modbasRtu_Answer 12A4  
                         _eusartRxStatusBuffer 0024                               ??_USART_RXC_vect 0001  
                   __end_of_I2C_MasterClearIrq 23CE                       _Changing_Discrete_Output 1AE4  
                             ??_USART_TXC_vect 0001                ??_EUSART_SetOverrunErrorHandler 00D5  
                    __end_of_SYSTEM_Initialize 21E0                          ??_EUSART_Transmit_ISR 0001  
                            _I2C_MasterSendAck 2380                                     __pbssBANK0 0060  
                             _TIMER0_COMP_vect 21FE                                  ??_I2C_DO_IDLE 00D3  
                                ??_I2C_DO_RCEN 00D3                  __end_of_rd2RegCompleteHandler 202C  
                 __end_of_I2C_MasterSendTxData 2332                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 23AA                                     __pnvCOMRAM 0042  
                        ??_I2C_DO_ADDRESS_NACK 00DE                  __end_of_wr2RegCompleteHandler 208C  
                          _I2C_DO_RX_NACK_STOP 234A                          _rd1RegCompleteHandler 202C  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 238C  
                             ?_I2C_WriteNBytes 00E4                         I2C_WriteNBytes@address 00E8  
                        _wr1RegCompleteHandler 1FCC                            ??_I2C_MasterSendAck 00D3  
                     rd1RegCompleteHandler@ptr 00DC                            Read_analog_input@Vt 0011  
                ?_EUSART_SetTxInterruptHandler 00D3               _EUSART_TxDefaultInterruptHandler 00F1  
                  __end_of_I2C_DO_SEND_RESTART 236A                                _I2C_DO_TX_EMPTY 19E8  
             __end_of_TMR0_SetInterruptHandler 22EC                            I2C_SetBuffer@buffer 00D3  
                                   ??_TMR0_ISR 001E                                     ??_TMR2_ISR 0001  
               __end_of_I2C_MasterWaitForEvent 2294                            ??_I2C_MasterStartRx 00D3  
                                      _BAUDCON 000FB8                   ??_EUSART_DefaultErrorHandler 0001  
                        ??_I2C_MasterOperation 00E2                 I2C_SetDataCompleteCallback@ptr 00DA  
                     ??_I2C_DO_RX_NACK_RESTART 00D3              __end_of_I2C_DO_SEND_RESTART_WRITE 2372  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 0035  
                      Read_analog_input@Adress 001A                        Read_analog_input@Massiv 000E  
                    __end_of_I2C_MasterSendAck 2386                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 00D5                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                         _Bit_action_ModbasRtu 003B                      __end_of_I2C_MasterStartRx 23AE  
                            __end_of_check_sum 1EAC                           I2C_Close@returnValue 00D3  
                 ?_I2C_SetDataCompleteCallback 00D8                                      _I2C_DO_RX 1716  
                                    _I2C_DO_TX 1594               __end_of_I2C_DO_SEND_RESTART_READ 237A  
                                    _I2C_Close 208C                      ??_rdBlkRegCompleteHandler 00DE  
                         _I2C_MasterDisableIrq 23C2                                ??_I2C_MasterFsm 00E0  
                                      __Hparam 0000                                        __Lparam 0000  
                   ??_TMR2_SetInterruptHandler 00D5                                 _I2C_ReadNBytes 1D52  
                          __end_of_I2C_DO_IDLE 22D8                            __end_of_I2C_DO_RCEN 22CC  
                              ??_I2C_SetBuffer 00D7                        I2C_SetBuffer@bufferSize 00D5  
                                 __psmallconst 1000                             I2C_ReadNBytes@data 00E4  
                               _I2C_MasterRead 233A                                 _I2C_MasterOpen 2180  
                                      __pcinit 1E28                                 _I2C_MasterStop 23B6  
                               _I2C_Initialize 224A                                        __ramtop 1000  
                                      _crc_chk 17BE                                        __ptext0 13AC  
                                      __ptext1 1F9A                                        __ptext2 21C2  
                                      __ptext3 21A2                                        __ptext4 22D8  
                                      __ptext5 2138                                        __ptext6 22E2  
                                      __ptext7 2112                                        __ptext8 22EC  
                                      __ptext9 239E                          ??_I2C_DO_RX_NACK_STOP 00D3  
                                    _T0CONbits 000FD5                          _OSCILLATOR_Initialize 22EC  
                                    _T2CONbits 000FCA                             I2C_SetCallback@idx 00D7  
                     ??_PIN_MANAGER_Initialize 00D3                  I2C_CallbackReturnReset@funPtr 00DC  
                           I2C_SetCallback@ptr 00D5                       wr1RegCompleteHandler@ptr 00DC  
                     fp__I2C_DO_SEND_ADR_WRITE 0000                                        main@dat 0103  
                                      main@red 0106                           end_of_initialization 1E60  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
        __end_of_EUSART_SetOverrunErrorHandler 2314                  _EUSART_SetOverrunErrorHandler 230A  
                                   ?_I2C_Close 0001                         ?_rd1RegCompleteHandler 00DC  
                      __end_of_I2C_DO_TX_EMPTY 1A66                          ?_I2C_MasterDisableIrq 0001  
                       __end_of_I2C_ReadNBytes 1D9C                              _EUSART_Initialize 196A  
                       ?_wr1RegCompleteHandler 00DC                              ??_Error_modbasRtu 000D  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                                    _RCSTAbits 000FAB                                        postdec1 000FE5  
                                      postdec2 000FDD                         __end_of_I2C_MasterRead 2342  
                       __end_of_I2C_MasterOpen 21A2                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 000FEE                                        postinc2 000FDE  
                       __end_of_I2C_MasterStop 23BA                         __end_of_I2C_Initialize 225E  
                     ?_analog_output_recording 0001                        __Bin_input_Output@Masiv 0002  
                      __Bin_input_Output@Temp1 0009                      fp__I2C_CallbackReturnStop 0000  
                          ??_EUSART_Initialize 00D5                 ??_EUSART_SetTxInterruptHandler 00D5  
                     _TMR0_SetInterruptHandler 22E2                                      _PORTAbits 000F80  
              __end_of_rdBlkRegCompleteHandler 1E28                        __Bin_input_Output@state 0001  
                         _I2C_MasterSendTxData 2328                                fp__I2C_DO_RESET 0000  
                  ?_I2C_SetAddressNackCallback 00D8                              _Read_analog_input 12A4  
                           ?_Read_analog_input 000E                      __end_of_EUSART_Initialize 19E8  
                                  _I2C_DO_IDLE 22CC                                    _I2C_DO_RCEN 22C0  
                   rdBlkRegCompleteHandler@ptr 00DC                                      _TXSTAbits 000FAC  
                              ?_I2C_ReadNBytes 00E4                        ?_I2C_CallbackReturnStop 00DC  
                     _I2C_DO_SEND_RESTART_READ 2372                        _quantity_Data_ModbasRtu 003D  
                          ??_Read_analog_input 0012                    fp__I2C_DO_SEND_RESTART_READ 0000  
                              _modbasRtu_Slave 1EEC                   I2C_CallbackReturnStop@funPtr 00DC  
                              ?_I2C_MasterRead 0001                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 23A2                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001           __end_of_TMR2_DefaultInterruptHandler 23D4  
                 _TMR2_DefaultInterruptHandler 23D2                        _I2C_CallbackReturnReset 23AE  
                               crc_chk@reg_crc 0008                     fp__I2C_CallbackReturnReset 0000  
           __end_of_EUSART_DefaultErrorHandler 239E                   ??_ModbasRtu_Register_address 0003  
                   _EUSART_DefaultErrorHandler 2398                     ??_Changing_Discrete_Output 000E  
                     __end_of_TIMER0_COMP_vect 221A                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                    ??_I2C_DO_SEND_RESTART_WRITE 00D3  
                            ??_USART_UDRE_vect 00D3                            start_initialization 1E28  
                    __end_of_Read_analog_input 13AC                              ?_modbasRtu_Answer 0001  
                                ?_I2C_DO_RESET 0001                Changing_Discrete_Output@address 000E  
                           ??_modbasRtu_Answer 001C   EUSART_SetRxInterruptHandler@interruptHandler 00D3  
 EUSART_SetTxInterruptHandler@interruptHandler 00D3                                    ??_I2C_DO_RX 00DE  
                                  ??_I2C_DO_TX 00DE                              ??_I2C_MasterClose 00D3  
                       ??_I2C_MasterDisableIrq 00D3                                    ??_I2C_Close 00D3  
                            ??_I2C_MasterStart 00D3                              __Bin_input_Output 14AE  
                            ??_I2C_MasterWrite 00E4                 __end_of_I2C_CallbackReturnStop 23B6  
                       _I2C_DO_RX_NACK_RESTART 2342                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 23CA                             ?__Bin_input_Output 0001  
                      _Reading_Discrete_Output 1022                 ?_EUSART_SetOverrunErrorHandler 00D3  
                         Data_integrity@Temp22 000B                           Data_integrity@Temp33 000D  
                   _EUSART_FramingErrorHandler 00ED                         _EUSART_SetErrorHandler 231E  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 23AA  
                 Reading_Discrete_Output@Danie 0013                            ??__Bin_input_Output 0005  
                                  __pdataBANK0 00F3                          __end_of_I2C_DO_RX_ACK 235A  
                 Reading_Discrete_Output@Temp2 0015                   Reading_Discrete_Output@Temp3 0017  
              fp__TMR2_DefaultInterruptHandler 0000                  ?_TMR2_DefaultInterruptHandler 0001  
                             _I2C_DO_SEND_STOP 235A                              ??_I2C_SetCallback 00D7  
                           _Danie_Rx_ModbasRtu 008D                            I2C_Open@returnValue 00D4  
                           _I2C_MasterSendNack 2386                       ?_I2C_MasterEnableRestart 0001  
                            _i2c_fsmStateTable 1001                         fp__I2C_DO_SEND_RESTART 0000  
                  __end_of_EUSART_Transmit_ISR 1EEC                          _I2C_DO_SEND_ADR_WRITE 2294  
                                  __pbssCOMRAM 0024                                  __pcstackBANK0 00D3  
                                __pcstackBANK1 0100                                 ??_I2C_DO_RESET 00D3  
                          ?_I2C_MasterSendNack 0001                       USART_RXC_vect@TempModbas 0002  
                 __end_of_I2C_DO_SEND_ADR_READ 22B4                           ??_I2C_MasterClearIrq 00D3  
                  __end_of_I2C_DO_ADDRESS_NACK 1C9C                  _Danie_ModbasRtu_Binary_Output 003E  
                    __end_of__Bin_input_Output 1594                     __end_of_EUSART_Receive_ISR 1716  
                             _I2C_MasterIsNack 225E                        __end_of_modbasRtu_Slave 1F2A  
                    _I2C_DO_SEND_RESTART_WRITE 236A               _EUSART_RxDefaultInterruptHandler 00EF  
                             _I2C_MasterSetIrq 23A2                          _TMR0_InterruptHandler 0044  
                                    __pnvBANK0 00E9                                      _check_sum 1E6A  
                        _rd2RegCompleteHandler 1FFC                   __end_of_EUSART_RxDataHandler 2112  
                       _PIN_MANAGER_Initialize 2112                          _wr2RegCompleteHandler 205C  
                    ??_I2C_CallbackReturnReset 00DE                    __end_of_I2C_MasterOperation 1DE4  
                         ??_I2C_MasterSendNack 00D3                       rd2RegCompleteHandler@ptr 00DC  
                                    __pintcode 0008                                   _eusartRxHead 0037  
                                 _eusartTxHead 0039                         Read_analog_input@Danie 0014  
                                 _eusartRxTail 0036                         ??_I2C_MasterSendTxData 00D3  
                                 _eusartTxTail 0038                      __end_of_i2c_fsmStateTable 1021  
                 ??_INTERRUPT_InterruptManager 001E                           __Bin_input_Output@Sd 0004  
                                     ?_crc_chk 0001                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                        _eusartTxBufferRemaining 0046  
                                  __smallconst 1000                        I2C_MasterOperation@read 00E2  
                                     _I2C_Open 1854                                _Error_modbasRtu 2272  
                            I2C_ReadNBytes@len 00E6                        ??_rd1RegCompleteHandler 00DE  
              Reading_Discrete_Output@address2 0016                           _INTERRUPT_Initialize 239E  
                               _eusartRxBuffer 0084                        ??_wr1RegCompleteHandler 00DE  
                            ??_TMR0_Initialize 00D5                                 _eusartTxBuffer 002C  
                    ??_Reading_Discrete_Output 0011                                       _LATAbits 000F89  
       EUSART_SetErrorHandler@interruptHandler 00D3                              fp__USART_RXC_vect 0000  
                                   ?_check_sum 0001                                       _PIE1bits 000F9D  
                            fp__USART_TXC_vect 0000                              _eusartRxLastError 0034  
                                     i2u110_40 17F0                                       i2u110_41 17EC  
                                     i2u111_40 1838                                       i2u111_41 1834  
                                     i2u112_40 184A                                       i2u112_41 1846  
                                     i2u121_40 14D4                                       i2u201_40 009C  
                                     i2u200_48 0076                                       i2u121_41 14D0  
                                     i2u201_41 0098                                       i2u200_49 008A  
                                     i2u122_40 14F6                                       i2u202_40 00AA  
                                     i2u122_41 14F2                                       i2u202_41 00A6  
                                     i2u123_40 1506                                       i2u123_41 1502  
                                     i2u132_40 1B08                                       i2u140_40 1144  
                                     i2u204_40 00D6                                       i2u203_48 00B0  
                                     i2u132_41 1B04                                       i2u140_41 1140  
                                     i2u204_41 00D2                                       i2u203_49 00C4  
                                     i2u124_44 1518                                       i2u124_45 1514  
                                     i2u133_40 1B24                                       i2u141_40 1164  
                                     i2u205_40 00E4                                       i2u133_41 1B20  
                                     i2u141_41 1160                                       i2u205_41 00E0  
                                     i2u125_44 1538                                       i2u125_45 1534  
                                     i2u142_40 1174                                       i2u134_40 105C  
                                     i2u142_41 1170                                       i2u134_41 1058  
                                     i2u126_44 156A                                       i2u126_45 1566  
                                     i2u127_40 1584                                       i2u143_40 12D2  
                                     i2u135_40 109C                                       i2u127_41 1580  
                                     i2u143_41 12CE                                       i2u135_41 1098  
                                     i2u144_40 130A                                       i2u144_41 1306  
                                     i2u136_44 10C8                                       i2u136_45 10C4  
                                     i2u153_40 210A                                       i2u145_40 13A4  
                                     i2u137_40 10E2                                       i2u153_41 2106  
                                     i2u145_41 13A0                                       i2u137_41 10DE  
                                     i2u146_40 1D26                                       i2u154_40 1EFA  
                                     i2u146_41 1D22                                       i2u154_41 1EF6  
                                     i2u138_44 10F4                                       i2u138_45 10F0  
                                     i2u139_40 1116                                       i2u155_40 1F0E  
                                     i2u163_40 1F80                                       i2u171_40 16F2  
                                     i2u170_48 16C2                                       i2u139_41 1112  
                                     i2u155_41 1F0A                                       i2u163_41 1F7C  
                                     i2u171_41 16EE                                       i2u170_49 16D6  
                                     i2u148_40 1C06                                       i2u180_40 1956  
                                     i2u148_41 1C02                                       i2u180_41 1952  
                                     i2u149_40 1C2A                                       i2u164_48 1F86  
                                     i2u173_40 20CE                                       i2u172_48 16F8  
                                     i2u165_40 1EBC                     ??_TMR0_SetInterruptHandler 00D5  
                                     i2u149_41 1C26                                       i2u164_49 1F98  
                                     i2u173_41 20CA                                       i2u172_49 170C  
                                     i2u165_41 1EB8                                       i2u158_40 2210  
                                     i2u166_40 1EDE                                       i2u158_41 220C  
                                     i2u166_41 1EDA                                       i2u174_48 20D4  
                                     i2u167_40 1678                                       i2u174_49 20E6  
                                     i2u167_41 1674                                       i2u176_40 18FC  
                                     i2u176_41 18F8                                       i2u177_40 190A  
                                     i2u169_40 16AE                                       i2u168_48 168C  
                                     i2u177_41 1906                                       i2u169_41 16AA  
                                     i2u168_49 16A0                                       _PIR1bits 000F9E  
                                     i2u178_40 191E                                       i2u178_41 191A  
              ??_EUSART_SetFramingErrorHandler 00D5                                       i2u179_40 1930  
                                     i2u195_40 0030                                       i2u179_41 192A  
                                     i2u195_41 002C                                       _PIR2bits 000FA1  
                                     i2u179_46 1932                                       i2u196_40 003E  
                                     i2u196_41 003A                  _Danie_ModbasRtu_analog_Output 00AB  
                                     i2u197_40 0054                                       i2u197_41 0050  
                                     i2u198_40 0062                                       i2u198_41 005E  
                                     i2u199_40 0070                                       i2u199_41 006C  
                                ??_TMR0_Reload 0001                          __end_of_I2C_MasterFsm 1BC6  
                                     _RCONbits 000FD0                       Read_analog_input@Number_ 0010  
                                    main@F3034 00F6                                      main@F3036 00F3  
                       __Bin_input_Output@Temp 0008                    __end_of_I2C_DO_RX_NACK_STOP 2352  
           __end_of_ModbasRtu_Register_address 1F64                     _ModbasRtu_Register_address 1F2A  
                                     _TMR0_ISR 1F64           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 2398            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 2392  
                                     _TMR2_ISR 20BA                __end_of_I2C_MasterEnableRestart 23BE  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
                     Read_analog_input@address 0016                          __end_of_I2C_SetBuffer 2180  
                       ?_I2C_DO_SEND_ADR_WRITE 0001                       I2C_MasterSendTxData@data 00D3  
               ??_TMR2_DefaultInterruptHandler 0001                      ?_TMR2_SetInterruptHandler 00D3  
                     wr2RegCompleteHandler@ptr 00DC                                  crc_chk@length 0003  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 00D3  
                                    copy_data0 1E3C                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 00DC                               ??_I2C_ReadNBytes 00E8  
                                   _I2C_Poller 21E0                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                            ??_TMR2_Initialize 00D5                               ?_modbasRtu_Slave 0001  
                       ?_rd2RegCompleteHandler 00DC                                 _Data_integrity 1BC6  
                             ??_I2C_MasterRead 00E4                          fp__EUSART_Receive_ISR 0000  
                          I2C_WriteNBytes@data 00E4                               ??_I2C_MasterOpen 00D3  
                       ?_wr2RegCompleteHandler 00DC                               ??_I2C_MasterStop 00D3  
                     ??_I2C_MasterWaitForEvent 00D3                               ??_I2C_Initialize 00D3  
                    fp__I2C_DO_RX_NACK_RESTART 0000                                       __Hrparam 0000  
                                     __Lrparam 0000                           __end_of_I2C_DO_RESET 22C0  
                              _USART_UDRE_vect 1F9A                        ??_OSCILLATOR_Initialize 00D3  
                          _EUSART_ErrorHandler 00E9                           _I2C_DO_SEND_ADR_READ 22A4  
                  ?_EUSART_DefaultErrorHandler 0001                              ?_TIMER0_COMP_vect 0001  
                          __end_of_TMR0_Reload 2392                        __end_of_Error_modbasRtu 2284  
                           ??_TIMER0_COMP_vect 001E                                _I2C_MasterClose 23C6  
                I2C_SetAddressNackCallback@ptr 00DA                   _Danie_ModbasRtu_Binary_input 0040  
                              I2C_Open@address 00D3                                    check_sum@RC 000A  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 23BE  
                              _I2C_MasterWrite 2332                           _EUSART_RxDataHandler 20E8  
                            ??_I2C_WriteNBytes 00E8                                       __ptext10 224A  
                                     __ptext11 196A                                       __ptext20 1D52  
                                     __ptext12 22F6                                       __ptext21 1854  
                                     __ptext13 2300                                       __ptext30 2342  
                                     __ptext22 2180                                       __ptext14 230A  
                                     __ptext31 234A                                       __ptext23 233A  
                                     __ptext15 2314                                       __ptext40 2294  
                                     __ptext32 2352                                       __ptext24 1D9C  
                                     __ptext16 231E                                       __ptext41 22A4  
                                     __ptext33 235A                                       __ptext25 21E0  
                                     __ptext17 1C9C                                       __ptext50 23AA  
                                     __ptext42 22CC                                       __ptext34 2362  
                                     __ptext26 2284                                       __ptext18 221A  
                                     __ptext51 23AE                                       __ptext43 19E8  
                                     __ptext35 236A                                       __ptext27 1B56  
                                     __ptext19 2332                                       __ptext60 215C  
                                     __ptext52 23B2                                       __ptext44 23A2  
                                     __ptext36 2372                                       __ptext28 1C34  
                                     __ptext61 23B6                                       __ptext53 1DE4  
                                     __ptext45 225E                                       __ptext37 22C0  
                                     __ptext29 22B4                                       __ptext70 23CE  
                                     __ptext62 23BA                                       __ptext54 1FCC  
                                     __ptext46 2328                                       __ptext38 1716  
                                     __ptext71 165A                                       __ptext63 23BE  
                                     __ptext55 1FFC                                       __ptext47 2380  
                                     __ptext39 1594                                       __ptext80 1198  
                                     __ptext72 18E6                                       __ptext64 208C  
                                     __ptext56 202C                                       __ptext48 23A6  
                                     __ptext81 1CFC                                       __ptext73 238C  
                                     __ptext65 23C2                                       __ptext57 205C  
                                     __ptext49 2386                                       __ptext90 17BE  
                                     __ptext82 1022                                       __ptext74 20BA  
                                     __ptext66 23C6                                       __ptext58 2232  
                                     __ptext91 2392                                       __ptext83 12A4  
                                     __ptext75 23D2                                       __ptext67 23CA  
                                     __ptext59 1A66                                       __ptext92 23D6  
                                     __ptext84 1AE4                                       __ptext76 1F64  
                                     __ptext93 2398                                       __ptext85 14AE  
                                     __ptext77 23D4                                       __ptext69 1EAC  
                                     __ptext94 20E8                                       __ptext86 1F2A  
                                     __ptext78 21FE                                       __ptext95 0000  
                                     __ptext87 2272                                       __ptext79 1EEC  
                                     __ptext88 1E6A                                       __ptext89 1BC6  
          __end_of_I2C_SetDataCompleteCallback 224A                    _I2C_SetDataCompleteCallback 2232  
                      ?_I2C_DO_RX_NACK_RESTART 0001                         __end_of_Data_integrity 1C34  
                     __end_of_I2C_DO_SEND_STOP 2362                                    ??_check_sum 000A  
         __end_of_TMR0_DefaultInterruptHandler 23D6                   _TMR0_DefaultInterruptHandler 23D4  
                      ?_EUSART_SetErrorHandler 00D3                                _I2C_SetCallback 1A66  
                ??_I2C_SetDataCompleteCallback 00DC                                       crc_chk@j 0006  
EUSART_SetOverrunErrorHandler@interruptHandler 00D3                                       isa$xinst 000000  
                 _Danie_ModbasRtu_analog_input 00BF                                       int$flags 0048  
                        ?_I2C_DO_SEND_ADR_READ 0001             __end_of_INTERRUPT_InterruptManager 0108  
                   _INTERRUPT_InterruptManager 0008          __end_of_EUSART_SetFramingErrorHandler 231E  
                _EUSART_SetFramingErrorHandler 2314                                       main@bitt 010A  
                                     main@red2 0100                       __end_of_I2C_MasterIsNack 2272  
                     __end_of_I2C_MasterSetIrq 23A6                                     _INTCONbits 000FF2  
                           I2C_WriteNBytes@len 00E6                          ?_EUSART_RxDataHandler 0001  
                       ??_INTERRUPT_Initialize 00D3                 __end_of_I2C_DO_RX_NACK_RESTART 234A  
                               _USART_UDR_vect 008C                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                      ?_Changing_Discrete_Output 0001  
                       fp__EUSART_Transmit_ISR 0000                                ?_Data_integrity 0001  
                               _USART_RXC_vect 18E6                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 2328                        __end_of_USART_UDRE_vect 1FCC  
                               _USART_TXC_vect 23CE                            _I2C_DO_SEND_RESTART 2362  
                       fp__I2C_DO_ADDRESS_NACK 0000           __end_of_EUSART_SetRxInterruptHandler 230A  
                 _EUSART_SetRxInterruptHandler 2300                fp__TMR0_DefaultInterruptHandler 0000  
                ?_TMR0_DefaultInterruptHandler 0001                                    _TMR0_Reload 238C  
                     __Bin_input_Output@NUMBER 0007                             _EUSART_Receive_ISR 165A  
                                  crc_chk@data 0001  EUSART_SetFramingErrorHandler@interruptHandler 00D3  
                      __end_of_I2C_MasterClose 23CA                             fp__I2C_DO_TX_EMPTY 0000  
                      __end_of_I2C_MasterStart 23C2                        __end_of_I2C_MasterWrite 233A  
                         ?_I2C_DO_SEND_RESTART 0001                               ?_Error_modbasRtu 0001  
                          ?_EUSART_Receive_ISR 0001                  fp__EUSART_DefaultErrorHandler 0000  
                              _TMR0_Initialize 2138                        _analog_output_recording 1CFC  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                 ModbasRtu_Register_address@Hi 0007                   ModbasRtu_Register_address@Li 0008  
                       __end_of_USART_RXC_vect 196A                        __end_of_I2C_SetCallback 1AE4  
               __end_of_PIN_MANAGER_Initialize 2138                         __end_of_USART_TXC_vect 23D2  
                    Error_modbasRtu@Temp_Error 000D                  __end_of_rd1RegCompleteHandler 205C  
                             fp__I2C_DO_RX_ACK 0000                           ??_EUSART_Receive_ISR 0001  
                __end_of_wr1RegCompleteHandler 1FFC                          _TMR2_InterruptHandler 0042  
